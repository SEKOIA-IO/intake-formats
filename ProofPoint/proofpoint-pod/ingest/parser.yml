name: proofpoint-pod
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
  - name: parse_datetime
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.ts}}"
        output_field: date
  - name: set_common_fields
  - name: set_fields_for_messages
    filter: '{{json_event.message.type == "message"}}'
  - name: set_fields_for_maillog
    filter: '{{json_event.message.type == "maillog"}}'
  - name: set_fields_for_message_parts
    filter: '{{json_event.message.type == "msgParts"}}'
  - name: set_fields_for_message_parts_url
    filter: '{{json_event.message.type == "msgPartsUrl"}}'

stages:
  set_common_fields:
    actions:
      - set:
          '@timestamp': '{{parse_datetime.date}}'
          event.kind: 'event'
          observer.vendor: 'ProofPoint'
          observer.product: 'ProofPoint On Demand'
  set_fields_for_messages:
    actions:
      - set:
          event.dataset: 'message'
          event.category: ["email", "network"]
          event.action: '{{json_event.message.filter.disposition}}'
          email.local_id: '{{json_event.message.guid}}'
          email.message_id: '{{json_event.message.msg.normalizedHeader["message-id"][0]}}'
          email.subject: '{{json_event.message.msg.normalizedHeader.subject[0]}}'
          email.from.address: '{{json_event.message.msg.parsedAddresses.from}}'
          email.to.address: '{{json_event.message.msg.parsedAddresses.to}}'
          email.cc.address: '{{json_event.message.msg.parsedAddresses.cc}}'
          email.reply_to.address: '{{json_event.message.msg.parsedAddresses["reply-to"]}}'
          source.ip: '{{json_event.message.connection.ip}}'
          source.domain: '{{json_event.message.connection.host}}'
          source.geo.country_iso_code: '{{json_event.message.connection.country}}'
          tls.cipher: '{{json_event.message.connection.tls.inbound.cipher}}'
          tls.version: '{{json_event.message.connection.tls.inbound.version}}'
          network.transport: 'tcp'
          proofpoint.pod.cluster.id: '{{json_event.message.metadata.origin.data.cid}}'
          proofpoint.pod.threat.scores: '{{json_event.message.filter.modules.spam.scores.classifiers}}'
          proofpoint.pod.routes: '{{json_event.message.filter.routes}}'
          proofpoint.pod.quarantine: '{{json_event.message.filter.quarantine}}'
          proofpoint.pod.smtp.sender: '{{json_event.message.envelope.from}}'
          proofpoint.pod.smtp.recipients: '{{json_event.message.envelope.rcpts}}'
      - set:
          network.protocol: '{{json_event.message.connection.protocol.split(":")[0]}}'
        filter: '{{json_event.message.connection.protocol != None}}'
      - set:
          proofpoint.pod.modules: '{{json_event.message.filter.modules.keys() | list}}'
        filter: '{{json_event.message.filter.get("modules") != None}}'
      - translate:
        dictionary:
          'continue': ['allowed']
          'discard': ['denied']
        mapping:
          event.action: event.type
        fallback: ["info"]
  set_fields_for_maillog:
    actions:
      - set:
          event.dataset: 'maillog'
          event.type: ["info"]
          event.category: ["email"]
          error.code: '{{json_event.message.sm.dsn}}'
          email.local_id: '{{json_event.message.sm.qid}}'
          email.message_id: '{{json_event.message.sm.msgid}}'
          email.x_mailer: '{{json_event.message.sm.mailer}}'
          email.from.address: '{{json_event.message.sm.from}}'
          email.to.address: '{{json_event.message.sm.to}}'
          network.transport: 'tcp'
          proofpoint.pod.cluster.id: '{{json_event.message.pps.cid}}'
      - set:
          email.from.address: '[{{json_event.message.sm.from}}]'
        filter: '{{json_event.message.sm.get("from") != None}}'
      - set:
          tls.cipher: '{{json_event.message.tls.cipher}}'
        filter: '{{json_event.message.tls.cipher != "NONE"}}'
      - set:
          tls.version: '{{json_event.message.tls.version}}'
        filter: '{{json_event.message.tls.version != "NONE"}}'
  set_fields_for_message_parts:
      actions:
      - set:
          event.category: ["email"]
          event.dataset: 'msgParts'
          event.type: ["info"]
          email.local_id: '{{json_event.message.guid}}'
          email.attachments: >
              [
                {
                  "file": {
                    "mime_type": "{{json_event.message.msgParts.detectedMime}}",
                    {% if json_event.message.msgParts.labeledName != "" %}
                    "name": "{{json_event.message.msgParts.labeledName}}",
                    {% else %}
                    "name": "{{json_event.message.msgParts.detectedName}}",
                    {% endif %}
                    {% if json_event.message.msgParts.labeledExt != "" %}
                    "extension": "{{json_event.message.msgParts.labeledExt}}",
                    {% else %}
                    "extension": "{{json_event.message.msgParts.detectedExt}}",
                    {% endif %}
                    "size": "{{json_event.message.msgParts.detectedSizeBytes}}",
                    "hash": {
                      "md5": "{{json_event.message.msgParts.md5}}",
                      "sha256": "{{json_event.message.msgParts.sha256}}",
                    }
                  }
                }
              ]
          proofpoint.pod.urls: >
              [
                {% for url in json_event.message.msgParts.urls %}
                {% if url.url | is_url %}"{{url.url}}",{% endif %}
                {% endfor %}
              ]
          proofpoint.pod.msgpart.id: '{{json_event.message.uuid}}'
      - set:
          url.original: '{{set_fields_for_message_parts.proofpoint.pod.urls[0]}}'
        filter: '{{set_fields_for_message_parts.proofpoint.pod.urls != ""}}'
      - set:
          file.name: '{{set_fields_for_message_parts.email.attachments[0].file.name}}'
        filter: '{{set_fields_for_message_parts.email.attachments[0].file.name != ""}}'
      - set:
          file.hash.sha256: '{{set_fields_for_message_parts.email.attachments[0].file.hash.sha256}}'
          file.hash.md5: '{{set_fields_for_message_parts.email.attachments[0].file.hash.md5}}'
        filter: '{{set_fields_for_message_parts.email.attachments[0].file.hash.sha256 != ""}}'
  set_fields_for_message_parts_url:
      actions:
      - set:
          event.category: ["email"]
          event.dataset: 'msgPartsUrl'
          event.type: ["info"]
          email.local_id: '{{json_event.message.guid}}'
          url.original: '{{json_event.message.url}}'
          proofpoint.pod.msgpart.id: '{{json_event.message.part_uuid}}'
