name: office 365
pipeline:
  - name: json_event
    external:
      name: json.parse-json
  - name: parse_email
    external:
      name: grok.match
      properties:
        input_field: "{{json_event.message.UserId}}"
        output_field: message
        pattern: "%{EMAILADDRESS:email}"
  - name: parse_data
    filter: "{{json_event.message.RecordType == 64}}"
    external:
      name: json.parse-json
      properties:
        input_field: "{{json_event.message.Data}}"
        output_field: ParsedData
  - name: parse_client_ip
    external:
      name: grok.match
      properties:
        input_field: "{{json_event.message.ClientIP}}"
        output_field: result
        pattern: "::ffff:%{IP:ip}|%{IP:ip}(:%{INT:port})?"
    filter: '{{json_event.message.ClientIP != null and json_event.message.ClientIP != "" and json_event.message.ClientIP != "<null>"}}'
  - name: set_common_fields
  - name: set_office365_fields
  - name: parse_exchange_admin
    filter: "{{json_event.message.RecordType == 1}}"
  - name: parse_exchange_item
    filter: "{{json_event.message.RecordType == 2}}"
  - name: parse_exchange_item_group
    filter: "{{json_event.message.RecordType == 3}}"
  - name: parse_share_point
    filter: "{{json_event.message.RecordType == 4}}"
  - name: parse_exchange_item_aggregated
    filter: "{{json_event.message.RecordType == 50}}"
  - name: parse_network_traffic
    filter: "{{json_event.message.RecordType in [15, 25]}}"
  - name: parse_azure_active_directory_operation
    filter: "{{json_event.message.RecordType in [8, 15]}}"
  - name: parse_sharepoint_file_operation
    filter: "{{json_event.message.RecordType in [6, 14]}}"
  - name: parse_team
    filter: "{{json_event.message.RecordType == 25}}"
  - name: parse_microsoft_defender_email
    filter: "{{json_event.message.RecordType in [28, 41, 47]}}"
  - name: parse_yammer
    filter: "{{json_event.message.RecordType == 22}}"
  - name: parse_automated_investigation_and_response
    filter: "{{json_event.message.RecordType == 64}}"
  - name: parse_mcas_alerts
    filter: "{{json_event.message.RecordType == 98}}"
  - name: parse_security_compliance_alerts
    filter: "{{json_event.message.RecordType == 40}}"
  - name: parse_form_app
    filter: "{{json_event.message.RecordType == 66}}"
  - name: parse_browser
    filter: "{{json_event.message.RecordType == 36}}"
  - name: parse_power_bi
    filter: "{{json_event.message.RecordType == 20}}"

stages:
  set_common_fields:
    actions:
      - set:
          "@timestamp": "{{json_event.message.CreationTime}}"
          service.name: "{{json_event.message.Workload}}"
          event.action: "{{json_event.message.Operation}}"
          event.kind: "event"
          event.code: "{{json_event.message.RecordType | string}}"
          event.reason: "{{json_event.message.ActionName}}"
          user.name: "{{json_event.message.UserId}}"
          user.id: "{{json_event.message.UserKey}}"
          user.email: "{{parse_email.message.email}}"
          organization.id: "{{json_event.message.OrganizationId}}"
          action.id: "{{json_event.message.RecordType}}"
          action.name: "{{json_event.message.Operation}}"
      - set:
          source.ip: "{{parse_client_ip.result.ip}}"
        filter: "{{parse_client_ip.result.ip | is_ipaddress}}"

      - set:
          source.port: "{{parse_client_ip.result.port}}"
        filter: '{{json_event.message.get("ClientIP") != None and json_event.message.ClientIP != "" and json_event.message.ClientIP != "<null>"}}'
      - set:
          action.target: "user"
        filter: '{{json_event.message.get("UserId") != None}}'
      - translate:
        dictionary:
          "Succeeded": "success"
          "critical": "failure"
        mapping:
          json_event.message.ResultStatus: action.outcome
        fallback: "success"

  set_office365_fields:
    actions:
      - set:
          office365.record_type: "{{json_event.message.RecordType}}"
          office365.result_status: "{{json_event.message.ResultStatus}}"
          office365.user_type.code: "{{json_event.message.UserType}}"
          office365.scope.code: "{{json_event.message.Scope}}"
          office365.audit.object_id: "{{json_event.message.ObjectId}}"
          office365.virus_info: "{{json_event.message.VirusInfo}}"
          office365.virus_vendor: "{{json_event.message.VirusVendor}}"
      - translate:
        dictionary:
          0: "Regular"
          1: "Reserved"
          2: "Admin"
          3: "DcAdmin"
          4: "System"
          5: "Application"
          6: "ServicePrincipal"
          7: "CustomPolicy"
          8: "SystemPolicy"
        mapping:
          office365.user_type.code: office365.user_type.name
      - translate:
        dictionary:
          0: "Online"
          1: "Onprem"
        mapping:
          office365.scope.code: office365.scope.name
        filter: "{{json_event.message.Scope != null}}"
      - set:
          office365.context.aad_session_id: "{{json_event.message.AppAccessContext.AADSessionId}}"
          office365.context.api_id: "{{json_event.message.AppAccessContext.APIId}}"
          office365.context.client.id: "{{json_event.message.AppAccessContext.ClientAppId}}"
          office365.context.client.name: "{{json_event.message.AppAccessContext.ClientAppName}}"
          office365.context.correlation.id: "{{json_event.message.AppAccessContext.CorrelationId}}"
        filter: '{{json_event.message.get("AppAccessContext") != None}}'

  parse_exchange_admin:
    actions:
      - translate:
        dictionary:
          "True": "success"
          "False": "failure"
        mapping:
          json_event.message.ResultStatus: action.outcome
      - set:
          office365.exchange_admin.parameters: >
            [
              {%- for parameter in json_event.message.Parameters -%}
                "{{ parameter.Name }}:{{ parameter.Value }}",
              {%- endfor -%}
            ]
        filter: '{{json_event.message.get("Parameters") != None}}'
      - set:
          office365.context.aad_session_id: "{{json_event.message.SessionId}}"

  parse_exchange_item:
    actions:
      - translate:
        dictionary:
          "MailboxLogin": '["authentication"]'
        mapping:
          event.action: event.category
        fallback: '["email", "file"]'
      - translate:
        dictionary:
          "Create": '["info", "creation"]'
          "Update": '["info", "change"]'
          "HardDelete": '["info", "deletion"]'
          "SoftDelete": '["info", "deletion"]'
          "MoveToDeletedItems": '["info", "deletion"]'
          "MailItemsAccessed": '["info"]'
          "MailboxLogin": '["start"]'
        mapping:
          event.action: event.type
        fallback: '["info"]'
      - set:
          user.id: "{{json_event.message.MailboxOwnerSid}}"
          office365.exchange.mailbox_guid: "{{json_event.message.MailboxGuid}}"
          office365.exchange.modified_properties: "{{json_event.message.ModifiedProperties}}"
          office365.context.aad_session_id: "{{json_event.message.SessionId}}"

  parse_exchange_item_group:
    actions:
      - set:
          event.category: ["email"]
          event.type: ["info"]

      - set:
          event.category: ["authentication"]
          event.type: ["start"]
        filter: "{{final.event.action == 'MailboxLogin'}}"

      - set:
          process.name: "{{json_event.message.ClientProcessName}}"
          office365.exchange.client_version: "{{json_event.message.ClientVersion}}"
          office365.exchange.email.subjects: >
            [
              {%- if json_event.message.AffectedItems != None -%}
                {%- for item in json_event.message.AffectedItems -%}
                  "{{ item.Subject }}"
                {%- endfor -%}
              {%- endif -%}  
            ]
          office365.exchange.email.paths: >
            [
              {%- if json_event.message.AffectedItems != None -%}
                {%- for item in json_event.message.AffectedItems -%}
                  "{{ item.ParentFolder.Path }}"
                {%- endfor -%}
              {%- endif -%}  
            ]

          email.attachments: >
            [
              {%- if json_event.message.AffectedItems != None -%}
                {%- for email in json_event.message.AffectedItems -%}
                  {%- for file in email.Attachments.split("; ") -%}
                    {"file":{ "name": "{{ file.split(" (")[0] }}", "size": "{{ file.split(" (")[1].strip('b)') }}" }},
                  {%- endfor -%}
                {%- endfor -%}
              {%- endif -%}
            ]
      - set:
          office365.context.aad_session_id: "{{json_event.message.SessionId}}"
  parse_share_point:
    actions:
      - set:
          event.category: ["file"]
          event.type: ["access"]

          office365.audit.site: "{{json_event.message.Site}}"
          office365.audit.event_source: "{{json_event.message.EventSource}}"
          office365.audit.item_type: "{{json_event.message.ItemType}}"
          office365.audit.platform: "{{json_event.message.Platform}}"

          user_agent.original: "{{json_event.message.UserAgent}}"

  parse_exchange_item_aggregated:
    actions:
      - set:
          office365.context.aad_session_id: "{{json_event.message.SessionId}}"

  parse_network_traffic:
    actions:
      - set:
          action.target: "network-traffic"
          event.category: ["network"]
          event.type: ["info"]
          office365.logon_error: "{{json_event.message.LogonError}}"
          office365.error_number: "{{json_event.message.ErrorNumber}}"

      - set:
          host.os.full: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "OS" %}{% if deviceProperty.get("Value") != None and deviceProperty.Value != "<Null>"%}{{deviceProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          host.name: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "DisplayName" %}{% if deviceProperty.get("Value") != None and deviceProperty.Value != "<Null>"%}{{deviceProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.device.id: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "Id" %}{% if deviceProperty.get("Value") != None and deviceProperty.Value != "<Null>"%}{{deviceProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.device.is_compliant: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "IsCompliant" %}{% if deviceProperty.get("Value") != None and deviceProperty.Value != "<Null>"%}{{deviceProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.device.is_compliant_and_managed: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "IsCompliantAndManaged" %}{% if deviceProperty.get("Value") != None and deviceProperty.Value != "<Null>"%}{{deviceProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.device.trust_type: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "TrustType" %}{% if deviceProperty.get("Value") != None and deviceProperty.Value != "<Null>"%}{{deviceProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.device.browser_type: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "BrowserType" %}{% if deviceProperty.get("Value") != None and deviceProperty.Value != "<Null>"%}{{deviceProperty.Value}}{% endif %}{% endif %}{% endfor %}'
        filter: '{{json_event.message.get("DeviceProperties") != None}}'

      - set:
          user_agent.original: '{% for extendedProperty in json_event.message.ExtendedProperties %}{% if extendedProperty.Name == "UserAgent" %}{% if extendedProperty.get("Value") != None and extendedProperty.Value != "<Null>"%}{{extendedProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.auth.user_authentication_method: '{% for extendedProperty in json_event.message.ExtendedProperties %}{% if extendedProperty.Name == "UserAuthenticationMethod" %}{% if extendedProperty.get("Value") != None and extendedProperty.Value != "<Null>"%}{{extendedProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.auth.request_type: '{% for extendedProperty in json_event.message.ExtendedProperties %}{% if extendedProperty.Name == "RequestType" %}{% if extendedProperty.get("Value") != None and extendedProperty.Value != "<Null>"%}{{extendedProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.auth.result_status_detail: '{% for extendedProperty in json_event.message.ExtendedProperties %}{% if extendedProperty.Name == "ResultStatusDetail" %}{% if extendedProperty.get("Value") != None and extendedProperty.Value != "<Null>"%}{{extendedProperty.Value}}{% endif %}{% endif %}{% endfor %}'
          office365.auth.keep_me_signed_in: '{% for extendedProperty in json_event.message.ExtendedProperties %}{% if extendedProperty.Name == "KeepMeSignedIn" %}{% if extendedProperty.get("Value") != None and extendedProperty.Value != "<Null>"%}{{extendedProperty.Value}}{% endif %}{% endif %}{% endfor %}'
        filter: '{{json_event.message.get("ExtendedProperties", []) != []}}'

  parse_azure_active_directory_operation:
    actions:
      - translate:
        dictionary:
          "UserLoggedIn": '["authentication"]'
        mapping:
          event.action: event.category
        fallback: '["iam"]'
      - translate:
        dictionary:
          "UserLoggedIn": '["start"]'
        mapping:
          event.action: event.type
        fallback: '["info"]'

      - set:
          event.category: ["iam"]
          event.type: ["change"]
        filter: '{{json_event.message.Operation.startswith("Update")}}'
      - set:
          office365.context.correlation.id: "{{json_event.message.InterSystemsId}}"
          office365.context.aad_session_id: '{% for deviceProperty in json_event.message.DeviceProperties %}{% if deviceProperty.Name == "SessionId" %}{{deviceProperty.Value}}{% endif %}{% endfor %}'

  parse_sharepoint_file_operation:
    actions:
      - set:
          file.name: "{{json_event.message.SourceFileName}}"
          file.directory: "{{json_event.message.SourceRelativeUrl}}"
          event.category: ["file"]
          event.type: ["info"]
          user_agent.original: "{{json_event.message.UserAgent}}"
          file.extension: "{{json_event.message.SourceFileExtension}}"
          action.outcome: "success"
          url.full: "{{json_event.message.ObjectId or json_event.message.SiteUrl}}"
          url.original: "{{json_event.message.ObjectId}}"
          action.properties: >
            [
              {
                {% if json_event.message.get("SourceFileName") != None %}"SourceFileName": "{{json_event.message.SourceFileName}}",{% endif %}
                {% if json_event.message.get("SourceRelativeUrl") != None %}"SourceRelativeUrl": "{{json_event.message.SourceRelativeUrl}}",{% endif %}
                {% if json_event.message.get("SiteUrl") != None %}"SiteUrl": "{{json_event.message.SiteUrl}}",{% endif %}
                {% if json_event.message.get("UserAgent") != None %}"UserAgent": "{{json_event.message.UserAgent}}",{% endif %}
              }
            ]

  parse_team:
    actions:
      - set:
          office365.teams.action: "{{json_event.message.Action}}"
          office365.teams.communication.type: "{{json_event.message.CommunicationType}}"
          office365.teams.channel.id: "{{json_event.message.ChannelGuid}}"
          office365.teams.channel.name: "{{json_event.message.ChannelName}}"
          office365.teams.channel.type: "{{json_event.message.ChannelType}}"
          office365.teams.message.id: "{{json_event.message.MessageId}}"
          office365.teams.message.version: "{{json_event.message.MessageVersion}}"
          office365.teams.message.size: "{{json_event.message.MessageSizeInBytes}}"
          office365.teams.message.urls: "{{json_event.message.MessageURLs}}"
          office365.teams.team.id: "{{json_event.message.TeamGuid}}"
          office365.teams.team.name: "{{json_event.message.TeamName}}"
          office365.teams.invitee: "{{json_event.message.Invitee}}"
      - set:
          office365.teams.team.members: >
            {%
              set mapping = {
                0: "Member",
                1: "Owner",
                2: "Guest"
              }
            %}[
              {%for member in json_event.message.Members %}
              {"id": "{{member.UPN}}", "role": "{{mapping.get(member.Role)}}"},
              {% endfor %}
            ]
        filter: '{{json_event.message.get("Members", []) != []}}'

  parse_microsoft_defender_email:
    actions:
      - set:
          email.local_id: "{{json_event.message.NetworkMessageId}}"
          email.subject: "{{json_event.message.Subject}}"
          email.delivery_timestamp: "{{json_event.message.MessageTime}}"

      - set:
          source.ip: "{{json_event.message.SenderIp}}"
        filter: "{{json_event.message.SenderIp | is_ipaddress}}"

      - set:
          event.url: "{{json_event.message.EventDeepLink}}"
          rule.category: "{{json.event.message.Policy}}"
          event.action: "{{json_event.message.DeliveryAction or json_event.message.PolicyAction}}"
          action.name: "{{json_event.message.DeliveryAction or json_event.message.PolicyAction}}"
          office365.defender.email.verdict.reason: "{{json_event.message.Verdict}}"
          office365.defender.email.verdict.confidence: "{{json_event.message.PhishConfidenceLevel}}"
          office365.defender.email.delivery.action: "{{json_event.message.DeliveryAction}}"
          office365.defender.email.delivery.original_location: "{{json_event.message.OriginalDeliveryLocation}}"
          office365.defender.email.delivery.latest_location: "{{json_event.message.LatestDeliveryLocation}}"
          office365.defender.detection.type: "{{json_event.message.DetectionType}}"
          office365.defender.detection.method: "{{json_event.message.DetectionMethod}}"
          office365.defender.detection.technology: "{{json_event.message.ThreatsAndDetectionTech}}"
          office365.defender.connectors: "{{json_event.message.Connectors}}"
          office365.defender.additional_actions: "{{json_event.message.AdditionalActionsAndResults}}"
          office365.defender.auth_details: "{{json_event.message.AuthDetails}}"
          office365.defender.system_overrides: "{{json_event.message.SystemOverrides}}"

      - set:
          file.name: "{{json_event.message.FileData.FileName}}"
          file.hash.sha256: "{{json_event.message.FileData.SHA256}}"
          url.original: "{{json_event.message.FileData.FilePath}}"
          office365.defender.malware_family: "{{json_event.message.FileData.MalwareFamily}}"
        filter: '{{json_event.message.get("FileData") != None}}'

      - set:
          email.message_id: "{{json_event.message.InternetMessageId[1:-1]}}"
        filter: '{{json_event.message.get("InternetMessageId") != None}}'
      - set:
          email.reply_to.address: '["{{json_event.message.P1Sender}}"]'
        filter: '{{json_event.message.get("P1Sender") != None}}'
      - set:
          email.from.address: '["{{json_event.message.P2Sender}}"]'
        filter: '{{json_event.message.get("P2Sender") != None}}'
      - set:
          email.to.address: "{{json_event.message.Recipients|string}}"
        filter: '{{json_event.message.get("Recipients", []) != []}}'
      - set:
          email.attachments: >
            [
              {% for attachment in json_event.message.AttachmentData %}
              {
                "file": {
                  {% if attachment.FileName != null %}"name": "{{attachment.FileName}}",{% endif %}
                  {% if attachment.FileType != null %}"mime_type": "{{attachment.FileType}}",{% endif %}
                  {% if attachment.SHA256 != null %}"hash": {"sha256": "{{attachment.SHA256}}"},{% endif %}
                }
              },
              {% endfor %}
            ]
          office365.defender.email.attachments: >
            {%
              set mapping = {
                0: "good",
                1: "bad",
                -1: "error",
                -2: "timeout",
                -3: "pending"
              }
            %}[
              {% for attachment in json_event.message.AttachmentData %}
              {
                {% if attachment.FileName != null %}"name": "{{attachment.FileName}}",{% endif %}
                {% if attachment.FileVerdict != null %}"verdict": {"code": "{{attachment.FileVerdict}}", "name": "{{mapping.get(attachment.FileVerdict)}}"},{% endif %}
                {% if attachment.MalwareFamily != null %}"name": "{{attachment.MalwareFamily}}",{% endif %}
              },
              {% endfor %}
            ]
        filter: '{{json_event.message.get("AttachmentData", []) != []}}'

  parse_yammer:
    actions:
      - set:
          file.name: "{{json_event.message.FileName}}"
          event.category: ["file"]

  parse_form_app:
    actions:
      - set:
          office365.source.application: "{{json_event.message.SourceApp}}"
          office365.form_name: "{{json_event.message.FormName}}"

  parse_browser:
    actions:
      - set:
          user_agent.name: "{{json_event.message.BrowserName}}"
          user_agent.version: "{{json_event.message.BrowserVersion}}"

  parse_automated_investigation_and_response:
    actions:
      - set:
          office365.investigation.id: "{{json_event.message.InvestigationId}}"
          office365.investigation.name: "{{json_event.message.InvestigationName}}"
          office365.investigation.type: "{{json_event.message.InvestigationType}}"
          office365.investigation.status: "{{json_event.message.Status}}"
          office365.investigation.alert.type: "{{parse_data.ParsedData.AlertType}}"
          office365.investigation.alert.provider.name: "{{parse_data.ParsedData.ProviderName}}"
          office365.investigation.alert.provider.status: "{{parse_data.ParsedData.Status}}"
          office365.investigation.alert.severity: "{{parse_data.ParsedData.Severity}}"
          office365.investigation.alert.is_incident: "{{parse_data.ParsedData.IsIncident}}"
          office365.investigation.alert.correlation_key: "{{parse_data.ParsedData.CorrelationKey}}"
          office365.investigation.alert.category: "{{parse_data.ParsedData.Category}}"
          office365.investigation.alert.source_type: "{{parse_data.ParsedData.SourceAlertType}}"
          event.start: "{{json_event.message.StartTimeUtc}}"
          event.end: "{{json_event.message.EndTimeUtc}}"
          host.name: "{{parse_data.ParsedData.MachineName}}"
          log.level: "{{parse_data.ParsedData.Severity}}"
          rule.name: "{{parse_data.ParsedData.AlertDisplayName}}"

      - set:
          event.kind: '{% if parse_data.ParsedData.IsIncident %}{{"alert"}}{% else %}{{"event"}}{% endif %}'

      - set:
          office365.investigation.email.urls: '[{% for Property in parse_data.ParsedData.Entities %}{% for Url in Property.Urls %} "{{Url}}", {% endfor %}{% endfor %}]'
          office365.investigation.email.sender.ip: >
            [
              {%- for Property in parse_data.ParsedData.Entities -%}
                {%- if Property.SenderIP -%}
                  "{{Property.SenderIP}}",
                {%- endif -%}
              {%- endfor -%}
            ]
          office365.investigation.email.subjects: >
            [
              {%- for Property in parse_data.ParsedData.Entities -%}
                {%- if Property.Subject -%}
                  "{{Property.Subject}}",
                {%- endif -%}
              {%- endfor -%}
            ]
          office365.investigation.email.sender.domains: >
            [
              {%- for Property in parse_data.ParsedData.Entities -%}
                {%- if Property.P1SenderDomain -%}
                  "{{Property.P1SenderDomain}}",
                {%- endif -%}
              {%- endfor -%}
            ]
          office365.investigation.threats: >
            [
            {%- for Property in parse_data.ParsedData.Entities -%}
              {%- if Property.Threats -%}
                "{{Property.Threats}}",
              {%- endif -%}
            {%- endfor -%}
            ]
          email.from.address: >
            [
            {%- for Property in parse_data.ParsedData.Entities -%}
              {%- if Property.Sender -%}
                "{{Property.Sender}}",
              {%- endif -%}
            {%- endfor -%}
            ]
          email.to.address: >
            [
            {%- for Property in parse_data.ParsedData.Entities -%}
              {%- if Property.Recipient -%}
                "{{Property.Recipient}}",
              {%- endif -%}
            {%- endfor -%}
            ]
          email.attachments: >-
            [
            {%- for Property in parse_data.ParsedData.Entities -%}
              {%- for file in Property.Files -%}
                {%- for file_hash in file.FileHashes -%}
                  {%- if file_hash.Algorithm == 'SHA256' -%}
                    {"file": {"name": "{{ file.Name }}", "hash": {"sha256": "{{ file_hash.Value }}"}}}
                  {%- endif -%}
                {%- endfor -%}
              {%- endfor -%}
            {%- endfor -%}
            ]
        filter: "{{parse_data.ParsedData.Entities != None and parse_data.ParsedData.Entities | length > 0}}"

  parse_mcas_alerts:
    actions:
      - set:
          event.kind: "alert"
          event.category: ["intrusion_detection"]
          event.type: ["info"]

      - set:
          office365.alert.category: "{{json_event.message.AlertCategory}}"
          office365.alert.display_name: "{{json_event.message.AlertDisplayName}}"
          office365.alert.description: "{{json_event.message.AlertDescription}}"
          office365.alert.severity: "{{json_event.message.AlertSeverity}}"
          office365.alert.client_ips: "{{json_event.message.ClientIPs}}"

  parse_security_compliance_alerts:
    actions:
      - set:
          event.kind: "alert"
          event.category: ["intrusion_detection"]
          event.type: ["info"]

      - set:
          office365.alert.category: "{{json_event.message.Category}}"
          office365.alert.display_name: "{{json_event.message.Name}}"
          office365.alert.severity: "{{json_event.message.Severity}}"

          office365.alert.source: "{{json_event.message.Source}}"
          office365.alert.status: "{{json_event.message.Status}}"
          rule.id: "{{json_event.message.PolicyId}}"

  parse_power_bi:
    actions:
      - set:
          user_agent.original: "{{json_event.message.UserAgent}}"
