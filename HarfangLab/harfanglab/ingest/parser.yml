name: harfanglab
ignored_values: [null, "", "-"]
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"

  - name: parse_last_seen
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.last_seen}}"
        output_field: datetime

  - name: parse_first_seen
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.first_seen}}"
        output_field: datetime

  - name: parse_task_info
    filter: "{{json_event.message.event_data.TaskContent != null and '<?xml' in json_event.message.event_data.TaskContent}}"
    external:
      name: xml.parse-xml
      properties:
        input_field: "{{json_event.message.event_data.TaskContent}}"
        output_field: message

  - name: parse_member_name
    filter: "{{json_event.message.event_data.get('MemberName') != None }}"
    external:
      name: grok.match
      properties:
        input_field: "{{json_event.message.event_data.MemberName}}"
        output_field: message
        pattern: "([Cc][Nn]=%{DATA:first_name} %{DATA:last_name},%{GREEDYDATA})"

  - name: agent_info

  - name: network_info
    filter: "{{json_event.message.log_type == 'network' or json_event.message.alert_subtype == 'network'}}"

  - name: process_info
    filter: "{{json_event.message.log_type == 'process'}}"

  - name: registry_info
    filter: "{{json_event.message.details_registry != null}}"

  - name: details_file
    filter: "{{json_event.message.details_file != null}}"

  - name: powershell_info
    filter: "{{json_event.message.log_type == 'powershell'}}"

  - name: alert_info
    filter: "{{json_event.message.log_type == 'alert'}}"

  - name: threat_info
    filter: "{{json_event.message.log_type == 'threat'}}"

  - name: alert_process_info
    filter: "{{json_event.message.alert_subtype == 'process'}}"

  - name: investigation_info
    filter: "{{json_event.message.log_type == 'investigation'}}"

  - name: eventlog_info
    filter: "{{json_event.message.log_type == 'eventlog'}}"

  - name: authentication_info
    filter: "{{json_event.message.log_type == 'authentication'}}"

  - name: dns_info
    filter: "{{json_event.message.log_type == 'dns_resolution'}}"

  - name: auditlog_info
    filter: "{{json_event.message.log_type == 'auditlog'}}"

  - name: agentlog_info
    filter: "{{json_event.message.log_type == 'agentlog'}}"

  - name: connectionlog_info
    filter: "{{json_event.message.log_type == 'connectionlog'}}"

  - name: driverload_info
    filter: "{{json_event.message.log_type == 'driverload'}}"

  - name: injectedthread_info
    filter: "{{json_event.message.log_type == 'injectedthread'}}"

stages:
  threat_info:
    actions:
      - set:
          harfanglab.threat_id: "{{json_event.message.id}}"
          harfanglab.status: "{{json_event.message.status}}"
          harfanglab.level: "{{json_event.message.level}}"
          harfanglab.count.users_impacted: "{{json_event.message.impacted_user_count | int}}"
          harfanglab.count.rules: "{{json_event.message.rule_count | int}}"

          event.start: "{{parse_first_seen.datetime}}"
          event.end: "{{parse_last_seen.datetime}}"

      - set:
          harfanglab.rule_level: "{{json_event.message.rules[0].rule_level}}"
        filter: "{{json_event.message.rules | length > 0}}"

  agent_info:
    actions:
      - set:
          "@timestamp": "{{json_event.message.get('@event_create_date')}}"
          agent.id: "{{json_event.message.agent.agentid}}"
          agent.name: "harfanglab"
          log.hostname: "{{json_event.message.agent.hostname}}"
          host.hostname: "{{json_event.message.agent.hostname}}"
          host.domain: "{{json_event.message.agent.domainname}}"
          host.os.version: "{{json_event.message.agent.osversion}}"
          host.os.full: "{{json_event.message.agent.osproducttype}}"
          harfanglab.groups: "{{json_event.message.groups}}"
          event.dataset: "{{json_event.message.log_type}}"
          user.roles: "{{ json_event.message.groups | map(attribute='name') | join(',') | replace('\n', '') | replace(' ', '') }}"
          organization.id: "{{json_event.message.tenant}}"

  network_info:
    actions:
      - set:
          destination.ip: "{{json_event.message.daddr}}"
        filter: "{{json_event.message.daddr | is_ipaddress}}"

      - set:
          destination.port: "{{json_event.message.dport}}"

      - translate:
        dictionary:
          "in": "inbound"
          "out": "outbound"
        mapping:
          json_event.message.direction: network.direction

      - set:
          source.ip: "{{json_event.message.saddr}}"
        filter: "{{json_event.message.saddr | is_ipaddress}}"

      - set:
          source.port: "{{json_event.message.sport}}"

          process.pid: "{{json_event.message.pid}}"
          process.executable: "{{json_event.message.image_name}}"
          user.name: "{{json_event.message.username}}"

          event.category: ["network"]
          event.type: ["connection"]

      - set:
          event.kind: "alert"
        filter: "{{ json_event.message.log_type == 'alert'}}"

  process_info:
    actions:
      - set:
          process.command_line: "{{json_event.message.commandline}}"
          process.pid: "{{json_event.message.pid}}"
          process.name: "{{json_event.message.process_name}}"
          process.pe.description: "{{json_event.message.pe_info.file_description}}"
          process.pe.original_file_name: "{{json_event.message.pe_info.original_filename}}"
          process.pe.file_version: "{{json_event.message.pe_info.file_version}}"
          process.pe.company: "{{json_event.message.pe_info.company_name}}"
          process.pe.product: "{{json_event.message.pe_info.product_name}}"
          process.executable: "{{json_event.message.image_name}}"
          user.name: "{{json_event.message.username}}"
          process.parent.executable: "{{json_event.message.parent_image}}"
          process.parent.command_line: "{{json_event.message.parent_commandline}}"
          process.parent.name: '{{json_event.message.parent_image.split("\\") | last}}'
          process.working_directory: "{{json_event.message.current_directory}}"
          process.pe.imphash: "{{json_event.message.pe_imphash}}"
          harfanglab.grandparent.process.executable: "{{json_event.message.grandparent_image}}"
          harfanglab.grandparent.process.command_line: "{{json_event.message.parent_commandline}}"
          harfanglab.grandparent.process.ancestors: "{{json_event.message.ancestors.split('|')}}"

          event.category: ["process"]
          event.type: ["start"]
      - set:
          file.hash.md5: "{{json_event.message.hashes.md5}}"
          file.hash.sha256: "{{json_event.message.hashes.sha256}}"
          file.hash.sha1: "{{json_event.message.hashes.sha1}}"
        filter: "{{json_event.message.hashes != null}}"

  details_file:
    actions:
      - set:
          file.name: "{{json_event.message.details_file.target_filename}}"

  registry_info:
    actions:
      - set:
          registry.key: '{{json_event.message.details_registry.target_object.split("\\")[1:-1] | join("\\")}}'
          registry.hive: '{{json_event.message.details_registry.target_object.split("\\") | first}}'
          registry.path: "{{json_event.message.details_registry.target_object}}"
          registry.value: "{{json_event.message.details_registry.details}}"

  powershell_info:
    actions:
      - set:
          action.properties.ScriptBlockText: "{{json_event.message.script_block}}"
          action.properties.Path: "{{json_event.message.script_path}}"
          process.executable: "{{json_event.message.process_image_path}}"

  alert_info:
    actions:
      - set:
          harfanglab.level: "{{json_event.message.level}}"
          rule.description: "{{json_event.message.msg}}"
          rule.name: "{{json_event.message.rule_name}}"
          rule.category: "{{json_event.message.alert_type}}"
          rule.id: "{{json_event.message.rule_id}}"
          harfanglab.alert_time: "{{json_event.message.alert_time}}"
          harfanglab.alert_unique_id: "{{json_event.message.alert_unique_id}}"
          harfanglab.alert_subtype: "{{json_event.message.alert_subtype}}"
          harfanglab.execution: "{{json_event.message.execution}}"
          harfanglab.status: "{{json_event.message.status}}"
          harfanglab.aggregation_key: "{{json_event.message.aggregation_key}}"
          harfanglab.process.powershell.command: "{{json_event.message.details_powershell.PowershellCommand}}"
          harfanglab.process.powershell.script_path: "{{json_event.message.details_powershell.PowershellScriptPath}}"

  alert_process_info:
    actions:
      - set:
          process.command_line: "{{json_event.message.process.commandline}}"
          process.pid: "{{json_event.message.process.pid}}"
          process.name: "{{json_event.message.process.process_name}}"
          process.pe.description: "{{json_event.message.process.pe_info.file_description}}"
          process.pe.original_file_name: "{{json_event.message.process.pe_info.original_filename}}"
          process.pe.file_version: "{{json_event.message.process.pe_info.file_version}}"
          process.pe.company: "{{json_event.message.process.pe_info.company_name}}"
          process.pe.product: "{{json_event.message.process.pe_info.product_name}}"

          process.executable: "{{json_event.message.process.image_name}}"
          user.name: "{{json_event.message.process.username}}"

          process.parent.executable: "{{json_event.message.process.parent_image}}"
          process.parent.command_line: "{{json_event.message.process.parent_commandline}}"
          process.working_directory: "{{json_event.message.process.current_directory}}"
          process.pe.imphash: "{{json_event.message.process.pe_imphash}}"

          event.category: ["process"]
          event.type: ["start"]
          event.kind: "alert"
      - set:
          file.hash.md5: "{{json_event.message.process.hashes.md5}}"
          file.hash.sha256: "{{json_event.message.process.hashes.sha256}}"
          file.hash.sha1: "{{json_event.message.process.hashes.sha1}}"
        filter: "{{json_event.message.process.hashes != null}}"

  investigation_info:
    actions:
      - set:
          event.type: ["info"]

          file.path: "{{json_event.message.binaryinfo.fullpath}}"
          file.name: "{{json_event.message.binaryinfo.filename}}"
          file.hash.md5: "{{json_event.message.binaryinfo.binaryinfo.md5}}"
          file.hash.sha1: "{{json_event.message.binaryinfo.binaryinfo.sha1}}"
          file.hash.sha256: "{{json_event.message.binaryinfo.binaryinfo.sha256}}"
          file.pe.description: "{{json_event.message.binaryinfo.binaryinfo.pe_file_description}}"
          file.pe.original_file_name: "{{json_event.message.binaryinfo.binaryinfo.pe_original_filename}}"
          file.pe.file_version: "{{json_event.message.binaryinfo.binaryinfo.pe_file_version}}"
          file.pe.company: "{{json_event.message.binaryinfo.binaryinfo.pe_company_name}}"
          file.pe.product: "{{json_event.message.binaryinfo.binaryinfo.pe_product_name}}"
          file.pe.imphash: "{{json_event.message.binaryinfo.binaryinfo.pe_imphash}}"

  eventlog_info:
    actions:
      - set:
          event.type: ["info"]
          event.provider: "{{json_event.message.source_name}}"
          event.code: "{{json_event.message.event_id|string}}"
          action.id: "{{json_event.message.event_id}}"
          user.name: "{{json_event.message.event_data.SubjectUserName}}"
          user.domain: "{{json_event.message.event_data.SubjectDomainName}}"
          user.target.name: "{{json_event.message.event_data.TargetUserName}}"
          user.target.domain: "{{json_event.message.event_data.TargetDomainName}}"
          action.properties.DeviceID: "{{json_event.message.event_data.DeviceId}}"
          action.properties.ASsecurityintelligencecreationtime: "{{json_event.message.event_data.get('AS security intelligence creation time')}}"
          action.properties.ASsecurityintelligenceversion: "{{json_event.message.event_data.get('AS security intelligence version')}}"
          action.properties.AVsecurityintelligencecreationtime: "{{json_event.message.event_data.get('AV security intelligence creation time')}}"
          action.properties.AVsecurityintelligenceversion: "{{json_event.message.event_data.get('AV security intelligence version')}}"
          action.properties.AccessList: "{{json_event.message.event_data.get('AccessList')}}"
          action.properties.AccessMask: "{{json_event.message.event_data.get('AccessMask')}}"
          action.properties.AccessReason: "{{json_event.message.event_data.get('AccessReason')}}"
          action.properties.ActionID: "{{json_event.message.event_data.get('Action ID')}}"
          action.properties.ActionName: "{{json_event.message.event_data.get('Action Name')}}"
          action.properties.AdditionalActionsID: "{{json_event.message.event_data.get('Additional Actions ID')}}"
          action.properties.AdditionalActionsString: "{{json_event.message.event_data.get('Additional Actions String')}}"
          action.properties.AuthenticationPackageName: "{{json_event.message.event_data.get('AuthenticationPackageName')}}"
          action.properties.BMstate: "{{json_event.message.event_data.get('BM state')}}"
          action.properties.CacheState: "{{json_event.message.event_data.get('CacheState')}}"
          action.properties.CallerProcessId: "{{json_event.message.event_data.get('CallerProcessId')}}"
          action.properties.CallerProcessName: "{{json_event.message.event_data.get('CallerProcessName')}}"
          action.properties.CategoryID: "{{json_event.message.event_data.get('Category ID')}}"
          action.properties.CategoryName: "{{json_event.message.event_data.get('Category Name')}}"
          action.properties.CertIssuerName: "{{json_event.message.event_data.get('CertIssuerName')}}"
          action.properties.CertSerialNumber: "{{json_event.message.event_data.get('CertSerialNumber')}}"
          action.properties.CertThumbprint: "{{json_event.message.event_data.get('CertThumbprint')}}"
          action.properties.ClientProcessId: "{{json_event.message.event_data.get('ClientProcessId')}}"
          action.properties.ClientProcessStartKey: "{{json_event.message.event_data.get('ClientProcessStartKey')}}"
          action.properties.DetectionID: "{{json_event.message.event_data.get('Detection ID')}}"
          action.properties.DetectionTime: "{{json_event.message.event_data.get('Detection Time')}}"
          action.properties.DetectionUser: "{{json_event.message.event_data.get('Detection User')}}"
          action.properties.Domain: "{{json_event.message.event_data.get('Domain')}}"
          action.properties.ElevatedToken: "{{json_event.message.event_data.get('ElevatedToken')}}"
          action.properties.EngineVersion: "{{json_event.message.event_data.get('Engine Version')}}"
          action.properties.Engineup-to-date: "{{json_event.message.event_data.get('Engine up-to-date')}}"
          action.properties.Engineversion: "{{json_event.message.event_data.get('Engine version')}}"
          action.properties.ErrorCode: "{{json_event.message.event_data.get('Error Code')}}"
          action.properties.ErrorDescription: "{{json_event.message.event_data.get('Error Description')}}"
          action.properties.ExecutionID: "{{json_event.message.event_data.get('Execution ID')}}"
          action.properties.ExecutionName: "{{json_event.message.event_data.get('Execution Name')}}"
          action.properties.FQDN: "{{json_event.message.event_data.get('FQDN')}}"
          action.properties.FWLink: "{{json_event.message.event_data.get('FWLink')}}"
          action.properties.FailureReason: "{{json_event.message.event_data.get('FailureReason')}}"
          action.properties.FileNameBuffer: "{{json_event.message.event_data.get('FileNameBuffer')}}"
          action.properties.FileNameLength: "{{json_event.message.event_data.get('FileNameLength')}}"
          action.properties.Flags: "{{json_event.message.event_data.get('Flags')}}"
          action.properties.Hash: "{{json_event.message.event_data.get('Hash')}}"
          action.properties.HashSize: "{{json_event.message.event_data.get('Hash Size')}}"
          action.properties.IOAVstate: "{{json_event.message.event_data.get('IOAV state')}}"
          action.properties.ImpersonationLevel: "{{json_event.message.event_data.get('ImpersonationLevel')}}"
          action.properties.IpAddress: "{{json_event.message.event_data.get('IpAddress')}}"
          action.properties.IpPort: "{{json_event.message.event_data.get('IpPort')}}"
          action.properties.IssuerName: "{{json_event.message.event_data.get('IssuerName')}}"
          action.properties.IssuerNameLength: "{{json_event.message.event_data.get('IssuerNameLength')}}"
          action.properties.IssuerTBSHash: "{{json_event.message.event_data.get('IssuerTBSHash')}}"
          action.properties.IssuerTBSHashSize: "{{json_event.message.event_data.get('IssuerTBSHashSize')}}"
          action.properties.KeyLength: "{{json_event.message.event_data.get('KeyLength')}}"
          action.properties.LastASsecurityintelligenceage: "{{json_event.message.event_data.get('Last AS security intelligence age')}}"
          action.properties.LastAVsecurityintelligenceage: "{{json_event.message.event_data.get('Last AV security intelligence age')}}"
          action.properties.Lastfullscanage: "{{json_event.message.event_data.get('Last full scan age')}}"
          action.properties.Lastfullscanendtime: "{{json_event.message.event_data.get('Last full scan end time')}}"
          action.properties.Lastfullscansource: "{{json_event.message.event_data.get('Last full scan source')}}"
          action.properties.Lastfullscanstarttime: "{{json_event.message.event_data.get('Last full scan start time')}}"
          action.properties.Lastquickscanage: "{{json_event.message.event_data.get('Last quick scan age')}}"
          action.properties.Lastquickscanendtime: "{{json_event.message.event_data.get('Last quick scan end time')}}"
          action.properties.Lastquickscansource: "{{json_event.message.event_data.get('Last quick scan source')}}"
          action.properties.Lastquickscanstarttime: "{{json_event.message.event_data.get('Last quick scan start time')}}"
          action.properties.Latestengineversion: "{{json_event.message.event_data.get('Latest engine version')}}"
          action.properties.Latestplatformversion: "{{json_event.message.event_data.get('Latest platform version')}}"
          action.properties.LmPackageName: "{{json_event.message.event_data.get('LmPackageName')}}"
          action.properties.LogonGuid: "{{json_event.message.event_data.get('LogonGuid')}}"
          action.properties.LogonProcessName: "{{json_event.message.event_data.get('LogonProcessName')}}"
          action.properties.LogonType: "{{json_event.message.event_data.get('LogonType')}}"
          action.properties.MemberName: "{{parse_member_name.message.first_name + ' ' + parse_member_name.message.last_name}}"
          action.properties.CompatibleIds: "{{json_event.message.event_data.get('CompatibleIds')}}"
          action.properties.NRIengineversion: "{{json_event.message.event_data.get('NRI engine version')}}"
          action.properties.NRIsecurityintelligenceversion: "{{json_event.message.event_data.get('NRI security intelligence version')}}"
          action.properties.NotValidAfter: "{{json_event.message.event_data.get('NotValidAfter')}}"
          action.properties.NotValidBefore: "{{json_event.message.event_data.get('NotValidBefore')}}"
          action.properties.OAstate: "{{json_event.message.event_data.get('OA state')}}"
          action.properties.ObjectType: "{{json_event.message.event_data.get('ObjectType')}}"
          action.properties.OriginID: "{{json_event.message.event_data.get('Origin ID')}}"
          action.properties.OriginName: "{{json_event.message.event_data.get('Origin Name')}}"
          action.properties.PageHash: "{{json_event.message.event_data.get('PageHash')}}"
          action.properties.ParentProcessId: "{{json_event.message.event_data.get('ParentProcessId')}}"
          action.properties.Path: "{{json_event.message.event_data.get('Path')}}"
          action.properties.Platformup-to-date: "{{json_event.message.event_data.get('Platform up-to-date')}}"
          action.properties.Platformversion: "{{json_event.message.event_data.get('Platform version')}}"
          action.properties.PolicyBits: "{{json_event.message.event_data.get('PolicyBits')}}"
          action.properties.PostCleanStatus: "{{json_event.message.event_data.get('Post Clean Status')}}"
          action.properties.PreAuthType: "{{json_event.message.event_data.get('PreAuthType')}}"
          action.properties.PreExecutionStatus: "{{json_event.message.event_data.get('Pre Execution Status')}}"
          action.properties.PrivilegeList: "{{json_event.message.event_data.get('PrivilegeList')}}"
          action.properties.ProcessId: "{{json_event.message.event_data.get('ProcessId')}}"
          action.properties.ProcessName: "{{json_event.message.event_data.get('Process Name') or json_event.message.event_data.get('ProcessName')}}"
          action.properties.ProcessNameBuffer: "{{json_event.message.event_data.get('ProcessNameBuffer')}}"
          action.properties.ProcessNameLength: "{{json_event.message.event_data.get('ProcessNameLength')}}"
          action.properties.ProductName: "{{json_event.message.event_data.get('Product Name')}}"
          action.properties.ProductVersion: "{{json_event.message.event_data.get('Product Version')}}"
          action.properties.Productstatus: "{{json_event.message.event_data.get('Product status')}}"
          action.properties.ProfileChanged: "{{json_event.message.event_data.get('ProfileChanged')}}"
          action.properties.PublisherName: "{{json_event.message.event_data.get('PublisherName')}}"
          action.properties.PublisherNameLength: "{{json_event.message.event_data.get('PublisherNameLength')}}"
          action.properties.PublisherTBSHash: "{{json_event.message.event_data.get('PublisherTBSHash')}}"
          action.properties.PublisherTBSHashSize: "{{json_event.message.event_data.get('PublisherTBSHashSize')}}"
          action.properties.RTPstate: "{{json_event.message.event_data.get('RTP state')}}"
          action.properties.RelativeTargetName: "{{json_event.message.event_data.get('RelativeTargetName')}}"
          action.properties.RemediationUser: "{{json_event.message.event_data.get('Remediation User')}}"
          action.properties.RequestedPolicy: "{{json_event.message.event_data.get('RequestedPolicy')}}"
          action.properties.RequestedSigningLevel: "{{json_event.message.event_data.get('RequestedSigningLevel')}}"
          action.properties.RestrictedAdminMode: "{{json_event.message.event_data.get('RestrictedAdminMode')}}"
          action.properties.RpcCallClientLocality: "{{json_event.message.event_data.get('RpcCallClientLocality')}}"
          action.properties.RuleId: "{{json_event.message.event_data.get('RuleId')}}"
          action.properties.RuleName: "{{json_event.message.event_data.get('RuleName')}}"
          action.properties.ScriptBlockText: "{{json_event.message.event_data.get('ScriptBlockText')}}"
          action.properties.SecureRequired: "{{json_event.message.event_data.get('SecureRequired')}}"
          action.properties.SecurityintelligenceVersion: "{{json_event.message.event_data.get('Security intelligence Version')}}"
          action.properties.ServiceName: "{{json_event.message.event_data.get('ServiceName')}}"
          action.properties.ServiceSid: "{{json_event.message.event_data.get('ServiceSid')}}"
          action.properties.SeverityID: "{{json_event.message.event_data.get('Severity ID')}}"
          action.properties.SeverityName: "{{json_event.message.event_data.get('Severity Name')}}"
          action.properties.ShareLocalPath: "{{json_event.message.event_data.get('ShareLocalPath')}}"
          action.properties.ShareName: "{{json_event.message.event_data.get('ShareName')}}"
          action.properties.Signature: "{{json_event.message.event_data.get('Signature')}}"
          action.properties.SignatureType: "{{json_event.message.event_data.get('SignatureType')}}"
          action.properties.SourceID: "{{json_event.message.event_data.get('Source ID')}}"
          action.properties.SourceName: "{{json_event.message.event_data.get('Source Name')}}"
          action.properties.State: "{{json_event.message.event_data.get('State')}}"
          action.properties.Status: "{{json_event.message.event_data.get('Status')}}"
          action.properties.StatusCode: "{{json_event.message.event_data.get('Status Code')}}"
          action.properties.StatusDescription: "{{json_event.message.event_data.get('Status Description')}}"
          action.properties.SubStatus: "{{json_event.message.event_data.get('SubStatus')}}"
          action.properties.SubjectDomainName: "{{json_event.message.event_data.get('SubjectDomainName')}}"
          action.properties.SubjectLogonId: "{{json_event.message.event_data.get('SubjectLogonId')}}"
          action.properties.SubjectUserName: "{{json_event.message.event_data.get('SubjectUserName')}}"
          action.properties.SubjectUserSid: "{{json_event.message.event_data.get('SubjectUserSid')}}"
          action.properties.TargetDomainName: "{{json_event.message.event_data.get('TargetDomainName')}}"
          action.properties.TargetInfo: "{{json_event.message.event_data.get('TargetInfo')}}"
          action.properties.TargetLinkedLogonId: "{{json_event.message.event_data.get('TargetLinkedLogonId')}}"
          action.properties.TargetLogonGuid: "{{json_event.message.event_data.get('TargetLogonGuid')}}"
          action.properties.TargetLogonId: "{{json_event.message.event_data.get('TargetLogonId')}}"
          action.properties.TargetOutboundDomainName: "{{json_event.message.event_data.get('TargetOutboundDomainName')}}"
          action.properties.TargetOutboundUserName: "{{json_event.message.event_data.get('TargetOutboundUserName')}}"
          action.properties.TargetServerName: "{{json_event.message.event_data.get('TargetServerName')}}"
          action.properties.TargetSid: "{{json_event.message.event_data.get('TargetSid')}}"
          action.properties.TargetUserName: "{{json_event.message.event_data.get('TargetUserName')}}"
          action.properties.TargetUserSid: "{{json_event.message.event_data.get('TargetUserSid')}}"
          action.properties.TaskContent: "{{json_event.message.event_data.get('TaskContent')}}"
          action.properties.TaskName: "{{json_event.message.event_data.get('TaskName')}}"
          action.properties.ThreatID: "{{json_event.message.event_data.get('Threat ID')}}"
          action.properties.ThreatName: "{{json_event.message.event_data.get('Threat Name')}}"
          action.properties.TicketEncryptionType: "{{json_event.message.event_data.get('TicketEncryptionType')}}"
          action.properties.TicketOptions: "{{json_event.message.event_data.get('TicketOptions')}}"
          action.properties.TotalSignatureCount: "{{json_event.message.event_data.get('TotalSignatureCount')}}"
          action.properties.TransmittedServices: "{{json_event.message.event_data.get('TransmittedServices')}}"
          action.properties.TypeID: "{{json_event.message.event_data.get('Type ID')}}"
          action.properties.TypeName: "{{json_event.message.event_data.get('Type Name')}}"
          action.properties.Unused2: "{{json_event.message.event_data.get('Unused2')}}"
          action.properties.Unused3: "{{json_event.message.event_data.get('Unused3')}}"
          action.properties.Unused4: "{{json_event.message.event_data.get('Unused4')}}"
          action.properties.Unused5: "{{json_event.message.event_data.get('Unused5')}}"
          action.properties.Unused6: "{{json_event.message.event_data.get('Unused6')}}"
          action.properties.Unused: "{{json_event.message.event_data.get('Unused')}}"
          action.properties.User: "{{json_event.message.event_data.get('User')}}"
          action.properties.ValidatedPolicy: "{{json_event.message.event_data.get('ValidatedPolicy')}}"
          action.properties.ValidatedSigningLevel: "{{json_event.message.event_data.get('ValidatedSigningLevel')}}"
          action.properties.VerificationError: "{{json_event.message.event_data.get('VerificationError')}}"
          action.properties.VirtualAccount: "{{json_event.message.event_data.get('VirtualAccount')}}"
          action.properties.WorkstationName: "{{json_event.message.event_data.get('WorkstationName')}}"
          action.properties.ClassName: "{{json_event.message.event_data.get('ClassName')}}"
          action.properties.param0: "{{json_event.message.event_data.get('param0')}}"
          action.properties.param10: "{{json_event.message.event_data.get('param10')}}"
          action.properties.param11: "{{json_event.message.event_data.get('param11')}}"
          action.properties.param12: "{{json_event.message.event_data.get('param12')}}"
          action.properties.param13: "{{json_event.message.event_data.get('param13')}}"
          action.properties.param14: "{{json_event.message.event_data.get('param14')}}"
          action.properties.param15: "{{json_event.message.event_data.get('param15')}}"
          action.properties.param16: "{{json_event.message.event_data.get('param16')}}"
          action.properties.param17: "{{json_event.message.event_data.get('param17')}}"
          action.properties.param18: "{{json_event.message.event_data.get('param18')}}"
          action.properties.param19: "{{json_event.message.event_data.get('param19')}}"
          action.properties.param1: "{{json_event.message.event_data.get('param1')}}"
          action.properties.param20: "{{json_event.message.event_data.get('param20')}}"
          action.properties.param21: "{{json_event.message.event_data.get('param21')}}"
          action.properties.param22: "{{json_event.message.event_data.get('param22')}}"
          action.properties.param2: "{{json_event.message.event_data.get('param2')}}"
          action.properties.param3: "{{json_event.message.event_data.get('param3')}}"
          action.properties.param4: "{{json_event.message.event_data.get('param4')}}"
          action.properties.param5: "{{json_event.message.event_data.get('param5')}}"
          action.properties.param6: "{{json_event.message.event_data.get('param6')}}"
          action.properties.param7: "{{json_event.message.event_data.get('param7')}}"
          action.properties.param8: "{{json_event.message.event_data.get('param8')}}"
          action.properties.param9: "{{json_event.message.event_data.get('param9')}}"
          action.properties.TaskContentNew_Command: "{{parse_task_info.message.Task.Actions.Exec.Command}}"
          action.properties.TaskContentNew_Args: "{{parse_task_info.message.Task.Actions.Exec.Arguments}}"

      - set:
          source.ip: "{{json_event.message.event_data.IpAddress}}"
        filter: "{{json_event.message.event_data.IpAddress | is_ipaddress}}"

  authentication_info:
    actions:
      - set:
          event.category: ["authentication"]
          event.type: >
            {% set type_value = ["info"] %}
            {% if json_event.message.event_type == "login_failure" or json_event.message.event_type == "logout" %}
                {% set type_value = ["end"] %}
            {% elif json_event.message.event_type == "login" %}
                {% set type_value = ["start"] %}
            {% endif %}
            {{- type_value }}
          source.ip: "{{json_event.message.source_address}}"
          process.name: "{{json_event.message.process_name}}"
          agent.version: "{{json_event.message.agent.version}}"
          action.id: "{{json_event.message.windows.event_id}}"
          event.reason: "{{json_event.message.windows.event_title}}"
          event.code: "{{json_event.message.windows.event_id}}"
          event.action: "{{json_event.message.object_type}}"
          user.id: "{{json_event.message.windows.source_sid}}"
          user.name: "{{json_event.message.source_username}}"
          user.target.id: "{{json_event.message.windows.target_sid}}"
          user.target.name: "{{json_event.message.target_username}}"

  dns_info:
    actions:
      - set:
          event.category: ["network"]
          event.type: ["info"]
          process.pid: "{{json_event.message.pid}}"
          process.executable: "{{json_event.message.process_image_path}}"
          user.name: "{{json_event.message.username}}"
          dns.question.type: "{{json_event.message.query_type}}"
          dns.question.name: "{{json_event.message.requested_name}}"

  auditlog_info:
    actions:
      - set:
          event.category: ["web"]
          event.type: ["access"]
          http.request.method: "{{json_event.message.request_method}}"
          http.response.status_code: "{{json_event.message.response_status_code}}"
          url.path: "{{json_event.message.request_path}}"
          user_agent.original: "{{json_event.message.user_agent}}"
          user.name: "{{json_event.message.username}}"
          source.ip: "{{json_event.message.ip_address}}"
          event.reason: "{{json_event.message.log_description}}"
          event.action: "{{json_event.message.log_slug}}"

  agentlog_info:
    actions:
      - set:
          event.type: ["info"]
          event.reason: "{{json_event.message.message}}"
          agent.id: "{{json_event.message.agent_id}}"
          host.name: "{{json_event.message.hostname}}"

  connectionlog_info:
    actions:
      - set:
          event.category: ["network"]
          event.type: ["info"]
          agent.id: "{{json_event.message.agent_id}}"

  driverload_info:
    actions:
      - set:
          event.category: ["driver"]
          event.type: ["info"]

          agent.id: "{{json_event.message.agent_id}}"
          agent.version: "{{json_event.message.agent.version}}"
          file.hash: "{{json_event.message.hashes}}"
          file.pe.file_version: "{{json_event.message.pe_info.file_version}}"
          file.pe.description: "{{json_event.message.pe_info.file_description}}"
          file.pe.company: "{{json_event.message.pe_info.company_name}}"
          file.pe.original_file_name: "{{json_event.message.pe_info.original_filename}}"
          file.pe.imphash: "{{json_event.message.pe_imphash}}"
          file.pe.product: "{{json_event.message.pe_info.product_name}}"
          file.path: "{{json_event.message.imagepath}}"
          file.name: "{{json_event.message.imagename}}"
          file.size: "{{json_event.message.imagesize}}"

  injectedthread_info:
    actions:
      - set:
          event.category: ["process"]
          event.type: ["info"]

          process.executable: "{{json_event.message.process_image}}"
          process.pid: "{{json_event.message.process_id}}"
          process.thread.id: "{{json_event.message.thread_id}}"
