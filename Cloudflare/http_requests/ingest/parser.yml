name: Cloudflare HTTP requests
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
  - name: date_start
    external:
      name: date.parse
      properties:
        input_field: '{{json_event.message.EdgeStartTimestamp | float / 1000000000}}'
        output_field: datetime
        format: timestamp
    filter: '{{json_event.message.get("EdgeStartTimestamp") != None}}'
  - name: date_end
    external:
      name: date.parse
      properties:
        input_field: '{{json_event.message.EdgeEndTimestamp | float / 1000000000}}'
        output_field: datetime
        format: timestamp
    filter: '{{json_event.message.get("EdgeEndTimestamp") != None}}'
  - name: set_ecs_fields
  - name: set_custom_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          source.ip: "{{json_event.message.ClientIP or json_event.message.clientIP}}"
          destination.address: "{{json_event.message.ClientRequestHost or json_event.message.clientRequestHTTPHost}}"
          http.request.method: "{{json_event.message.ClientRequestMethod or json_event.message.clientRequestHTTPMethodName}}"
          url.path: "{{json_event.message.clientRequestPath or json_event.message.ClientRequestURI}}"
          http.response.bytes: "{{json_event.message.EdgeResponseBytes}}"
          http.response.status_code: "{{json_event.message.EdgeResponseStatus}}"
          event.action: "{{json_event.message.action}}"
          source.as.number: "{{json_event.message.clientAsn or json_event.message.ClientASN}}"
          source.geo.country_name: "{{json_event.message.clientCountryName or json_event.message.ClientCountry}}"
          network.protocol: "{{json_event.message.clientRequestHTTPProtocol or json_event.message.ClientRequestProtocol}}"
          '@timestamp': "{{json_event.message.datetime}}"
          rule.id: "{{json_event.message.ruleId}}"
          rule.ruleset: "{{json_event.message.rulesetId}}"
          user_agent.original: "{{json_event.message.userAgent or json_event.message.ClientRequestUserAgent}}"
          http.request.bytes: "{{json_event.message.ClientRequestBytes}}"
          http.request.referrer: "{{json_event.message.ClientRequestReferer}}"
          tls.cipher: "{{json_event.message.ClientSSLCipher}}"
          tls.version_protocol: "{{json_event.message.ClientSSLProtocol}}"
          source.port: "{{json_event.message.ClientSrcPort}}"
          event.kind: "event"
          event.category: ["web"]
          event.type: ["access"]
          event.dataset: "http_requests"
          observer.vendor: "Cloudflare"
          observer.type: "proxy"
      - set:
          event.start: "{{date_start.datetime}}"
        filter: '{{json_event.message.get("EdgeStartTimestamp") != None}}'
      - set:
          event.end: "{{date_end.datetime}}"
        filter: '{{json_event.message.get("EdgeEndTimestamp") != None}}'
  set_custom_fields:
    actions:
      - set:
          cloudflare: "{{json_event.message}}"
