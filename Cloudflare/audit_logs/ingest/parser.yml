name: cloudflare-audit-logs
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
  - name: normalize_ip
    filter: '{{json_event.message.ActorIP != None}}'
    external:
      name: grok.match
      properties:
        input_field: json_event.message.ActorIP
        output_field: actor
        pattern: '::ffff:%{IP:ipv4}'
  - name: set_ecs_fields
  - name: set_cloudflare_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          "@timestamp": '{{json_event.message.When}}'
      - set:
          cloud.account.id: '{{json_event.message.OwnerID}}'
        filter: '{{json_event.message.OwnerID is not in [""]}}'
      - set:
          event.action: '{{json_event.message.ActionType}}'
          event.category: ["network"]
          event.dataset: "audit_logs"
          event.kind: 'event'
          event.type: ["access"]
          observer.type: "proxy"
          observer.vendor: "Cloudflare"
          source.ip: '{{normalize_ip.actor.ipv4 or json_event.message.ActorIP}}'
          user.email: '{{json_event.message.ActorEmail}}'
          user.id: '{{json_event.message.ActorID}}'

  set_cloudflare_fields:
    actions:
      - set:
          cloudflare.ActionResult: '{{json_event.message.ActionResult}}'
      - set:
          cloudflare.ActorType: '{{json_event.message.ActorType}}'
        filter: '{{json_event.message.ActorType is not in [""]}}'
      - set:
          cloudflare.ID: '{{json_event.message.ID}}'
        filter: '{{json_event.message.ID is not in [""]}}'
      - set:
          cloudflare.zone_tag: '{{json_event.message.Metadata.zone_tag}}'
        filter: '{{json_event.message.Metadata.zone_tag is not in [""]}}'
      - set:
          cloudflare.request_client_default: '{{json_event.message.Metadata.Request.client_default}}'
      - set:
          cloudflare.request_name: '{{json_event.message.Metadata.Request.name}}'
        filter: '{{json_event.message.Metadata.Request.name is not in [""]}}'
      - set:
          cloudflare.request_networks: '{{json_event.message.Metadata.Request.networks}}'
      - set:
          cloudflare.zone_name: '{{json_event.message.Metadata.zone_name}}'
        filter: '{{json_event.message.Metadata.zone_name is not in [""]}}'
      - set:
          cloudflare.Interface: '{{json_event.message.Interface}}'
        filter: '{{json_event.message.Interface is not in [""]}}'
      - set:
          cloudflare.ResourceID: '{{json_event.message.ResourceID}}'
        filter: '{{json_event.message.ResourceID is not in [""]}}'
      - set:
          cloudflare.ResourceType: '{{json_event.message.ResourceType}}'
        filter: '{{json_event.message.ResourceType is not in [""]}}'


