name: Cloudflare Access Requests
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
  - name: set_ecs_fields
  - name: set_cloudflare_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          "@timestamp": '{{json_event.message.CreatedAt}}'
          client.ip: '{{json_event.message.IPAddress}}'
          event.category: ["network", "authentication"]
          event.dataset: "access_request"
          event.kind: 'event'
          event.dataset: "access_requests"
          event.type: ["info"]
          observer.type: "proxy"
          observer.vendor: "Cloudflare"
      - set:
          event.type: ["connection", "start"]
        filter: '{{json_event.message.Action == "login" and json_event.message.Allowed == true}}'
      - set:
          event.type: ["connection","end"]
        filter: '{{json_event.message.Action == "logout"}}'
      - set:
          event.type: ["connection","denied"]
        filter: '{{json_event.message.Allowed == false}}'
      - set:
          url.domain: '{{json_event.message.AppDomain}}'
          user.email: '{{json_event.message.Email}}'
          user.id: '{{json_event.message.UserUID}}'
          source.geo.country_iso_code: '{{json_event.message.Country}}'
          source.ip: '{{json_event.message.IPAddress}}'
  set_cloudflare_fields:
    actions:
      - set:
          cloudflare: "{ {% for key, value in json_event.message.items() %}{% if value not in ['NA', '',[]] %}'{{key}}': r'{{value}}',{% endif %}{% endfor %} }"