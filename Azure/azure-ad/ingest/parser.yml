name: azure-ad
pipeline:
  - name: parsed_event
    external:
      name: json.parse-json

  - name: parsed_date
    external:
      name: date.parse
      properties:
        input_field: '{{parsed_event.message.time or parsed_event.message.createdDateTime}}'
        output_field: date

  - name: azuread
  - name: log_type_authentication
    filter: "{{parsed_event.message.authenticationDetails != null}}"
  - name: log_type_auditlogs
    filter: '{{ parsed_event.message.properties != null and parsed_event.message.category == "AuditLogs" }}'
  - name: log_type_auditlogs_has_message_properties
    filter: '{{ parsed_event.message.properties != null and parsed_event.message.category == "AuditLogs" }}'
  - name: read_message_properties
    filter: '{{ parsed_event.message.properties != null }}'
  - name: read_message_properties_location_geoCoordinates
    filter: '{{ parsed_event.message.properties != null and parsed_event.message.properties.location != null }}'

  - name: read_device_details
    filter: '{{ parsed_event.message.deviceDetail != null }}'

stages:
  read_device_details:
    actions:
      - set:
          host.os.name: '{{ parsed_event.message.deviceDetail.operatingSystem }}'
          user_agent.name: '{{ parsed_event.message.deviceDetail.browser }}'

  read_message_properties:
    actions:
      - set:
          action.outcome: '{{parsed_event.message.properties.result}}'
          action.type: "{{parsed_event.message.properties.operationType |lower}}"
          event.reason: '{{ parsed_event.message.properties.riskType }}'
          user.full_name: '{{ parsed_event.message.properties.userDisplayName }}'
          user.email: '{{ parsed_event.message.properties.userPrincipalName }}'
          user_agent.original: '{{ parsed_event.message.properties.userAgent }}'
          service.name: '{{ parsed_event.message.properties.resourceDisplayName }}'
          azuread.properties.id: '{{parsed_event.message.properties.id}}'
          azuread.properties.requestId: '{{parsed_event.message.properties.requestId}}'
          azuread.properties.correlationId: '{{parsed_event.message.properties.correlationId}}'
          azuread.properties.riskEventType: '{{parsed_event.message.properties.riskEventType}}'
          azuread.properties.riskState: '{{parsed_event.message.properties.riskState}}'
          azuread.properties.riskLevel: '{{parsed_event.message.properties.riskLevel}}'
          azuread.properties.riskDetail: '{{parsed_event.message.properties.riskDetail}}'
          azuread.properties.riskLevelAggregated: '{{parsed_event.message.properties.riskLevelAggregated}}'
          azuread.properties.riskLevelDuringSignIn: '{{parsed_event.message.properties.riskLevelDuringSignIn}}'
          azuread.properties.riskEventTypes: '{{parsed_event.message.properties.riskEventTypes}}'
          azuread.properties.riskEventTypes_v2: '{{parsed_event.message.properties.riskEventTypes_v2}}'
          azuread.properties.authenticationProtocol: '{{parsed_event.message.properties.authenticationProtocol}}'
          azuread.properties.appDisplayName: '{{parsed_event.message.properties.appDisplayName}}'
          azuread.properties.source: '{{parsed_event.message.properties.source}}'
          azuread.properties.detectionTimingType: '{{parsed_event.message.properties.detectionTimingType}}'
          azuread.properties.status.errorCode: '{{parsed_event.message.properties.status.errorCode}}'
          azuread.properties.status.failureReason: '{{parsed_event.message.properties.status.failureReason}}'
          azuread.properties.activity: '{{parsed_event.message.properties.activity}}'

      - set:
          event.type: [ "connection" ]
        filter: '{{ parsed_event.message.properties.activity == "signin" }}'
      - set:
          event.reason: '{{parsed_event.message.properties.status.failureReason}}'
        filter: '{{ parsed_event.message.properties.status != null }}'

      - translate:
        dictionary:
          "SignInLogs": [ "authentication"]
        mapping:
          parsed_event.message.category: event.category
        fallback: ["iam"]

  read_message_properties_location_geoCoordinates:
    actions:
      - set:
          source.geo.city_name: "{{ parsed_event.message.properties.location.city}}"
          source.geo.region_name: "{{ parsed_event.message.properties.location.state }}"
          source.geo.country_iso_code: "{{ parsed_event.message.location}}"

      - set:
          source.geo.location: '{ "lon": "{{parsed_event.message.properties.location.geoCoordinates.longitude}}","lat": "{{parsed_event.message.properties.location.geoCoordinates.latitude}}" }'
        filter: '{{ parsed_event.message.properties.location.geoCoordinates | length > 0 }}'



  azuread:
    actions:
      - set:
          '@timestamp': "{{parsed_date.date}}"
          service.type: "ldap"
          service.name: '{{ parsed_event.message.resourceDisplayName or "Azure Active Directory"}}'
          action.name: '{{parsed_event.message.operationName}}'
          user.id: '{{ parsed_event.message.userId}}'
          user.name: '{{ parsed_event.message.userPrincipalName}}'
          source.ip: '{{parsed_event.message.ipAddress}}'
          user_agent.original: '{{ parsed_event.message.userAgent }}'

      - set:
          azuread.resourceId: '{{parsed_event.message.resourceId}}'
          azuread.operationName: '{{parsed_event.message.operationName}}'
          azuread.operationVersion: '{{parsed_event.message.operationVersion}}'
          azuread.category: '{{parsed_event.message.category}}'
          azuread.tenantId: '{{parsed_event.message.tenantId}}'
          azuread.resultSignature: '{{parsed_event.message.resultSignature}}'
          azuread.durationMs: '{{parsed_event.message.durationMs}}'
          azuread.correlationId: '{{parsed_event.message.correlationId}}'
          azuread.identity: '{{parsed_event.message.identity}}'
          azuread.Level: '{{parsed_event.message.Level}}'

          azuread.activityDateTime: '{{parsed_event.message.activityDateTime}}'
          azuread.detectedDateTime: '{{parsed_event.message.detectedDateTime}}'
          azuread.lastUpdatedDateTime: '{{parsed_event.message.lastUpdatedDateTime}}'
          azuread.additionalInfo: '{{parsed_event.message.additionalInfo}}'
          azuread.tokenIssuerType: '{{parsed_event.message.tokenIssuerType}}'
          azuread.resourceTenantId: '{{parsed_event.message.resourceTenantId}}'
          azuread.homeTenantId: '{{parsed_event.message.homeTenantId}}'
          azuread.userType: '{{parsed_event.message.userType}}'
          azuread.crossTenantAccessType: '{{parsed_event.message.crossTenantAccessType}}'
          azuread.authenticationRequirementPolicies: '{{parsed_event.message.authenticationRequirementPolicies}}'
          azuread.authenticationRequirement: '{{parsed_event.message.authenticationRequirement}}'
          azuread.servicePrincipalId: '{{parsed_event.message.servicePrincipalId}}'
          azuread.flaggedForReview: '{{parsed_event.message.flaggedForReview}}'
          azuread.isTenantRestricted: '{{parsed_event.message.isTenantRestricted}}'
          azuread.autonomousSystemNumber: '{{parsed_event.message.autonomousSystemNumber}}'
          azuread.privateLinkDetails: '{{parsed_event.message.privateLinkDetails}}'
          azuread.ssoExtensionVersion: '{{parsed_event.message.ssoExtensionVersion}}'
          azuread.uniqueTokenIdentifier: '{{parsed_event.message.uniqueTokenIdentifier}}'
          azuread.incomingTokenType: '{{parsed_event.message.incomingTokenType}}'
          azuread.authenticationProtocol: '{{parsed_event.message.authenticationProtocol}}'

      - set:
          action.target: "user"
        filter: "{{parsed_event.message.userId != null}}"

      - set:
          source.ip: "{{parsed_event.message.callerIpAddress}}"
          azuread.callerIpAddress: '{{parsed_event.message.callerIpAddress}}'
        filter: "{{parsed_event.message.callerIpAddress != '<null>' and parsed_event.message.callerIpAddress != null }}"

  log_type_auditlogs_has_message_properties:
    actions:
      - set:
          action.outcome_reason: "{{parsed_event.message.properties.resultReason}}"
          event.reason: "{{parsed_event.message.properties.resultReason}}"
        filter: "{{parsed_event.message.properties.result == 'failure'}}"
      - set:
          user.id: '{{ parsed_event.message.properties.initiatedBy.user.id}}'
          user.name: '{{ parsed_event.message.properties.initiatedBy.user.userPrincipalName}}'
          action.target: "user"
        filter: "{{parsed_event.message.properties.initiatedBy.user != null}}"

      - set:
          user.id: '{{ parsed_event.message.properties.initiatedBy.app.servicePrincipalId}}'
          user.name: '{{ parsed_event.message.properties.initiatedBy.app.displayName}}'
          action.target: "user"
        filter: "{{parsed_event.message.properties.initiatedBy.app != null}}"

  log_type_auditlogs:
    actions:
      - set:
          action.properties: >
            [
            {% for targetResource in parsed_event.message.properties.targetResources %}
            {% if targetResource.modifiedProperties != null %}
            {% for modifiedProperty in targetResource.modifiedProperties %}
            {% if modifiedProperty.displayName != "Included Updated Properties"%}
            {'name': '{{modifiedProperty.displayName or Null}}', 'newValue': '{{modifiedProperty.newValue or Null}}', 'oldValue': '{{modifiedProperty.oldValue or ""}}'},
            {% endif %}
            {% endfor %}
            {% endif %}
            {% if targetResource.type == "User" %}
            {'name': '{{targetResource.userPrincipalName | lower }}', 'id': '{{targetResource.id}}', 'type': 'targetedUser'},
            {% endif %}
            {% endfor %}
            ]
        filter: '{{parsed_event.message.properties.targetResources != [] }}'

      - set:
          azuread.properties.targetUserPrincipalName: '{{parsed_event.message.properties.targetResources[0].userPrincipalName}}'
        filter: '{{ parsed_event.message.properties.targetResources|length == 1 and parsed_event.message.properties.targetResources[0].type == "User"}}'
      - set:
          azuread.properties.targetDevicePrincipalName: '{{parsed_event.message.properties.targetResources[0].devicePrincipalName}}'
        filter: '{{ parsed_event.message.properties.targetResources|length == 1 and parsed_event.message.properties.targetResources[0].type == "Device"}}'

      - set:
          action.properties: [ ]
        filter: '{{ parsed_event.message.properties.targetResources == [] }}'

  log_type_authentication:
    actions:
      - set:
          action.name: "authentication"
          event.category: ["authentication"]
          event.type: [ "start" ]
          azuread.authenticationDetails: '{{parsed_event.message.authenticationDetails}}'
