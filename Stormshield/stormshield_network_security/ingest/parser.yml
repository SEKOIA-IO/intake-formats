name: sns
pipeline:
  - name: kv
    external:
      name: kv.parse-kv
      properties:
        input_field: "{{ original.message }}"
        output_field: result
        value_sep: "="
        item_sep: \s

  - name: parsed_time
    external:
      name: date.parse
      properties:
        # “Local” time at which the log was recorded in the log file (time configured on the Firewall).
        # String in “YYYY-MM-DD HH:MM:SS” format.
        input_field: "{{kv.result.time}}{{kv.result.tz}}" #startime="2022-03-03 14:21:10"
        output_field: date
        # timezone: kv.result.tz #tz=+0100
        # Time difference between the Firewall’s time and GMT. This depends on the time zone used.
        # String in “+HHMM” or “-HHMM” format.
        format: "%Y-%m-%d %H:%M:%S%z"

  - name: parsed_startime
    filter: '{{kv.result.get("startime") != None}}'
    external:
      name: date.parse
      properties:
        input_field: "{{kv.result.startime}}{{kv.result.tz}}" #startime="2022-03-03 14:21:10"
        output_field: date
        format: "%Y-%m-%d %H:%M:%S%z"

  - name: set_startime
  - name: action_field_is_empty
  - name: set_fields

stages:
  set_fields:
    actions:
      - set:
          event.category: ["network"]
          event.type: ["connection"]
          event.dataset: "{{ kv.result.logtype }}"
          "@timestamp": "{{ parsed_time.date }}"
          observer.serial_number: "{{ kv.result.fw }}"
          event.timezone: "{{ kv.result.tz }}"
          event.risk_score: "{{ kv.result.pri }}"
          stormshield.filter.action: "{{ kv.result.action }}"
          observer.ingress.interface.name: "{{ kv.result.srcif }}"
          observer.ingress.interface.alias: "{{ kv.result.srcifname }}"
          network.transport: "{{ kv.result.ipproto }}"
          destination.port: "{{ kv.result.dstport }}"
          destination.geo.continent_name: "{{ kv.result.dstcontinent }}"
          event.duration: "{{ kv.result.duration | float * 1000000000 }}" # Duration of the connection in seconds converted in nanoseconds.
          observer.hostname: "{{ kv.result.fw }}"
          observer.vendor: "Stormshield"
          observer.product: "Stormshield Network Security"
          observer.type: "{{ kv.result.id }}"
          observer.egress.interface.name: "{{ kv.result.dstif }}"
          observer.egress.interface.alias: "{{ kv.result.dstifname }}"
          host.network.ingress.bytes: "{{ kv.result.rcvd }}"
          host.network.egress.bytes: "{{ kv.result.sent }}"
          log.priority: "{{ kv.result.pri }}"
          action.outcome_reason: "{{ kv.result.msg }}"
          network.bytes: "{{ kv.result.sent|int + kv.result.rcvd|int }}"
          network.protocol: "{{ kv.result.proto }}"
          network.type: "{{ kv.result.ipv }}"
          rule.id: "{{ kv.result.ruleid }}"
          rule.category: "{{ kv.result.slotlevel }}"
          rule.name: "{{ kv.result.rulename }}"
          user.name: "{{ kv.result.user }}"
          user.domain: "{{ kv.result.domain }}"
          user.effective.group.name: "{{ kv.result.usergroup }}"
          stormshield.destination.name: "{{ kv.result.dstname }}"
          stormshield.destination.port_name: "{{ kv.result.dstportname }}"
          stormshield.source.name: "{{ kv.result.srcname }}"
          stormshield.source.port_name: "{{ kv.result.srcportname }}"
          source.port: "{{ kv.result.srcport }}"
          source.mac: "{{ kv.result.srcmac }}"
          source.geo.continent_name: "{{ kv.result.srccontinent }}"
          destination.ip: "{{ kv.result.dst }}"

      - set:
          source.ip: "{{ kv.result.src }}"
        filter: "{{ kv.result.src | is_ipaddress}}"

      - set:
          destination.ip: "{{ kv.result.dst }}"
        filter: "{{ kv.result.dst | is_ipaddress}}"

      - set:
          client.ip: '{{ kv.result.remotenet.split("/")[0] }}'
          event.type: '["{% if kv.result.user %}info{% else %}connection{% endif %}"]'
          network.type: ipsec
          event.category: '["{% if kv.result.user %}authentication{% else %}network{% endif %}"]'
          action.outcome: "{% if 'failed' in kv.result.msg %}failure{% elif 'User authenticated' in kv.result.msg %}success{% endif %}"
          stormshield.ike.role: "{{ kv.result.side }}"
          stormshield.ike.type: "{{ kv.result.ruletype }}"
          stormshield.ike.phase: "{{ kv.result.phase }}"
          stormshield.ike.spi.in: "{{ kv.result.spi_in }}"
          stormshield.ike.spi.out: "{{ kv.result.spi_out }}"
          stormshield.ike.version: "{{ kv.result.ikev }}"
          stormshield.ike.local.net: "{{ kv.result.localnet }}"
          stormshield.ike.peer.name: "{{ kv.result.peername }}"
          stormshield.ike.remote.id: "{{ kv.result.remoteid }}"
          stormshield.ike.remote.net: "{{ kv.result.remotenet }}"
          stormshield.ike.peer.cookie: "{{ kv.result.cookie_r }}"
          stormshield.ike.initiator.cookie: "{{ kv.result.cookie_i }}"
        filter: '{{ kv.result.logtype in ("vpn", "xvpn") }}'

      - set:
          event.type: ["info"]
          process.name: "{{ kv.result.service }}"
          event.category: ["process"]
          stormshield.alarm.id: "{{ kv.result.alarmid }}"
        filter: '{{ kv.result.logtype == "system" }}'

      - set:
          event.type: ["info"]
          event.category: ["configuration"]
          error.code: "{{ kv.result.error }}"
          stormshield.session.id: "{{ kv.result.sessionid }}"
          process.command_line: "{{ kv.result.msg }}"
          action.outcome: '{% if kv.result.error == "0" %}success{% else %}failure{% endif %}'
        filter: '{{ kv.result.logtype == "server" }}'

      - set:
          source.ip: "{{ kv.result.address }}"
          client.ip: "{{ kv.result.address }}"
        filter: '{{ kv.result.logtype == "server" and kv.result.address | is_ipaddress }}'

      - set:
          source.nat.ip: "{% if kv.result.modsrc | is_ipaddress %}{{ kv.result.modsrc }}{% endif %}"
          source.nat.port: "{{ kv.result.modsrcport }}"
          source.geo.continent_name: "{{ kv.result.srccontinent }}"
          stormshield.ip.src.rep.score: "{{ kv.result.srchostrep }}"
          stormshield.ip.src.rep.type: "{{ kv.result.srciprep }}"
          destination.nat.ip: >-
            {% if kv.result.origdst and kv.result.origdst | is_ipaddress %}{{ kv.result.origdst }}{% elif kv.result.src | is_ipaddress %}{{
            kv.result.src }}{% endif %}
          destination.nat.port: >-
            {% if kv.result.origdstport %}{{ kv.result.origdstport }}{% else
            %}{{ kv.result.srcport }}{% endif %}
          destination.geo.continent_name: "{{ kv.result.dstcontinent }}"
          stormshield.ip.dst.rep.score: "{{ kv.result.dsthostrep }}"
          stormshield.ip.dst.rep.type: "{{ kv.result.dstiprep }}"
          network.protocol: "{{ kv.result.etherproto }}"
          action.outcome: '{% if kv.result.action == "pass" %}success{% else %}failure{% endif %}'
        filter: >-
          {{ kv.result.logtype == "filter" or kv.result.logtype == "connection"
          or kv.result.logtype == "plugin" or kv.result.logtype == "alarm"   }}

      - set:
          stormshield.icmp.code: "{{ kv.result.icmpcode }}"
          stormshield.icmp.type: "{{ kv.result.icmptype }}"
          stormshield.target: "{{ kv.result.target }}"
        filter: '{{ kv.result.logtype == "filter" or kv.result.logtype == "alarm" }}'

      - set:
          event.kind: alert
          event.type: ["info"]
          event.category: '{% if kv.result.class != "system" %}["intrusion_detection"]{% else %}["process"]{% endif %}'
          stormshield.ids.classification: "{{ kv.result.classification }}"
          stormshield.ids.type: "{{ kv.result.class }}"
          stormshield.ids.pkt.len: "{{ kv.result.pktlen }}"
          stormshield.ids.pktcapture.len: "{{ kv.result.pktdumplen }}"
          stormshield.ids.pktcapture.id: "{{ kv.result.pktdump }}"
          stormshield.ids.alarmid: "{{ kv.result.alarmid }}"
          stormshield.ids.occurs: "{{ kv.result.repeat }}"
          stormshield.ids.risklevel: "{{ kv.result.repeat }}"
        filter: '{{ kv.result.logtype == "alarm" }}'

      - set:
          event.type: ["info"]
          event.category: ["authentication"]
          event.action: authentication
          error.message: "{{ kv.result.error }}"
          stormshield.auth.ruleid: "{{ kv.result.ruleid }}"
          stormshield.auth.agentid: "{{ kv.result.agentid }}"
          stormshield.auth.configid: "{{ kv.result.confid }}"
          stormshield.auth.totpused: "{{ kv.result.totp }}"
          stormshield.auth.method: "{{ kv.result.method }}"
          action.outcome: '{% if kv.result.get("error", "0") == "0" %}success{% else %}failure{% endif %}'
          network.protocol: "{% if 'SSH' in kv.result.msg %}ssh{% else %}https{% endif %}"
        filter: '{{ kv.result.logtype == "auth" }}'

      - set:
          event.type: ["info"]
          event.category: ["authentication"]
          event.action: authentication
          error.message: "{{ kv.result.error }}"
          network.protocol: https
          stormshield.auth.method: "web-ui"
          action.outcome: "{% if 'logged' in kv.result.msg %}success{% else %}unknown{% endif %}"
        filter: '{{ kv.result.logtype == "server" and kv.result.msg == "logged in" }}'

      - set:
          event.type: ["info"]
          event.category: ["authentication"]
          event.action: authentication
          network.protocol: ipsec
          action.outcome: "{% if 'failed' in kv.result.msg %}failure{% elif 'User authenticated' in kv.result.msg %}success{% else %}unknown{% endif %}"
          stormshield.auth.method: "ipsec"
        filter: '{{ kv.result.logtype == "vpn" and kv.result.ruletype == "mobile" }}'

      - set:
          event.type: ["info"]
          stormshield.plugin.operation: "{{ kv.result.op }}"
          stormshield.plugin.result: "{{ kv.result.result }}"
          stormshield.plugin.arg: "{{ kv.result.arg }}"
          stormshield.plugin.unit_id: "{{ kv.result.unit_id }}"
          stormshield.plugin.clientappid: "{{ kv.result.clientappid }}"
          stormshield.plugin.serverappid: "{{ kv.result.serverappid }}"
          stormshield.plugin.cipservicecode: "{{ kv.result.cipservicecode }}"
          stormshield.plugin.cipclassid: "{{ kv.result.cipclassid }}"
          stormshield.plugin.ntp_version: "{{ kv.result.version }}"
          stormshield.plugin.ntp_req_mode: "{{ kv.result.requestmode }}"
          stormshield.plugin.ntp_resp_mode: "{{ kv.result.responsemode }}"
          stormshield.plugin.softbus_ui: "{{ kv.result.UI }}"
          stormshield.plugin.error_class: "{{ kv.result.error_class }}"
          stormshield.plugin.error_code: "{{ kv.result.error_code }}"
          stormshield.plugin.format: "{{ kv.result.format }}"
          stormshield.plugin.groupid: "{{ kv.result.groupid }}"
        filter: '{{ kv.result.logtype == "plugin" }}'

      - set:
          event.type: ["info"]
          event.category: ["host"]
          stormshield.monitor.security: "{{ kv.result.security }}"
          stormshield.monitor.system: "{{ kv.result.system }}"
          stormshield.monitor.cpu.user: "{{ kv.result.CPU.split(',')[0] if kv.result.CPU else None }}"
          stormshield.monitor.cpu.kernel: "{{ kv.result.CPU.split(',')[1] if kv.result.CPU else None }}"
          stormshield.monitor.cpu.interrupts: "{{ kv.result.CPU.split(',')[2] if kv.result.CPU else None }}"
          stormshield.monitor.pvm.total_vulnerabilities: "{{ kv.result.Pvm.split(',')[0] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.remote_exploitable: "{{ kv.result.Pvm.split(',')[1] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.requires_server: "{{ kv.result.Pvm.split(',')[2] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.critical: "{{ kv.result.Pvm.split(',')[3] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.minor: "{{ kv.result.Pvm.split(',')[4] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.major: "{{ kv.result.Pvm.split(',')[5] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.with_patch: "{{ kv.result.Pvm.split(',')[6] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.info_total: "{{ kv.result.Pvm.split(',')[7] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.info_minor: "{{ kv.result.Pvm.split(',')[8] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.info_major: "{{ kv.result.Pvm.split(',')[9] if kv.result.Pvm else None }}"
          stormshield.monitor.pvm.hosts_count: "{{ kv.result.Pvm.split(',')[10] if kv.result.Pvm else None }}"
          stormshield.monitor.interface.ethernet0.name: "{{ kv.result.Ethernet0.split(',')[0] if kv.result.Ethernet0 else None }}"
          stormshield.monitor.interface.ethernet0.ingress_bps: "{{ kv.result.Ethernet0.split(',')[1] if kv.result.Ethernet0 else None }}"
          stormshield.monitor.interface.ethernet0.ingress_bps_max: "{{ kv.result.Ethernet0.split(',')[2] if kv.result.Ethernet0 else None }}"
          stormshield.monitor.interface.ethernet0.egress_bps: "{{ kv.result.Ethernet0.split(',')[3] if kv.result.Ethernet0 else None }}"
          stormshield.monitor.interface.ethernet0.egress_bps_max: "{{ kv.result.Ethernet0.split(',')[4] if kv.result.Ethernet0 else None }}"
          stormshield.monitor.interface.ethernet0.packets_accepted: "{{ kv.result.Ethernet0.split(',')[5] if kv.result.Ethernet0 else None }}"
          stormshield.monitor.interface.ethernet0.packets_blocked: "{{ kv.result.Ethernet0.split(',')[6] if kv.result.Ethernet0 else None }}"
          stormshield.monitor.interface.ethernet1.name: "{{ kv.result.Ethernet1.split(',')[0] if kv.result.Ethernet1 else None }}"
          stormshield.monitor.interface.ethernet1.ingress_bps: "{{ kv.result.Ethernet1.split(',')[1] if kv.result.Ethernet1 else None }}"
          stormshield.monitor.interface.ethernet1.ingress_bps_max: "{{ kv.result.Ethernet1.split(',')[2] if kv.result.Ethernet1 else None }}"
          stormshield.monitor.interface.ethernet1.egress_bps: "{{ kv.result.Ethernet1.split(',')[3] if kv.result.Ethernet1 else None }}"
          stormshield.monitor.interface.ethernet1.egress_bps_max: "{{ kv.result.Ethernet1.split(',')[4] if kv.result.Ethernet1 else None }}"
          stormshield.monitor.interface.ethernet1.packets_accepted: "{{ kv.result.Ethernet1.split(',')[5] if kv.result.Ethernet1 else None }}"
          stormshield.monitor.interface.ethernet1.packets_blocked: "{{ kv.result.Ethernet1.split(',')[6] if kv.result.Ethernet1 else None }}"
          stormshield.monitor.interface.ethernet2.name: "{{ kv.result.Ethernet2.split(',')[0] if kv.result.Ethernet2 else None }}"
          stormshield.monitor.interface.ethernet2.ingress_bps: "{{ kv.result.Ethernet2.split(',')[1] if kv.result.Ethernet2 else None }}"
          stormshield.monitor.interface.ethernet2.ingress_bps_max: "{{ kv.result.Ethernet2.split(',')[2] if kv.result.Ethernet2 else None }}"
          stormshield.monitor.interface.ethernet2.egress_bps: "{{ kv.result.Ethernet2.split(',')[3] if kv.result.Ethernet2 else None }}"
          stormshield.monitor.interface.ethernet2.egress_bps_max: "{{ kv.result.Ethernet2.split(',')[4] if kv.result.Ethernet2 else None }}"
          stormshield.monitor.interface.ethernet2.packets_accepted: "{{ kv.result.Ethernet2.split(',')[5] if kv.result.Ethernet2 else None }}"
          stormshield.monitor.interface.ethernet2.packets_blocked: "{{ kv.result.Ethernet2.split(',')[6] if kv.result.Ethernet2 else None }}"
          stormshield.monitor.interface.ethernet3.name: "{{ kv.result.Ethernet3.split(',')[0] if kv.result.Ethernet3 else None }}"
          stormshield.monitor.interface.ethernet3.ingress_bps: "{{ kv.result.Ethernet3.split(',')[1] if kv.result.Ethernet3 else None }}"
          stormshield.monitor.interface.ethernet3.ingress_bps_max: "{{ kv.result.Ethernet3.split(',')[2] if kv.result.Ethernet3 else None }}"
          stormshield.monitor.interface.ethernet3.egress_bps: "{{ kv.result.Ethernet3.split(',')[3] if kv.result.Ethernet3 else None }}"
          stormshield.monitor.interface.ethernet3.egress_bps_max: "{{ kv.result.Ethernet3.split(',')[4] if kv.result.Ethernet3 else None }}"
          stormshield.monitor.interface.ethernet3.packets_accepted: "{{ kv.result.Ethernet3.split(',')[5] if kv.result.Ethernet3 else None }}"
          stormshield.monitor.interface.ethernet3.packets_blocked: "{{ kv.result.Ethernet3.split(',')[6] if kv.result.Ethernet3 else None }}"
          stormshield.monitor.interface.ethernet4.name: "{{ kv.result.Ethernet4.split(',')[0] if kv.result.Ethernet4 else None }}"
          stormshield.monitor.interface.ethernet4.ingress_bps: "{{ kv.result.Ethernet4.split(',')[1] if kv.result.Ethernet4 else None }}"
          stormshield.monitor.interface.ethernet4.ingress_bps_max: "{{ kv.result.Ethernet4.split(',')[2] if kv.result.Ethernet4 else None }}"
          stormshield.monitor.interface.ethernet4.egress_bps: "{{ kv.result.Ethernet4.split(',')[3] if kv.result.Ethernet4 else None }}"
          stormshield.monitor.interface.ethernet4.egress_bps_max: "{{ kv.result.Ethernet4.split(',')[4] if kv.result.Ethernet4 else None }}"
          stormshield.monitor.interface.ethernet4.packets_accepted: "{{ kv.result.Ethernet4.split(',')[5] if kv.result.Ethernet4 else None }}"
          stormshield.monitor.interface.ethernet4.packets_blocked: "{{ kv.result.Ethernet4.split(',')[6] if kv.result.Ethernet4 else None }}"
          stormshield.monitor.interface.ethernet5.name: "{{ kv.result.Ethernet5.split(',')[0] if kv.result.Ethernet5 else None }}"
          stormshield.monitor.interface.ethernet5.ingress_bps: "{{ kv.result.Ethernet5.split(',')[1] if kv.result.Ethernet5 else None }}"
          stormshield.monitor.interface.ethernet5.ingress_bps_max: "{{ kv.result.Ethernet5.split(',')[2] if kv.result.Ethernet5 else None }}"
          stormshield.monitor.interface.ethernet5.egress_bps: "{{ kv.result.Ethernet5.split(',')[3] if kv.result.Ethernet5 else None }}"
          stormshield.monitor.interface.ethernet5.egress_bps_max: "{{ kv.result.Ethernet5.split(',')[4] if kv.result.Ethernet5 else None }}"
          stormshield.monitor.interface.ethernet5.packets_accepted: "{{ kv.result.Ethernet5.split(',')[5] if kv.result.Ethernet5 else None }}"
          stormshield.monitor.interface.ethernet5.packets_blocked: "{{ kv.result.Ethernet5.split(',')[6] if kv.result.Ethernet5 else None }}"
          stormshield.monitor.interface.ethernet6.name: "{{ kv.result.Ethernet6.split(',')[0] if kv.result.Ethernet6 else None }}"
          stormshield.monitor.interface.ethernet6.ingress_bps: "{{ kv.result.Ethernet6.split(',')[1] if kv.result.Ethernet6 else None }}"
          stormshield.monitor.interface.ethernet6.ingress_bps_max: "{{ kv.result.Ethernet6.split(',')[2] if kv.result.Ethernet6 else None }}"
          stormshield.monitor.interface.ethernet6.egress_bps: "{{ kv.result.Ethernet6.split(',')[3] if kv.result.Ethernet6 else None }}"
          stormshield.monitor.interface.ethernet6.egress_bps_max: "{{ kv.result.Ethernet6.split(',')[4] if kv.result.Ethernet6 else None }}"
          stormshield.monitor.interface.ethernet6.packets_accepted: "{{ kv.result.Ethernet6.split(',')[5] if kv.result.Ethernet6 else None }}"
          stormshield.monitor.interface.ethernet6.packets_blocked: "{{ kv.result.Ethernet6.split(',')[6] if kv.result.Ethernet6 else None }}"
          stormshield.monitor.interface.ethernet7.name: "{{ kv.result.Ethernet7.split(',')[0] if kv.result.Ethernet7 else None }}"
          stormshield.monitor.interface.ethernet7.ingress_bps: "{{ kv.result.Ethernet7.split(',')[1] if kv.result.Ethernet7 else None }}"
          stormshield.monitor.interface.ethernet7.ingress_bps_max: "{{ kv.result.Ethernet7.split(',')[2] if kv.result.Ethernet7 else None }}"
          stormshield.monitor.interface.ethernet7.egress_bps: "{{ kv.result.Ethernet7.split(',')[3] if kv.result.Ethernet7 else None }}"
          stormshield.monitor.interface.ethernet7.egress_bps_max: "{{ kv.result.Ethernet7.split(',')[4] if kv.result.Ethernet7 else None }}"
          stormshield.monitor.interface.ethernet7.packets_accepted: "{{ kv.result.Ethernet7.split(',')[5] if kv.result.Ethernet7 else None }}"
          stormshield.monitor.interface.ethernet7.packets_blocked: "{{ kv.result.Ethernet7.split(',')[6] if kv.result.Ethernet7 else None }}"
          stormshield.monitor.interface.ethernet8.name: "{{ kv.result.Ethernet8.split(',')[0] if kv.result.Ethernet8 else None }}"
          stormshield.monitor.interface.ethernet8.ingress_bps: "{{ kv.result.Ethernet8.split(',')[1] if kv.result.Ethernet8 else None }}"
          stormshield.monitor.interface.ethernet8.ingress_bps_max: "{{ kv.result.Ethernet8.split(',')[2] if kv.result.Ethernet8 else None }}"
          stormshield.monitor.interface.ethernet8.egress_bps: "{{ kv.result.Ethernet8.split(',')[3] if kv.result.Ethernet8 else None }}"
          stormshield.monitor.interface.ethernet8.egress_bps_max: "{{ kv.result.Ethernet8.split(',')[4] if kv.result.Ethernet8 else None }}"
          stormshield.monitor.interface.ethernet8.packets_accepted: "{{ kv.result.Ethernet8.split(',')[5] if kv.result.Ethernet8 else None }}"
          stormshield.monitor.interface.ethernet8.packets_blocked: "{{ kv.result.Ethernet8.split(',')[6] if kv.result.Ethernet8 else None }}"
          stormshield.monitor.interface.ethernet9.name: "{{ kv.result.Ethernet9.split(',')[0] if kv.result.Ethernet9 else None }}"
          stormshield.monitor.interface.ethernet9.ingress_bps: "{{ kv.result.Ethernet9.split(',')[1] if kv.result.Ethernet9 else None }}"
          stormshield.monitor.interface.ethernet9.ingress_bps_max: "{{ kv.result.Ethernet9.split(',')[2] if kv.result.Ethernet9 else None }}"
          stormshield.monitor.interface.ethernet9.egress_bps: "{{ kv.result.Ethernet9.split(',')[3] if kv.result.Ethernet9 else None }}"
          stormshield.monitor.interface.ethernet9.egress_bps_max: "{{ kv.result.Ethernet9.split(',')[4] if kv.result.Ethernet9 else None }}"
          stormshield.monitor.interface.ethernet9.packets_accepted: "{{ kv.result.Ethernet9.split(',')[5] if kv.result.Ethernet9 else None }}"
          stormshield.monitor.interface.ethernet9.packets_blocked: "{{ kv.result.Ethernet9.split(',')[6] if kv.result.Ethernet9 else None }}"
          stormshield.monitor.interface.agg0.name: "{{ kv.result.Agg0.split(',')[0] if kv.result.Agg0 else None }}"
          stormshield.monitor.interface.agg0.ingress_bps: "{{ kv.result.Agg0.split(',')[1] if kv.result.Agg0 else None }}"
          stormshield.monitor.interface.agg0.ingress_bps_max: "{{ kv.result.Agg0.split(',')[2] if kv.result.Agg0 else None }}"
          stormshield.monitor.interface.agg0.egress_bps: "{{ kv.result.Agg0.split(',')[3] if kv.result.Agg0 else None }}"
          stormshield.monitor.interface.agg0.egress_bps_max: "{{ kv.result.Agg0.split(',')[4] if kv.result.Agg0 else None }}"
          stormshield.monitor.interface.agg0.packets_accepted: "{{ kv.result.Agg0.split(',')[5] if kv.result.Agg0 else None }}"
          stormshield.monitor.interface.agg0.packets_blocked: "{{ kv.result.Agg0.split(',')[6] if kv.result.Agg0 else None }}"
          stormshield.monitor.interface.agg1.name: "{{ kv.result.Agg1.split(',')[0] if kv.result.Agg1 else None }}"
          stormshield.monitor.interface.agg1.ingress_bps: "{{ kv.result.Agg1.split(',')[1] if kv.result.Agg1 else None }}"
          stormshield.monitor.interface.agg1.ingress_bps_max: "{{ kv.result.Agg1.split(',')[2] if kv.result.Agg1 else None }}"
          stormshield.monitor.interface.agg1.egress_bps: "{{ kv.result.Agg1.split(',')[3] if kv.result.Agg1 else None }}"
          stormshield.monitor.interface.agg1.egress_bps_max: "{{ kv.result.Agg1.split(',')[4] if kv.result.Agg1 else None }}"
          stormshield.monitor.interface.agg1.packets_accepted: "{{ kv.result.Agg1.split(',')[5] if kv.result.Agg1 else None }}"
          stormshield.monitor.interface.agg1.packets_blocked: "{{ kv.result.Agg1.split(',')[6] if kv.result.Agg1 else None }}"
          stormshield.monitor.interface.agg2.name: "{{ kv.result.Agg2.split(',')[0] if kv.result.Agg2 else None }}"
          stormshield.monitor.interface.agg2.ingress_bps: "{{ kv.result.Agg2.split(',')[1] if kv.result.Agg2 else None }}"
          stormshield.monitor.interface.agg2.ingress_bps_max: "{{ kv.result.Agg2.split(',')[2] if kv.result.Agg2 else None }}"
          stormshield.monitor.interface.agg2.egress_bps: "{{ kv.result.Agg2.split(',')[3] if kv.result.Agg2 else None }}"
          stormshield.monitor.interface.agg2.egress_bps_max: "{{ kv.result.Agg2.split(',')[4] if kv.result.Agg2 else None }}"
          stormshield.monitor.interface.agg2.packets_accepted: "{{ kv.result.Agg2.split(',')[5] if kv.result.Agg2 else None }}"
          stormshield.monitor.interface.agg2.packets_blocked: "{{ kv.result.Agg2.split(',')[6] if kv.result.Agg2 else None }}"
          stormshield.monitor.interface.agg3.name: "{{ kv.result.Agg3.split(',')[0] if kv.result.Agg3 else None }}"
          stormshield.monitor.interface.agg3.ingress_bps: "{{ kv.result.Agg3.split(',')[1] if kv.result.Agg3 else None }}"
          stormshield.monitor.interface.agg3.ingress_bps_max: "{{ kv.result.Agg3.split(',')[2] if kv.result.Agg3 else None }}"
          stormshield.monitor.interface.agg3.egress_bps: "{{ kv.result.Agg3.split(',')[3] if kv.result.Agg3 else None }}"
          stormshield.monitor.interface.agg3.egress_bps_max: "{{ kv.result.Agg3.split(',')[4] if kv.result.Agg3 else None }}"
          stormshield.monitor.interface.agg3.packets_accepted: "{{ kv.result.Agg3.split(',')[5] if kv.result.Agg3 else None }}"
          stormshield.monitor.interface.agg3.packets_blocked: "{{ kv.result.Agg3.split(',')[6] if kv.result.Agg3 else None }}"
          stormshield.monitor.interface.agg4.name: "{{ kv.result.Agg4.split(',')[0] if kv.result.Agg4 else None }}"
          stormshield.monitor.interface.agg4.ingress_bps: "{{ kv.result.Agg4.split(',')[1] if kv.result.Agg4 else None }}"
          stormshield.monitor.interface.agg4.ingress_bps_max: "{{ kv.result.Agg4.split(',')[2] if kv.result.Agg4 else None }}"
          stormshield.monitor.interface.agg4.egress_bps: "{{ kv.result.Agg4.split(',')[3] if kv.result.Agg4 else None }}"
          stormshield.monitor.interface.agg4.egress_bps_max: "{{ kv.result.Agg4.split(',')[4] if kv.result.Agg4 else None }}"
          stormshield.monitor.interface.agg4.packets_accepted: "{{ kv.result.Agg4.split(',')[5] if kv.result.Agg4 else None }}"
          stormshield.monitor.interface.agg4.packets_blocked: "{{ kv.result.Agg4.split(',')[6] if kv.result.Agg4 else None }}"
          stormshield.monitor.interface.agg5.name: "{{ kv.result.Agg5.split(',')[0] if kv.result.Agg5 else None }}"
          stormshield.monitor.interface.agg5.ingress_bps: "{{ kv.result.Agg5.split(',')[1] if kv.result.Agg5 else None }}"
          stormshield.monitor.interface.agg5.ingress_bps_max: "{{ kv.result.Agg5.split(',')[2] if kv.result.Agg5 else None }}"
          stormshield.monitor.interface.agg5.egress_bps: "{{ kv.result.Agg5.split(',')[3] if kv.result.Agg5 else None }}"
          stormshield.monitor.interface.agg5.egress_bps_max: "{{ kv.result.Agg5.split(',')[4] if kv.result.Agg5 else None }}"
          stormshield.monitor.interface.agg5.packets_accepted: "{{ kv.result.Agg5.split(',')[5] if kv.result.Agg5 else None }}"
          stormshield.monitor.interface.agg5.packets_blocked: "{{ kv.result.Agg5.split(',')[6] if kv.result.Agg5 else None }}"
          stormshield.monitor.interface.agg6.name: "{{ kv.result.Agg6.split(',')[0] if kv.result.Agg6 else None }}"
          stormshield.monitor.interface.agg6.ingress_bps: "{{ kv.result.Agg6.split(',')[1] if kv.result.Agg6 else None }}"
          stormshield.monitor.interface.agg6.ingress_bps_max: "{{ kv.result.Agg6.split(',')[2] if kv.result.Agg6 else None }}"
          stormshield.monitor.interface.agg6.egress_bps: "{{ kv.result.Agg6.split(',')[3] if kv.result.Agg6 else None }}"
          stormshield.monitor.interface.agg6.egress_bps_max: "{{ kv.result.Agg6.split(',')[4] if kv.result.Agg6 else None }}"
          stormshield.monitor.interface.agg6.packets_accepted: "{{ kv.result.Agg6.split(',')[5] if kv.result.Agg6 else None }}"
          stormshield.monitor.interface.agg6.packets_blocked: "{{ kv.result.Agg6.split(',')[6] if kv.result.Agg6 else None }}"
          stormshield.monitor.interface.agg7.name: "{{ kv.result.Agg7.split(',')[0] if kv.result.Agg7 else None }}"
          stormshield.monitor.interface.agg7.ingress_bps: "{{ kv.result.Agg7.split(',')[1] if kv.result.Agg7 else None }}"
          stormshield.monitor.interface.agg7.ingress_bps_max: "{{ kv.result.Agg7.split(',')[2] if kv.result.Agg7 else None }}"
          stormshield.monitor.interface.agg7.egress_bps: "{{ kv.result.Agg7.split(',')[3] if kv.result.Agg7 else None }}"
          stormshield.monitor.interface.agg7.egress_bps_max: "{{ kv.result.Agg7.split(',')[4] if kv.result.Agg7 else None }}"
          stormshield.monitor.interface.agg7.packets_accepted: "{{ kv.result.Agg7.split(',')[5] if kv.result.Agg7 else None }}"
          stormshield.monitor.interface.agg7.packets_blocked: "{{ kv.result.Agg7.split(',')[6] if kv.result.Agg7 else None }}"
          stormshield.monitor.interface.agg8.name: "{{ kv.result.Agg8.split(',')[0] if kv.result.Agg8 else None }}"
          stormshield.monitor.interface.agg8.ingress_bps: "{{ kv.result.Agg8.split(',')[1] if kv.result.Agg8 else None }}"
          stormshield.monitor.interface.agg8.ingress_bps_max: "{{ kv.result.Agg8.split(',')[2] if kv.result.Agg8 else None }}"
          stormshield.monitor.interface.agg8.egress_bps: "{{ kv.result.Agg8.split(',')[3] if kv.result.Agg8 else None }}"
          stormshield.monitor.interface.agg8.egress_bps_max: "{{ kv.result.Agg8.split(',')[4] if kv.result.Agg8 else None }}"
          stormshield.monitor.interface.agg8.packets_accepted: "{{ kv.result.Agg8.split(',')[5] if kv.result.Agg8 else None }}"
          stormshield.monitor.interface.agg8.packets_blocked: "{{ kv.result.Agg8.split(',')[6] if kv.result.Agg8 else None }}"
          stormshield.monitor.interface.agg9.name: "{{ kv.result.Agg9.split(',')[0] if kv.result.Agg9 else None }}"
          stormshield.monitor.interface.agg9.ingress_bps: "{{ kv.result.Agg9.split(',')[1] if kv.result.Agg9 else None }}"
          stormshield.monitor.interface.agg9.ingress_bps_max: "{{ kv.result.Agg9.split(',')[2] if kv.result.Agg9 else None }}"
          stormshield.monitor.interface.agg9.egress_bps: "{{ kv.result.Agg9.split(',')[3] if kv.result.Agg9 else None }}"
          stormshield.monitor.interface.agg9.egress_bps_max: "{{ kv.result.Agg9.split(',')[4] if kv.result.Agg9 else None }}"
          stormshield.monitor.interface.agg9.packets_accepted: "{{ kv.result.Agg9.split(',')[5] if kv.result.Agg9 else None }}"
          stormshield.monitor.interface.agg9.packets_blocked: "{{ kv.result.Agg9.split(',')[6] if kv.result.Agg9 else None }}"
          stormshield.monitor.interface.vlan0.name: "{{ kv.result.vlan0.split(',')[0] if kv.result.vlan0 else None }}"
          stormshield.monitor.interface.vlan0.ingress_bps: "{{ kv.result.vlan0.split(',')[1] if kv.result.vlan0 else None }}"
          stormshield.monitor.interface.vlan0.ingress_bps_max: "{{ kv.result.vlan0.split(',')[2] if kv.result.vlan0 else None }}"
          stormshield.monitor.interface.vlan0.egress_bps: "{{ kv.result.vlan0.split(',')[3] if kv.result.vlan0 else None }}"
          stormshield.monitor.interface.vlan0.egress_bps_max: "{{ kv.result.vlan0.split(',')[4] if kv.result.vlan0 else None }}"
          stormshield.monitor.interface.vlan0.packets_accepted: "{{ kv.result.vlan0.split(',')[5] if kv.result.vlan0 else None }}"
          stormshield.monitor.interface.vlan0.packets_blocked: "{{ kv.result.vlan0.split(',')[6] if kv.result.vlan0 else None }}"
          stormshield.monitor.interface.vlan1.name: "{{ kv.result.vlan1.split(',')[0] if kv.result.vlan1 else None }}"
          stormshield.monitor.interface.vlan1.ingress_bps: "{{ kv.result.vlan1.split(',')[1] if kv.result.vlan1 else None }}"
          stormshield.monitor.interface.vlan1.ingress_bps_max: "{{ kv.result.vlan1.split(',')[2] if kv.result.vlan1 else None }}"
          stormshield.monitor.interface.vlan1.egress_bps: "{{ kv.result.vlan1.split(',')[3] if kv.result.vlan1 else None }}"
          stormshield.monitor.interface.vlan1.egress_bps_max: "{{ kv.result.vlan1.split(',')[4] if kv.result.vlan1 else None }}"
          stormshield.monitor.interface.vlan1.packets_accepted: "{{ kv.result.vlan1.split(',')[5] if kv.result.vlan1 else None }}"
          stormshield.monitor.interface.vlan1.packets_blocked: "{{ kv.result.vlan1.split(',')[6] if kv.result.vlan1 else None }}"
          stormshield.monitor.interface.vlan2.name: "{{ kv.result.vlan2.split(',')[0] if kv.result.vlan2 else None }}"
          stormshield.monitor.interface.vlan2.ingress_bps: "{{ kv.result.vlan2.split(',')[1] if kv.result.vlan2 else None }}"
          stormshield.monitor.interface.vlan2.ingress_bps_max: "{{ kv.result.vlan2.split(',')[2] if kv.result.vlan2 else None }}"
          stormshield.monitor.interface.vlan2.egress_bps: "{{ kv.result.vlan2.split(',')[3] if kv.result.vlan2 else None }}"
          stormshield.monitor.interface.vlan2.egress_bps_max: "{{ kv.result.vlan2.split(',')[4] if kv.result.vlan2 else None }}"
          stormshield.monitor.interface.vlan2.packets_accepted: "{{ kv.result.vlan2.split(',')[5] if kv.result.vlan2 else None }}"
          stormshield.monitor.interface.vlan2.packets_blocked: "{{ kv.result.vlan2.split(',')[6] if kv.result.vlan2 else None }}"
          stormshield.monitor.interface.vlan3.name: "{{ kv.result.vlan3.split(',')[0] if kv.result.vlan3 else None }}"
          stormshield.monitor.interface.vlan3.ingress_bps: "{{ kv.result.vlan3.split(',')[1] if kv.result.vlan3 else None }}"
          stormshield.monitor.interface.vlan3.ingress_bps_max: "{{ kv.result.vlan3.split(',')[2] if kv.result.vlan3 else None }}"
          stormshield.monitor.interface.vlan3.egress_bps: "{{ kv.result.vlan3.split(',')[3] if kv.result.vlan3 else None }}"
          stormshield.monitor.interface.vlan3.egress_bps_max: "{{ kv.result.vlan3.split(',')[4] if kv.result.vlan3 else None }}"
          stormshield.monitor.interface.vlan3.packets_accepted: "{{ kv.result.vlan3.split(',')[5] if kv.result.vlan3 else None }}"
          stormshield.monitor.interface.vlan3.packets_blocked: "{{ kv.result.vlan3.split(',')[6] if kv.result.vlan3 else None }}"
          stormshield.monitor.interface.vlan4.name: "{{ kv.result.vlan4.split(',')[0] if kv.result.vlan4 else None }}"
          stormshield.monitor.interface.vlan4.ingress_bps: "{{ kv.result.vlan4.split(',')[1] if kv.result.vlan4 else None }}"
          stormshield.monitor.interface.vlan4.ingress_bps_max: "{{ kv.result.vlan4.split(',')[2] if kv.result.vlan4 else None }}"
          stormshield.monitor.interface.vlan4.egress_bps: "{{ kv.result.vlan4.split(',')[3] if kv.result.vlan4 else None }}"
          stormshield.monitor.interface.vlan4.egress_bps_max: "{{ kv.result.vlan4.split(',')[4] if kv.result.vlan4 else None }}"
          stormshield.monitor.interface.vlan4.packets_accepted: "{{ kv.result.vlan4.split(',')[5] if kv.result.vlan4 else None }}"
          stormshield.monitor.interface.vlan4.packets_blocked: "{{ kv.result.vlan4.split(',')[6] if kv.result.vlan4 else None }}"
          stormshield.monitor.interface.vlan5.name: "{{ kv.result.vlan5.split(',')[0] if kv.result.vlan5 else None }}"
          stormshield.monitor.interface.vlan5.ingress_bps: "{{ kv.result.vlan5.split(',')[1] if kv.result.vlan5 else None }}"
          stormshield.monitor.interface.vlan5.ingress_bps_max: "{{ kv.result.vlan5.split(',')[2] if kv.result.vlan5 else None }}"
          stormshield.monitor.interface.vlan5.egress_bps: "{{ kv.result.vlan5.split(',')[3] if kv.result.vlan5 else None }}"
          stormshield.monitor.interface.vlan5.egress_bps_max: "{{ kv.result.vlan5.split(',')[4] if kv.result.vlan5 else None }}"
          stormshield.monitor.interface.vlan5.packets_accepted: "{{ kv.result.vlan5.split(',')[5] if kv.result.vlan5 else None }}"
          stormshield.monitor.interface.vlan5.packets_blocked: "{{ kv.result.vlan5.split(',')[6] if kv.result.vlan5 else None }}"
          stormshield.monitor.interface.vlan6.name: "{{ kv.result.vlan6.split(',')[0] if kv.result.vlan6 else None }}"
          stormshield.monitor.interface.vlan6.ingress_bps: "{{ kv.result.vlan6.split(',')[1] if kv.result.vlan6 else None }}"
          stormshield.monitor.interface.vlan6.ingress_bps_max: "{{ kv.result.vlan6.split(',')[2] if kv.result.vlan6 else None }}"
          stormshield.monitor.interface.vlan6.egress_bps: "{{ kv.result.vlan6.split(',')[3] if kv.result.vlan6 else None }}"
          stormshield.monitor.interface.vlan6.egress_bps_max: "{{ kv.result.vlan6.split(',')[4] if kv.result.vlan6 else None }}"
          stormshield.monitor.interface.vlan6.packets_accepted: "{{ kv.result.vlan6.split(',')[5] if kv.result.vlan6 else None }}"
          stormshield.monitor.interface.vlan6.packets_blocked: "{{ kv.result.vlan6.split(',')[6] if kv.result.vlan6 else None }}"
          stormshield.monitor.interface.vlan7.name: "{{ kv.result.vlan7.split(',')[0] if kv.result.vlan7 else None }}"
          stormshield.monitor.interface.vlan7.ingress_bps: "{{ kv.result.vlan7.split(',')[1] if kv.result.vlan7 else None }}"
          stormshield.monitor.interface.vlan7.ingress_bps_max: "{{ kv.result.vlan7.split(',')[2] if kv.result.vlan7 else None }}"
          stormshield.monitor.interface.vlan7.egress_bps: "{{ kv.result.vlan7.split(',')[3] if kv.result.vlan7 else None }}"
          stormshield.monitor.interface.vlan7.egress_bps_max: "{{ kv.result.vlan7.split(',')[4] if kv.result.vlan7 else None }}"
          stormshield.monitor.interface.vlan7.packets_accepted: "{{ kv.result.vlan7.split(',')[5] if kv.result.vlan7 else None }}"
          stormshield.monitor.interface.vlan7.packets_blocked: "{{ kv.result.vlan7.split(',')[6] if kv.result.vlan7 else None }}"
          stormshield.monitor.interface.vlan8.name: "{{ kv.result.vlan8.split(',')[0] if kv.result.vlan8 else None }}"
          stormshield.monitor.interface.vlan8.ingress_bps: "{{ kv.result.vlan8.split(',')[1] if kv.result.vlan8 else None }}"
          stormshield.monitor.interface.vlan8.ingress_bps_max: "{{ kv.result.vlan8.split(',')[2] if kv.result.vlan8 else None }}"
          stormshield.monitor.interface.vlan8.egress_bps: "{{ kv.result.vlan8.split(',')[3] if kv.result.vlan8 else None }}"
          stormshield.monitor.interface.vlan8.egress_bps_max: "{{ kv.result.vlan8.split(',')[4] if kv.result.vlan8 else None }}"
          stormshield.monitor.interface.vlan8.packets_accepted: "{{ kv.result.vlan8.split(',')[5] if kv.result.vlan8 else None }}"
          stormshield.monitor.interface.vlan8.packets_blocked: "{{ kv.result.vlan8.split(',')[6] if kv.result.vlan8 else None }}"
          stormshield.monitor.interface.vlan9.name: "{{ kv.result.vlan9.split(',')[0] if kv.result.vlan9 else None }}"
          stormshield.monitor.interface.vlan9.ingress_bps: "{{ kv.result.vlan9.split(',')[1] if kv.result.vlan9 else None }}"
          stormshield.monitor.interface.vlan9.ingress_bps_max: "{{ kv.result.vlan9.split(',')[2] if kv.result.vlan9 else None }}"
          stormshield.monitor.interface.vlan9.egress_bps: "{{ kv.result.vlan9.split(',')[3] if kv.result.vlan9 else None }}"
          stormshield.monitor.interface.vlan9.egress_bps_max: "{{ kv.result.vlan9.split(',')[4] if kv.result.vlan9 else None }}"
          stormshield.monitor.interface.vlan9.packets_accepted: "{{ kv.result.vlan9.split(',')[5] if kv.result.vlan9 else None }}"
          stormshield.monitor.interface.vlan9.packets_blocked: "{{ kv.result.vlan9.split(',')[6] if kv.result.vlan9 else None }}"
          stormshield.monitor.interface.qid0.name: "{{ kv.result.Qid0.split(',')[0] if kv.result.Qid0 else None }}"
          stormshield.monitor.interface.qid0.ingress_bps: "{{ kv.result.Qid0.split(',')[1] if kv.result.Qid0 else None }}"
          stormshield.monitor.interface.qid0.ingress_bps_max: "{{ kv.result.Qid0.split(',')[2] if kv.result.Qid0 else None }}"
          stormshield.monitor.interface.qid0.egress_bps: "{{ kv.result.Qid0.split(',')[3] if kv.result.Qid0 else None }}"
          stormshield.monitor.interface.qid0.egress_bps_max: "{{ kv.result.Qid0.split(',')[4] if kv.result.Qid0 else None }}"
          stormshield.monitor.interface.qid0.packets_accepted: "{{ kv.result.Qid0.split(',')[5] if kv.result.Qid0 else None }}"
          stormshield.monitor.interface.qid0.packets_blocked: "{{ kv.result.Qid0.split(',')[6] if kv.result.Qid0 else None }}"
          stormshield.monitor.interface.qid1.name: "{{ kv.result.Qid1.split(',')[0] if kv.result.Qid1 else None }}"
          stormshield.monitor.interface.qid1.ingress_bps: "{{ kv.result.Qid1.split(',')[1] if kv.result.Qid1 else None }}"
          stormshield.monitor.interface.qid1.ingress_bps_max: "{{ kv.result.Qid1.split(',')[2] if kv.result.Qid1 else None }}"
          stormshield.monitor.interface.qid1.egress_bps: "{{ kv.result.Qid1.split(',')[3] if kv.result.Qid1 else None }}"
          stormshield.monitor.interface.qid1.egress_bps_max: "{{ kv.result.Qid1.split(',')[4] if kv.result.Qid1 else None }}"
          stormshield.monitor.interface.qid1.packets_accepted: "{{ kv.result.Qid1.split(',')[5] if kv.result.Qid1 else None }}"
          stormshield.monitor.interface.qid1.packets_blocked: "{{ kv.result.Qid1.split(',')[6] if kv.result.Qid1 else None }}"
          stormshield.monitor.interface.qid2.name: "{{ kv.result.Qid2.split(',')[0] if kv.result.Qid2 else None }}"
          stormshield.monitor.interface.qid2.ingress_bps: "{{ kv.result.Qid2.split(',')[1] if kv.result.Qid2 else None }}"
          stormshield.monitor.interface.qid2.ingress_bps_max: "{{ kv.result.Qid2.split(',')[2] if kv.result.Qid2 else None }}"
          stormshield.monitor.interface.qid2.egress_bps: "{{ kv.result.Qid2.split(',')[3] if kv.result.Qid2 else None }}"
          stormshield.monitor.interface.qid2.egress_bps_max: "{{ kv.result.Qid2.split(',')[4] if kv.result.Qid2 else None }}"
          stormshield.monitor.interface.qid2.packets_accepted: "{{ kv.result.Qid2.split(',')[5] if kv.result.Qid2 else None }}"
          stormshield.monitor.interface.qid2.packets_blocked: "{{ kv.result.Qid2.split(',')[6] if kv.result.Qid2 else None }}"
          stormshield.monitor.interface.qid3.name: "{{ kv.result.Qid3.split(',')[0] if kv.result.Qid3 else None }}"
          stormshield.monitor.interface.qid3.ingress_bps: "{{ kv.result.Qid3.split(',')[1] if kv.result.Qid3 else None }}"
          stormshield.monitor.interface.qid3.ingress_bps_max: "{{ kv.result.Qid3.split(',')[2] if kv.result.Qid3 else None }}"
          stormshield.monitor.interface.qid3.egress_bps: "{{ kv.result.Qid3.split(',')[3] if kv.result.Qid3 else None }}"
          stormshield.monitor.interface.qid3.egress_bps_max: "{{ kv.result.Qid3.split(',')[4] if kv.result.Qid3 else None }}"
          stormshield.monitor.interface.qid3.packets_accepted: "{{ kv.result.Qid3.split(',')[5] if kv.result.Qid3 else None }}"
          stormshield.monitor.interface.qid3.packets_blocked: "{{ kv.result.Qid3.split(',')[6] if kv.result.Qid3 else None }}"
          stormshield.monitor.interface.qid4.name: "{{ kv.result.Qid4.split(',')[0] if kv.result.Qid4 else None }}"
          stormshield.monitor.interface.qid4.ingress_bps: "{{ kv.result.Qid4.split(',')[1] if kv.result.Qid4 else None }}"
          stormshield.monitor.interface.qid4.ingress_bps_max: "{{ kv.result.Qid4.split(',')[2] if kv.result.Qid4 else None }}"
          stormshield.monitor.interface.qid4.egress_bps: "{{ kv.result.Qid4.split(',')[3] if kv.result.Qid4 else None }}"
          stormshield.monitor.interface.qid4.egress_bps_max: "{{ kv.result.Qid4.split(',')[4] if kv.result.Qid4 else None }}"
          stormshield.monitor.interface.qid4.packets_accepted: "{{ kv.result.Qid4.split(',')[5] if kv.result.Qid4 else None }}"
          stormshield.monitor.interface.qid4.packets_blocked: "{{ kv.result.Qid4.split(',')[6] if kv.result.Qid4 else None }}"
          stormshield.monitor.interface.qid5.name: "{{ kv.result.Qid5.split(',')[0] if kv.result.Qid5 else None }}"
          stormshield.monitor.interface.qid5.ingress_bps: "{{ kv.result.Qid5.split(',')[1] if kv.result.Qid5 else None }}"
          stormshield.monitor.interface.qid5.ingress_bps_max: "{{ kv.result.Qid5.split(',')[2] if kv.result.Qid5 else None }}"
          stormshield.monitor.interface.qid5.egress_bps: "{{ kv.result.Qid5.split(',')[3] if kv.result.Qid5 else None }}"
          stormshield.monitor.interface.qid5.egress_bps_max: "{{ kv.result.Qid5.split(',')[4] if kv.result.Qid5 else None }}"
          stormshield.monitor.interface.qid5.packets_accepted: "{{ kv.result.Qid5.split(',')[5] if kv.result.Qid5 else None }}"
          stormshield.monitor.interface.qid5.packets_blocked: "{{ kv.result.Qid5.split(',')[6] if kv.result.Qid5 else None }}"
          stormshield.monitor.interface.qid6.name: "{{ kv.result.Qid6.split(',')[0] if kv.result.Qid6 else None }}"
          stormshield.monitor.interface.qid6.ingress_bps: "{{ kv.result.Qid6.split(',')[1] if kv.result.Qid6 else None }}"
          stormshield.monitor.interface.qid6.ingress_bps_max: "{{ kv.result.Qid6.split(',')[2] if kv.result.Qid6 else None }}"
          stormshield.monitor.interface.qid6.egress_bps: "{{ kv.result.Qid6.split(',')[3] if kv.result.Qid6 else None }}"
          stormshield.monitor.interface.qid6.egress_bps_max: "{{ kv.result.Qid6.split(',')[4] if kv.result.Qid6 else None }}"
          stormshield.monitor.interface.qid6.packets_accepted: "{{ kv.result.Qid6.split(',')[5] if kv.result.Qid6 else None }}"
          stormshield.monitor.interface.qid6.packets_blocked: "{{ kv.result.Qid6.split(',')[6] if kv.result.Qid6 else None }}"
          stormshield.monitor.interface.qid7.name: "{{ kv.result.Qid7.split(',')[0] if kv.result.Qid7 else None }}"
          stormshield.monitor.interface.qid7.ingress_bps: "{{ kv.result.Qid7.split(',')[1] if kv.result.Qid7 else None }}"
          stormshield.monitor.interface.qid7.ingress_bps_max: "{{ kv.result.Qid7.split(',')[2] if kv.result.Qid7 else None }}"
          stormshield.monitor.interface.qid7.egress_bps: "{{ kv.result.Qid7.split(',')[3] if kv.result.Qid7 else None }}"
          stormshield.monitor.interface.qid7.egress_bps_max: "{{ kv.result.Qid7.split(',')[4] if kv.result.Qid7 else None }}"
          stormshield.monitor.interface.qid7.packets_accepted: "{{ kv.result.Qid7.split(',')[5] if kv.result.Qid7 else None }}"
          stormshield.monitor.interface.qid7.packets_blocked: "{{ kv.result.Qid7.split(',')[6] if kv.result.Qid7 else None }}"
          stormshield.monitor.interface.qid8.name: "{{ kv.result.Qid8.split(',')[0] if kv.result.Qid8 else None }}"
          stormshield.monitor.interface.qid8.ingress_bps: "{{ kv.result.Qid8.split(',')[1] if kv.result.Qid8 else None }}"
          stormshield.monitor.interface.qid8.ingress_bps_max: "{{ kv.result.Qid8.split(',')[2] if kv.result.Qid8 else None }}"
          stormshield.monitor.interface.qid8.egress_bps: "{{ kv.result.Qid8.split(',')[3] if kv.result.Qid8 else None }}"
          stormshield.monitor.interface.qid8.egress_bps_max: "{{ kv.result.Qid8.split(',')[4] if kv.result.Qid8 else None }}"
          stormshield.monitor.interface.qid8.packets_accepted: "{{ kv.result.Qid8.split(',')[5] if kv.result.Qid8 else None }}"
          stormshield.monitor.interface.qid8.packets_blocked: "{{ kv.result.Qid8.split(',')[6] if kv.result.Qid8 else None }}"
          stormshield.monitor.interface.qid9.name: "{{ kv.result.Qid9.split(',')[0] if kv.result.Qid9 else None }}"
          stormshield.monitor.interface.qid9.ingress_bps: "{{ kv.result.Qid9.split(',')[1] if kv.result.Qid9 else None }}"
          stormshield.monitor.interface.qid9.ingress_bps_max: "{{ kv.result.Qid9.split(',')[2] if kv.result.Qid9 else None }}"
          stormshield.monitor.interface.qid9.egress_bps: "{{ kv.result.Qid9.split(',')[3] if kv.result.Qid9 else None }}"
          stormshield.monitor.interface.qid9.egress_bps_max: "{{ kv.result.Qid9.split(',')[4] if kv.result.Qid9 else None }}"
          stormshield.monitor.interface.qid9.packets_accepted: "{{ kv.result.Qid9.split(',')[5] if kv.result.Qid9 else None }}"
          stormshield.monitor.interface.qid9.packets_blocked: "{{ kv.result.Qid9.split(',')[6] if kv.result.Qid9 else None }}"
          stormshield.monitor.interface.qid10.name: "{{ kv.result.Qid10.split(',')[0] if kv.result.Qid10 else None }}"
          stormshield.monitor.interface.qid10.ingress_bps: "{{ kv.result.Qid10.split(',')[1] if kv.result.Qid10 else None }}"
          stormshield.monitor.interface.qid10.ingress_bps_max: "{{ kv.result.Qid10.split(',')[2] if kv.result.Qid10 else None }}"
          stormshield.monitor.interface.qid10.egress_bps: "{{ kv.result.Qid10.split(',')[3] if kv.result.Qid10 else None }}"
          stormshield.monitor.interface.qid10.egress_bps_max: "{{ kv.result.Qid10.split(',')[4] if kv.result.Qid10 else None }}"
          stormshield.monitor.interface.qid10.packets_accepted: "{{ kv.result.Qid10.split(',')[5] if kv.result.Qid10 else None }}"
          stormshield.monitor.interface.qid10.packets_blocked: "{{ kv.result.Qid10.split(',')[6] if kv.result.Qid10 else None }}"
          stormshield.monitor.interface.qid11.name: "{{ kv.result.Qid11.split(',')[0] if kv.result.Qid11 else None }}"
          stormshield.monitor.interface.qid11.ingress_bps: "{{ kv.result.Qid11.split(',')[1] if kv.result.Qid11 else None }}"
          stormshield.monitor.interface.qid11.ingress_bps_max: "{{ kv.result.Qid11.split(',')[2] if kv.result.Qid11 else None }}"
          stormshield.monitor.interface.qid11.egress_bps: "{{ kv.result.Qid11.split(',')[3] if kv.result.Qid11 else None }}"
          stormshield.monitor.interface.qid11.egress_bps_max: "{{ kv.result.Qid11.split(',')[4] if kv.result.Qid11 else None }}"
          stormshield.monitor.interface.qid11.packets_accepted: "{{ kv.result.Qid11.split(',')[5] if kv.result.Qid11 else None }}"
          stormshield.monitor.interface.qid11.packets_blocked: "{{ kv.result.Qid11.split(',')[6] if kv.result.Qid11 else None }}"
          stormshield.monitor.interface.qid12.name: "{{ kv.result.Qid12.split(',')[0] if kv.result.Qid12 else None }}"
          stormshield.monitor.interface.qid12.ingress_bps: "{{ kv.result.Qid12.split(',')[1] if kv.result.Qid12 else None }}"
          stormshield.monitor.interface.qid12.ingress_bps_max: "{{ kv.result.Qid12.split(',')[2] if kv.result.Qid12 else None }}"
          stormshield.monitor.interface.qid12.egress_bps: "{{ kv.result.Qid12.split(',')[3] if kv.result.Qid12 else None }}"
          stormshield.monitor.interface.qid12.egress_bps_max: "{{ kv.result.Qid12.split(',')[4] if kv.result.Qid12 else None }}"
          stormshield.monitor.interface.qid12.packets_accepted: "{{ kv.result.Qid12.split(',')[5] if kv.result.Qid12 else None }}"
          stormshield.monitor.interface.qid12.packets_blocked: "{{ kv.result.Qid12.split(',')[6] if kv.result.Qid12 else None }}"
          stormshield.monitor.interface.qid13.name: "{{ kv.result.Qid13.split(',')[0] if kv.result.Qid13 else None }}"
          stormshield.monitor.interface.qid13.ingress_bps: "{{ kv.result.Qid13.split(',')[1] if kv.result.Qid13 else None }}"
          stormshield.monitor.interface.qid13.ingress_bps_max: "{{ kv.result.Qid13.split(',')[2] if kv.result.Qid13 else None }}"
          stormshield.monitor.interface.qid13.egress_bps: "{{ kv.result.Qid13.split(',')[3] if kv.result.Qid13 else None }}"
          stormshield.monitor.interface.qid13.egress_bps_max: "{{ kv.result.Qid13.split(',')[4] if kv.result.Qid13 else None }}"
          stormshield.monitor.interface.qid13.packets_accepted: "{{ kv.result.Qid13.split(',')[5] if kv.result.Qid13 else None }}"
          stormshield.monitor.interface.qid13.packets_blocked: "{{ kv.result.Qid13.split(',')[6] if kv.result.Qid13 else None }}"
          stormshield.monitor.interface.qid14.name: "{{ kv.result.Qid14.split(',')[0] if kv.result.Qid14 else None }}"
          stormshield.monitor.interface.qid14.ingress_bps: "{{ kv.result.Qid14.split(',')[1] if kv.result.Qid14 else None }}"
          stormshield.monitor.interface.qid14.ingress_bps_max: "{{ kv.result.Qid14.split(',')[2] if kv.result.Qid14 else None }}"
          stormshield.monitor.interface.qid14.egress_bps: "{{ kv.result.Qid14.split(',')[3] if kv.result.Qid14 else None }}"
          stormshield.monitor.interface.qid14.egress_bps_max: "{{ kv.result.Qid14.split(',')[4] if kv.result.Qid14 else None }}"
          stormshield.monitor.interface.qid14.packets_accepted: "{{ kv.result.Qid14.split(',')[5] if kv.result.Qid14 else None }}"
          stormshield.monitor.interface.qid14.packets_blocked: "{{ kv.result.Qid14.split(',')[6] if kv.result.Qid14 else None }}"
          stormshield.monitor.interface.qid15.name: "{{ kv.result.Qid15.split(',')[0] if kv.result.Qid15 else None }}"
          stormshield.monitor.interface.qid15.ingress_bps: "{{ kv.result.Qid15.split(',')[1] if kv.result.Qid15 else None }}"
          stormshield.monitor.interface.qid15.ingress_bps_max: "{{ kv.result.Qid15.split(',')[2] if kv.result.Qid15 else None }}"
          stormshield.monitor.interface.qid15.egress_bps: "{{ kv.result.Qid15.split(',')[3] if kv.result.Qid15 else None }}"
          stormshield.monitor.interface.qid15.egress_bps_max: "{{ kv.result.Qid15.split(',')[4] if kv.result.Qid15 else None }}"
          stormshield.monitor.interface.qid15.packets_accepted: "{{ kv.result.Qid15.split(',')[5] if kv.result.Qid15 else None }}"
          stormshield.monitor.interface.qid15.packets_blocked: "{{ kv.result.Qid15.split(',')[6] if kv.result.Qid15 else None }}"
          stormshield.monitor.interface.qid16.name: "{{ kv.result.Qid16.split(',')[0] if kv.result.Qid16 else None }}"
          stormshield.monitor.interface.qid16.ingress_bps: "{{ kv.result.Qid16.split(',')[1] if kv.result.Qid16 else None }}"
          stormshield.monitor.interface.qid16.ingress_bps_max: "{{ kv.result.Qid16.split(',')[2] if kv.result.Qid16 else None }}"
          stormshield.monitor.interface.qid16.egress_bps: "{{ kv.result.Qid16.split(',')[3] if kv.result.Qid16 else None }}"
          stormshield.monitor.interface.qid16.egress_bps_max: "{{ kv.result.Qid16.split(',')[4] if kv.result.Qid16 else None }}"
          stormshield.monitor.interface.qid16.packets_accepted: "{{ kv.result.Qid16.split(',')[5] if kv.result.Qid16 else None }}"
          stormshield.monitor.interface.qid16.packets_blocked: "{{ kv.result.Qid16.split(',')[6] if kv.result.Qid16 else None }}"
          stormshield.monitor.interface.qid17.name: "{{ kv.result.Qid17.split(',')[0] if kv.result.Qid17 else None }}"
          stormshield.monitor.interface.qid17.ingress_bps: "{{ kv.result.Qid17.split(',')[1] if kv.result.Qid17 else None }}"
          stormshield.monitor.interface.qid17.ingress_bps_max: "{{ kv.result.Qid17.split(',')[2] if kv.result.Qid17 else None }}"
          stormshield.monitor.interface.qid17.egress_bps: "{{ kv.result.Qid17.split(',')[3] if kv.result.Qid17 else None }}"
          stormshield.monitor.interface.qid17.egress_bps_max: "{{ kv.result.Qid17.split(',')[4] if kv.result.Qid17 else None }}"
          stormshield.monitor.interface.qid17.packets_accepted: "{{ kv.result.Qid17.split(',')[5] if kv.result.Qid17 else None }}"
          stormshield.monitor.interface.qid17.packets_blocked: "{{ kv.result.Qid17.split(',')[6] if kv.result.Qid17 else None }}"
          stormshield.monitor.interface.qid18.name: "{{ kv.result.Qid18.split(',')[0] if kv.result.Qid18 else None }}"
          stormshield.monitor.interface.qid18.ingress_bps: "{{ kv.result.Qid18.split(',')[1] if kv.result.Qid18 else None }}"
          stormshield.monitor.interface.qid18.ingress_bps_max: "{{ kv.result.Qid18.split(',')[2] if kv.result.Qid18 else None }}"
          stormshield.monitor.interface.qid18.egress_bps: "{{ kv.result.Qid18.split(',')[3] if kv.result.Qid18 else None }}"
          stormshield.monitor.interface.qid18.egress_bps_max: "{{ kv.result.Qid18.split(',')[4] if kv.result.Qid18 else None }}"
          stormshield.monitor.interface.qid18.packets_accepted: "{{ kv.result.Qid18.split(',')[5] if kv.result.Qid18 else None }}"
          stormshield.monitor.interface.qid18.packets_blocked: "{{ kv.result.Qid18.split(',')[6] if kv.result.Qid18 else None }}"
          stormshield.monitor.interface.qid19.name: "{{ kv.result.Qid19.split(',')[0] if kv.result.Qid19 else None }}"
          stormshield.monitor.interface.qid19.ingress_bps: "{{ kv.result.Qid19.split(',')[1] if kv.result.Qid19 else None }}"
          stormshield.monitor.interface.qid19.ingress_bps_max: "{{ kv.result.Qid19.split(',')[2] if kv.result.Qid19 else None }}"
          stormshield.monitor.interface.qid19.egress_bps: "{{ kv.result.Qid19.split(',')[3] if kv.result.Qid19 else None }}"
          stormshield.monitor.interface.qid19.egress_bps_max: "{{ kv.result.Qid19.split(',')[4] if kv.result.Qid19 else None }}"
          stormshield.monitor.interface.qid19.packets_accepted: "{{ kv.result.Qid19.split(',')[5] if kv.result.Qid19 else None }}"
          stormshield.monitor.interface.qid19.packets_blocked: "{{ kv.result.Qid19.split(',')[6] if kv.result.Qid19 else None }}"
        filter: '{{ kv.result.logtype == "monitor" }}'

      - set:
          event.category: ["web"]
          http.request.method: "{{ kv.result.op }}"
          http.response.status_code: "{{ kv.result.result }}"
          url.domain: "{{ kv.result.dstname }}"
          url.path: "{{ kv.result.arg }}"
        filter: '{{ kv.result.logtype == "plugin" and kv.result.proto == "http" }}'

  set_startime:
    actions:
      - set:
          event.start: "{{parsed_startime.date}}"
    filter: '{{kv.result.startime != "" }}'

  # from Stormshield documentation:
  # action Behavior associated with the filter rule.
  # Value: "pass" or "block" (empty field for "Log" action)
  action_field_is_empty:
    actions:
      - set:
          stormshield.filter.action: "log"
    filter: "{{kv.result.action == None }}"
