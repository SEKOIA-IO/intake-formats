name: neropot_parser
ignored_values: ["", "-", null]

pipeline:
  - name: parsed_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
        output_field: message

  - name: set_neropot_fields

stages:
  set_neropot_fields:
    actions:
      - set:
          "@timestamp": "{{parsed_event.message.time | to_rfc3339}}"

          # === ECS - Destination ===
          destination.ip: "{{parsed_event.message.event.server.ip}}"
          destination.port: "{{parsed_event.message.event.server.port | int}}"

          # === ECS - Event ===
          event.provider: "{{parsed_event.message.source}}"
          event.code: "{{parsed_event.message.event.logtype}}"
          event.kind: "Alert"
          event.action: "{{parsed_event.message.event.action}}"

          # === ECS - File ===
          file.hash.sha256: "{{parsed_event.message.event.file.hash.sha256}}"
          file.mime_type: "{{parsed_event.message.event.file.mime_type}}"
          file.path: "{{parsed_event.message.event.file.upload_file}}"
          file.size: "{{parsed_event.message.event.file.size}}"

          # === ECS - Host ===
          host.name: "{{parsed_event.message.host}}"

          # === ECS - HTTP ===
          http.request.method: "{{parsed_event.message.event.http.request.method}}"
          http.request.referrer: "{{parsed_event.message.event.http.request.referrer}}"
          http.response.status_code: "{{parsed_event.message.event.http.response.status_code | int}}"

          # === ECS - Network ===
          network.iana_number: "{{parsed_event.message.event.protocol_number | int}}"
          network.protocol: "{{parsed_event.message.source.split('_')[0]}}"
          network.transport: "{{parsed_event.message.event.protocol_name}}"

          # === ECS - Observer ===
          observer.product: "NeroPot"
          observer.vendor: "NeroSwarm"

          # === ECS - Source ===
          source.ip: "{{parsed_event.message.event.client.ip}}"
          source.port: "{{parsed_event.message.event.client.port | int}}"

          # === ECS - Source.Geo ===
          source.geo.city_name: "{{parsed_event.message.event.client.geo.city}}"
          source.geo.continent_code: "{{parsed_event.message.event.client.geo.continent_code}}"
          source.geo.continent_name: "{{parsed_event.message.event.client.geo.continent}}"
          source.geo.country_name: "{{parsed_event.message.event.client.geo.country}}"
          source.geo.location: >-
            {% if parsed_event.message.event.client.geo.location.lat is not none
                  and parsed_event.message.event.client.geo.location.lon is not none %}
            {{ parsed_event.message.event.client.geo.location }}
            {% endif %}
          source.geo.timezone: "{{parsed_event.message.event.client.geo.timezone}}"
          # === ECS - Threat ===
          threat.tactic.name: "{{parsed_event.message.event.mitre.tactic}}"
          threat.technique.id: "{{parsed_event.message.event.mitre.id}}"
          threat.technique.name: "{{parsed_event.message.event.mitre.technique}}"

          # === ECS - TLS ===
          tls.version: "{{parsed_event.message.event.tls.version_protocol}}"

          # === ECS - URL ===
          url.path: "{{parsed_event.message.event.url.path}}"

          # === ECS - User ===
          user.name: "{{parsed_event.message.event.user.name}}"

          # === ECS - User-Agent ===
          user_agent.original: "{{parsed_event.message.event.user_agent.original}}"

          # === Custom/NeroSwarm Fields ===

          # === Shell Session ===
          neroswarm.cmd: "{{parsed_event.message.event.cmd}}"

          # === Crawler Identification ===
          neroswarm.crawler.bot_category: "{{parsed_event.message.event.crawler.bot_category}}"
          neroswarm.crawler.bot_name: "{{parsed_event.message.event.crawler.bot_name}}"

          # === Credential Access ===
          neroswarm.credential.compromised: "{{parsed_event.message.event.credential.compromised}}"
          neroswarm.credential.password: "{{parsed_event.message.event.credential.password}}"
          neroswarm.credential.username: "{{parsed_event.message.event.credential.username}}"

          # === DNS ===
          neroswarm.dns.alias: "{{parsed_event.message.event.dns.alias}}"
          neroswarm.dns.expire: "{{parsed_event.message.event.dns.expire}}"
          neroswarm.dns.exchange: "{{parsed_event.message.event.dns.exchange}}"
          neroswarm.dns.ip: "{{parsed_event.message.event.dns.ip}}"
          neroswarm.dns.mname: "{{parsed_event.message.event.dns.mname}}"
          neroswarm.dns.minimum: "{{parsed_event.message.event.dns.minimum}}"
          neroswarm.dns.nameserver: "{{parsed_event.message.event.dns.nameserver}}"
          neroswarm.dns.pointer: "{{parsed_event.message.event.dns.pointer}}"
          neroswarm.dns.preference: "{{parsed_event.message.event.dns.preference}}"
          neroswarm.dns.refresh: "{{parsed_event.message.event.dns.refresh}}"
          neroswarm.dns.retry: "{{parsed_event.message.event.dns.retry}}"
          neroswarm.dns.rname: "{{parsed_event.message.event.dns.rname}}"
          neroswarm.dns.serial: "{{parsed_event.message.event.dns.serial}}"
          neroswarm.dns.text: "{{parsed_event.message.event.dns.text}}"
          neroswarm.dns.type: "{{parsed_event.message.event.dns.type}}"

          # === Extra GeoIP AS Info ===
          neroswarm.source.geo.accuracy_radius: "{{parsed_event.message.event.client.geo.accuracy_radius | int}}"
          neroswarm.source.geo.as_domain: "{{parsed_event.message.event.client.geo.as_domain}}"
          neroswarm.source.geo.as_name: "{{parsed_event.message.event.client.geo.as_name}}"
          neroswarm.source.geo.asn: "{{parsed_event.message.event.client.geo.asn | int}}"
          neroswarm.source.geo.city_geoname_id: "{{parsed_event.message.event.client.geo.city_geoname_id}}"
          neroswarm.source.geo.continent_geoname_id: "{{parsed_event.message.event.client.geo.continent_geoname_id}}"
          neroswarm.source.geo.country_geoname_id: "{{parsed_event.message.event.client.geo.country_geoname_id}}"

          # === AI Template ===
          neroswarm.template: "{{parsed_event.message.event.template}}"

          # === Session / Tracking ===
          neroswarm.session.id: "{{parsed_event.message.event.session.id}}"
          neroswarm.tracking_id: "{{parsed_event.message.event.tracking_id}}"

          # === CWE ===
          neroswarm.vulnerability.description: "{{parsed_event.message.event.vulnerability.description}}"
          neroswarm.vulnerability.id: "{{parsed_event.message.event.vulnerability.id}}"

          # === NTP ===
          neroswarm.ntp.request_mode: "{{parsed_event.message.event.ntp.request_mode}}"
          neroswarm.ntp.request_type: "{{parsed_event.message.event.ntp.request_type}}"
          neroswarm.ntp.request_version: "{{parsed_event.message.event.ntp.request_version}}"

          # === RDP ===
          neroswarm.rdp.client: "{{parsed_event.message.event.rdp.client}}"
          neroswarm.rdp.cookie: "{{parsed_event.message.event.rdp.cookie}}"
          neroswarm.rdp.mstshash: "{{parsed_event.message.event.rdp.mstshash}}"

          # === SIP ===
          neroswarm.sip.error: "{{parsed_event.message.event.sip.error}}"
          neroswarm.sip.headers.accept: "{{parsed_event.message.event.sip.headers.accept}}"
          neroswarm.sip.headers.allow: "{{parsed_event.message.event.sip.headers.allow}}"
          neroswarm.sip.headers.call-id: "{{parsed_event.message.event.sip.headers.call-id}}"
          neroswarm.sip.headers.contact: "{{parsed_event.message.event.sip.headers.contact}}"
          neroswarm.sip.headers.content-type: "{{parsed_event.message.event.sip.headers.content-type}}"
          neroswarm.sip.headers.cseq: "{{parsed_event.message.event.sip.headers.cseq}}"
          neroswarm.sip.headers.from: "{{parsed_event.message.event.sip.headers.from}}"
          neroswarm.sip.headers.max-forwards: "{{parsed_event.message.event.sip.headers.max-forwards}}"
          neroswarm.sip.headers.to: "{{parsed_event.message.event.sip.headers.to}}"
          neroswarm.sip.headers.user-agent: "{{parsed_event.message.event.sip.headers.user-agent}}"
          neroswarm.sip.headers.via: "{{parsed_event.message.event.sip.headers.via}}"

          # === SNMP ===
          neroswarm.snmp.community_string: "{{parsed_event.message.event.snmp.community_string}}"
          neroswarm.snmp.pdu_type: "{{parsed_event.message.event.snmp.pdu_type}}"
          neroswarm.snmp.request_id: "{{parsed_event.message.event.snmp.request_id}}"
          neroswarm.snmp.variable_bindings: "{{parsed_event.message.event.snmp.variable_bindings}}"
          neroswarm.snmp.version: "{{parsed_event.message.event.snmp.version}}"

          # === SQL ===
          neroswarm.sql.client_encoding: "{{parsed_event.message.event.sql.client_encoding}}"
          neroswarm.sql.database: "{{parsed_event.message.event.sql.database}}"
          neroswarm.sql.hash_type: "{{parsed_event.message.event.sql.hash_type}}"
          neroswarm.sql.salt: "{{parsed_event.message.event.sql.salt}}"
          neroswarm.sql.thread_id: "{{parsed_event.message.event.sql.thread_id}}"

          # === SSH ===
          neroswarm.ssh.auth_method: "{{parsed_event.message.event.ssh.auth_method}}"
          neroswarm.ssh.incoming_packet_sequence: "{{parsed_event.message.event.ssh.incoming_packet_sequence}}"
          neroswarm.ssh.keyalg: "{{parsed_event.message.event.ssh.keyalg}}"
          neroswarm.ssh.local_version: "{{parsed_event.message.event.ssh.local_version}}"
          neroswarm.ssh.login_attempts: "{{parsed_event.message.event.ssh.login_attempts}}"
          neroswarm.ssh.outgoing_packet_sequence: "{{parsed_event.message.event.ssh.outgoing_packet_sequence}}"
          neroswarm.ssh.remote_version: "{{parsed_event.message.event.ssh.remote_version}}"

          # === TFTP ===
          neroswarm.tftp.filename: "{{parsed_event.message.event.tftp.filename}}"
          neroswarm.tftp.mode: "{{parsed_event.message.event.tftp.mode}}"
          neroswarm.tftp.opcode: "{{parsed_event.message.event.tftp.opcode}}"

          # === VNC ===
          neroswarm.vnc.client_response: "{{parsed_event.message.event.vnc.client_response}}"
          neroswarm.vnc.client_version: "{{parsed_event.message.event.vnc.client_version}}"
          neroswarm.vnc.encryption_type: "{{parsed_event.message.event.vnc.encryption_type}}"
          neroswarm.vnc.server_challenge: "{{parsed_event.message.event.vnc.server_challenge}}"

      - translate:
        dictionary:
          "login": ["authentication"]
          "connection": ["network"]
        fallback: ["intrusion_detection"]
        mapping:
          parsed_event.message.event.action: event.category

      - translate:
        dictionary:
          "login": ["info"]
          "connection": ["info"]
        fallback: ["info"]
        mapping:
          parsed_event.message.event.action: event.type
