name: rsa-securid
pipeline:
  - name: parsed_dsv
    external:
      name: dsv.parse-dsv
      properties:
        input_field: original.message
        output_field: message
        columnnames:
          - TIME
          - MS_TIME
          - OBSERVER_HOSTNAME
          - RSA_SECUREID_CLASS
        delimiter: ","

  - name: parsed_event
    filter: "{{ 'audit.runtime' in parsed_dsv.message.RSA_SECUREID_CLASS }}"
    external:
      name: dsv.parse-dsv
      properties:
        input_field: original.message
        output_field: message
        columnnames:
          - TIME
          - MS_TIME
          - OBSERVER_HOSTNAME
          - RSA_SECUREID_CLASS
          - LOG_LEVEL
          - CORRELATION_ID
          - OBSERVER_SERIAL_NUMBER
          - SOURCE_IP
          - DESTINATION_IP
          - RSA_SECUREID_ACTION_NAME
          - EVENT_CODE
          - RSA_SECUREID_EVENT_OUTCOME
          - EVENT_REASON
          - RSA_SECUREID_SESSION_ID
          - USER_ID
          - RSA_SECUREID_SOURCE_ID
          - RSA_SECUREID_DOMAIN_ID
          - USER_NAME
          - USER_FIRSTNAME
          - USER_LASTNAME
          - AGENT_ID
          - RSA_SECUREID_AGENT_DOMAIN_ID
          - RSA_SECUREID_AGENT_IP
          - AGENT_NAME
          - RSA_SECUREID_POLICY_METHOD_ID
          - RSA_SECUREID_POLICY_METHOD_NAME
          - RSA_SECUREID_POLICY_ID
          - RSA_SECUREID_POLICY_EXPRESSION
          - ARG1
          - ARG2
          - ARG3
          - ARG4
          - ARG5
          - ARG6
          - ARG7
          - ARG8
          - ARG9
          - ARG10
        delimiter: ","

  - name: parsed_event
    filter: "{{ 'audit.admin' in parsed_dsv.message.RSA_SECUREID_CLASS }}"
    external:
      name: dsv.parse-dsv
      properties:
        input_field: original.message
        output_field: message
        columnnames:
          - TIME
          - MS_TIME
          - OBSERVER_HOSTNAME
          - RSA_SECUREID_CLASS
          - LOG_LEVEL
          - CORRELATION_ID
          - OBSERVER_SERIAL_NUMBER
          - SOURCE_IP
          - DESTINATION_IP
          - RSA_SECUREID_ACTION_NAME
          - EVENT_CODE
          - RSA_SECUREID_EVENT_OUTCOME
          - EVENT_REASON
          - RSA_SECUREID_SESSION_ID
          - UNKNOWN
          - USER_ID
          - RSA_SECUREID_SOURCE_ID
          - RSA_SECUREID_DOMAIN_ID
          - USER_NAME
          - USER_FIRSTNAME
          - USER_LASTNAME
          - RSA_SECUREID_OBJECTS_TYPE
          - RSA_SECUREID_OBJECTS_ID
          - RSA_SECUREID_OBJECTS_SOURCE_ID
          - RSA_SECUREID_SECURITY_ID
          - RSA_SECUREID_OBJECTS_NAME
          - RSA_SECUREID_OBJECTS_TYPE_2
          - RSA_SECUREID_OBJECTS_ID_2
          - RSA_SECUREID_OBJECTS_SOURCE_ID_2
          - RSA_SECUREID_SECURITY_ID_2
          - RSA_SECUREID_OBJECTS_NAME_2
          - RSA_SECUREID_OBJECTS_TYPE_3
          - RSA_SECUREID_OBJECTS_ID_3
          - RSA_SECUREID_OBJECTS_SOURCE_ID_3
          - RSA_SECUREID_SECURITY_ID_3
          - RSA_SECUREID_OBJECTS_NAME_3
        delimiter: ","

  - name: parsed_event
    filter: "{{ 'system' in parsed_dsv.message.RSA_SECUREID_CLASS }}"
    external:
      name: dsv.parse-dsv
      properties:
        input_field: original.message
        output_field: message
        columnnames:
          - TIME
          - MS_TIME
          - OBSERVER_HOSTNAME
          - RSA_SECUREID_CLASS
          - LOG_LEVEL
          - CORRELATION_ID
          - OBSERVER_SERIAL_NUMBER
          - SOURCE_IP
          - DESTINATION_IP
          - RSA_SECUREID_ACTION_NAME
          - EVENT_CODE
          - RSA_SECUREID_EVENT_OUTCOME
          - EVENT_REASON
          - RSA_SECUREID_SESSION_ID
          - USER_ID
          - RSA_SECUREID_SOURCE_ID
          - RSA_SECUREID_DOMAIN_ID
          - USER_NAME
          - USER_FIRSTNAME
          - USER_LASTNAME
          - ARG1
          - ARG2
          - ARG3
          - ARG4
          - ARG5
          - ARG6
          - CAUSE
        delimiter: ","

  - name: parsed_description
    filter: "{{ parsed_dsv.message.RSA_SECUREID_CLASS == None }}"
    external:
      name: grok.match
      properties:
        input_field: "{{original.message}}"
        output_field: message
        pattern: 'rsaadmin\s*:\s*TTY=%{GREEDYDATA:tty}\s*;\s*PWD=%{GREEDYDATA:pwd}\s*;\s*USER=%{GREEDYDATA:user}\s*;\s*COMMAND=%{GREEDYDATA:command}|%{GREEDYDATA:reason}'

  - name: set_csv_fields

stages:
  set_csv_fields:
    actions:
      - set:
          observer.hostname: "{{parsed_event.message.OBSERVER_HOSTNAME}}"
          observer.serial_number: "{{parsed_event.message.OBSERVER_SERIAL_NUMBER}}"
          source.ip: "{{parsed_event.message.SOURCE_IP}}"
          log.level: "{{parsed_event.message.LOG_LEVEL | trim}}"
          destination.ip: "{{parsed_event.message.DESTINATION_IP}}"
          event.code: "{{parsed_event.message.EVENT_CODE}}"
          user.id: "{{parsed_event.message.USER_ID}}"
          user.target.name: "{{parsed_event.message.RSA_SECUREID_OBJECTS_NAME_2}}"
          rsa.securid.user.firstname: "{{parsed_event.message.USER_FIRSTNAME}}"
          rsa.securid.user.lastname: "{{parsed_event.message.USER_LASTNAME}}"
          agent.id: "{{parsed_event.message.AGENT_ID}}"
          agent.name: "{{parsed_event.message.AGENT_NAME}}"
          rsa.securid.event.outcome: "{{parsed_event.message.RSA_SECUREID_EVENT_OUTCOME}}"
          rsa.securid.class: "{{parsed_event.message.RSA_SECUREID_CLASS}}"
          rsa.securid.action.name: "{{parsed_event.message.RSA_SECUREID_ACTION_NAME}}"
          rsa.securid.session.id: "{{parsed_event.message.RSA_SECUREID_SESSION_ID}}"
          rsa.securid.source.id: "{{parsed_event.message.RSA_SECUREID_SOURCE_ID}}"
          rsa.securid.domain.id: "{{parsed_event.message.RSA_SECUREID_DOMAIN_ID}}"
          rsa.securid.agent.ip: "{{parsed_event.message.RSA_SECUREID_AGENT_IP}}"
          rsa.securid.agent.domain.id: "{{parsed_event.message.RSA_SECUREID_AGENT_DOMAIN_ID}}"
          rsa.securid.policy.method.id: "{{parsed_event.message.RSA_SECUREID_POLICY_METHOD_ID}}"
          rsa.securid.policy.method.name: "{{parsed_event.message.RSA_SECUREID_POLICY_METHOD_NAME}}"
          rsa.securid.policy.id: "{{parsed_event.message.RSA_SECUREID_POLICY_ID}}"
          rsa.securid.policy.expression: "{{parsed_event.message.RSA_SECUREID_POLICY_EXPRESSION}}"
          rsa.securid.objects.type: "{{parsed_event.message.RSA_SECUREID_OBJECTS_TYPE}}"
          rsa.securid.objects.id: "{{parsed_event.message.RSA_SECUREID_OBJECTS_ID}}"
          rsa.securid.objects.source.id: "{{parsed_event.message.RSA_SECUREID_OBJECTS_SOURCE_ID}}"
          rsa.securid.objects.security.id: "{{parsed_event.message.RSA_SECUREID_SECURITY_ID}}"
          rsa.securid.objects.name: "{{parsed_event.message.RSA_SECUREID_OBJECTS_NAME}}"
          rsa.securid.process.tty: "{{parsed_description.message.tty}}"
          process.working_directory: "{{parsed_description.message.pwd}}"
          process.command_line: "{{parsed_description.message.command}}"
      - set:
          user.name: "{{parsed_event.message.USER_NAME}}"
          event.reason: "{{parsed_event.message.EVENT_REASON}}"
        filter: "{{ parsed_dsv.message.RSA_SECUREID_CLASS != None }}"
      - set:
          user.name: "{{parsed_description.message.user}}"
          event.reason: "{{parsed_description.message.reason}}"
        filter: "{{ parsed_dsv.message.RSA_SECUREID_CLASS == None }}"
      - translate:
        dictionary:
          "AUTHN_LOGOUT_EVENT": ["authentication"]
          "AUTHN_LOGIN_EVENT": ["authentication"]
          "AUTH_PRINCIPAL_RESOLUTION": ["authentication"]
          "AM_UNLINK_TOKEN_PRINCIPAL": ["authentication"]
          "UPDATE_PRINCIPAL": ["configuration"]
          "CONF_VALUE_UPDATED": ["configuration"]
        mapping:
          parsed_event.message.RSA_SECUREID_ACTION_NAME: event.category
        fallback: ["host"]
      - translate:
        dictionary:
          "AUTHN_LOGOUT_EVENT": ["end"]
          "AUTHN_LOGIN_EVENT": ["start"]
          "AUTH_PRINCIPAL_RESOLUTION": ["info"]
          "AM_UNLINK_TOKEN_PRINCIPAL": ["end"]
          "UPDATE_PRINCIPAL": ["change"]
          "CONF_VALUE_UPDATED": ["change"]
        mapping:
          parsed_event.message.RSA_SECUREID_ACTION_NAME: event.type
        fallback: ["info"]
