name: sentinelone
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
  - name: parsed_process_start
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.data.sourceprocessstarttime | float / 1000}}"
        output_field: datetime
        format: "timestamp"
    filter: "{{json_event.message.get('data', {}).get('sourceprocessstarttime', 0) != 0}}"
  - name: parsed_process_parent_start
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.data.sourceparentprocessstarttime | float / 1000}}"
        output_field: datetime
        format: "timestamp"
    filter: "{{json_event.message.get('data', {}).get('sourceparentprocessstarttime', 0) != 0}}"
  - name: read_threat_info
    filter: '{{json_event.message.threatInfo != null }}'
  - name: read_agent_info
  - name: read_agent_detection_info
    filter: '{{json_event.message.agentRealtimeInfo != null }}'
  - name: read_agent_realtime_info
    filter: '{{json_event.message.agentDetectionInfo != null }}'
  - name: read_data
    filter: '{{json_event.message.data != null }}'
  - name: set_ecs_categorization_fields
    filter: '{{json_event.message.activityType != null }}'
  - name: read_containerInfo
    filter: '{{json_event.message.containerInfo != null}}'
  - name: read_kubernetesInfo
    filter: '{{json_event.message.kubernetesInfo != null and json_event.message.kubernetesInfo.cluster != None}}'

stages:

  set_ecs_categorization_fields:
    actions:
      # Set default values
      - set:
          event.kind: event
          event.category: ["intrusion_detection"]
          event.type: [ "info" ]

      # 90: Agent started full disk scan
      # 91: Agent aborted full disk scan
      # 92: Agent completed full disk scan
      - set:
          event.kind: event
          event.category: ["intrusion_detection"]
        filter: "{{json_event.message.activityType == 90 or json_event.message.activityType == 91 or json_event.message.activityType == 92 }}"

      # 5126: Device control approved event
      - set:
          event.kind: event
          event.category: host
          event.type: [ "allowed" ]
        filter: "{{json_event.message.activityType == 5126 }}"

  read_kubernetesInfo:
    actions:
      - set:
          orchestrator.type: kubernetes
          orchestrator.cluster.name: "{{json_event.message.kubernetesInfo.cluster}}"
          sentinelone.kubernetesInfo.controllerKind: "{{json_event.message.kubernetesInfo.controllerKind}}"
          sentinelone.kubernetesInfo.controllerLabels: "{{json_event.message.kubernetesInfo.controllerLabels}}"
          sentinelone.kubernetesInfo.controllerName: "{{json_event.message.kubernetesInfo.controllerName}}"
          orchestrator.namespace: "{{json_event.message.kubernetesInfo.namespace}}"
          sentinelone.kubernetesInfo.namespaceLabels: "{{json_event.message.kubernetesInfo.namespaceLabels}}"
          sentinelone.kubernetesInfo.node: "{{json_event.message.kubernetesInfo.node}}"
          sentinelone.kubernetesInfo.pod: "{{json_event.message.kubernetesInfo.pod}}"
          sentinelone.kubernetesInfo.podLabels: "{{json_event.message.kubernetesInfo.podLabels}}"

  read_containerInfo:
    actions:
      - set:
          container.id: "{{json_event.message.containerInfo.id}}"
          container.image.name: "{{json_event.message.containerInfo.image}}"
          container.labels: "{{json_event.message.containerInfo.labels}}"
          container.name: "{{json_event.message.containerInfo.name}}"

  read_agent_info:
    actions:
      - set:
          sentinelone.eventid: "{{json_event.message.id}}"
          # fix: sentinelone.primaryDescription: "{{json_event.message.primaryDescription}}"
          event.reason: "{{json_event.message.primaryDescription}}"
          organization.id: "{{json_event.message.accountId}}"
          organization.name: "{{json_event.message.accountName}}"
          action.type: "{{json_event.message.activityType}}"
          user.id: "{{json_event.message.userId}}"
          sentinelone.secondaryDescription: "{{json_event.message.secondaryDescription}}"
          sentinelone.siteId: "{{json_event.message.siteId}}"
          sentinelone.description: "{{json_event.message.description}}"
          # fix: sentinelone.groupId: "{{json_event.message.groupId}}"
          group.id: "{{json_event.message.groupId}}"
          # fix: sentinelone.groupname: "{{json_event.message.groupName}}"
          group.name: "{{json_event.message.groupName}}"
          sentinelone.hash: "{{json_event.message.hash}}"

          agent.id: "{{json_event.message.agentId}}"
          agent.version: "{{json_event.message.agentUpdatedVersion}}"

          sentinelone.comments: "{{json_event.message.comments}}"
          sentinelone.sitename: "{{json_event.message.siteName}}"
          sentinelone.threatId: "{{json_event.message.threatId}}"
          sentinelone.updatedAt: "{{json_event.message.updatedAt}}"
          os.family: "{{json_event.message.osFamily}}"
          sentinelone.createdAt: "{{json_event.message.createdAt}}"
          sentinelone.indicators: "{{json_event.message.indicators}}"
          sentinelone.mitigationStatus: "{{json_event.message.mitigationStatus}}"
          sentinelone.EventTime: "{{json_event.message.EventTime}}"
          sentinelone.applications: "{{json_event.message.applications}}"
          sentinelone.whiteningOptions: "{{json_event.message.whiteningOptions}}"
      - translate:
        dictionary:
            2: Hash Defined as Malicious By Cloud
            5: Agent Software Update Downloaded
            15: User Marked Agent As Up To Date
            16: Agent software updated
            17: Agent subscribed
            18: New Threat Mitigated
            19: New Malicious Threat Not Mitigated
            20: New Threat Preemptive Block
            21: Threat Resolved
            22: Threat Benign
            23: User Added
            24: User Modified
            25: User Deleted
            26: Management Updated
            27: User Logged In
            28: Activity Marked As Resolved By Cloud
            29: Activity Marked As Unresolved By Cloud
            33: User Logged Out
            34: Threat Unresolved
            35: Verification email
            36: Verification complete
            37: User modified
            38: Immune Settings Modified
            39: Research Settings Modified
            40: Cloud Intelligence Settings Modified
            41: Learning Mode Settings Modified
            42: Global 2FA modified
            43: Agent updated
            44: Auto decommission On
            45: Auto decommission Off
            46: Auto Decommission Period Modified
            47: Agent Decommissioned
            48: Agent Recommissioned
            49: Agent Request Uninstall
            50: Uninstall Agent
            51: Agent Uninstalled
            52: User Approved Agent Uninstall Request
            53: User Rejected Agent Uninstall Request
            54: User Decommissioned Agent
            55: User Recommissioned Agent
            56: Auto Mitigation Actions Modified
            57: Quarantine Network Settings Modified
            58: Notification Option Level Modified
            59: Event Severity Level Modified
            60: Recipients Configuration Modified
            61: User Disconnected Agent From Network
            62: User Reconnected Agent to Network
            63: User Shutdown Agent
            64: User Requested Passphrase
            65: User Requested Full Log Report
            66: Agent Uploaded Full Log Report
            67: User 2FA Modified
            68: Engine Modified In Policy
            69: Mitigation Policy Modified
            70: Policy Setting - Agent Notification On Suspicious Modified
            71: Scan Initiated
            72: Scan Aborted
            73: Scan New Agents Changed
            74: Machine Restart
            76: Anti Tampering Modified
            77: Agent UI Settings Modified
            78: Snapshots Settings Modified
            79: Agent Logging Modified
            80: Agent Uploaded Fetched Files
            81: User Requested Fetch Files
            82: Monitor On Execute
            83: Monitor On Write
            84: Deep Visibility Settings Modified
            85: User Requested Fetch Threat File
            86: Agent Uploaded Threat File
            87: Remote Shell Settings Modified
            88: User Remote Shell Modified
            89: User Requested Randomized Agent UUID
            90: Agent Started Full Disk Scan
            91: Agent Aborted Full Disk Scan
            92: Agent Completed Full Disk Scan
            93: User Reset Agent's Local Config
            94: User Moved Agent To Another Site
            95: User Moved Agent to Group
            96: User Moved Agent from Site
            97: User Commanded Agent To Move To Another Console
            98: Agent Was Not Moved To Another Console
            99: Agent Successfully Moved To Another Console
            101: User Changed Agent's Customer Identifier
            102: User Deleted
            103: User Deleted
            105: Deep Visibility Settings Modified
            107: User Created RBAC Role
            108: User Edited RBAC Role
            109: User Deleted RBAC Role
            116: Policy Settings Modified
            117: User Disabled Agent
            118: User Enabled Agent
            119: Agent Disabled
            120: Agent Enabled
            121: User Started Remote Profiling
            122: User Stopped Remote Profiling
            123: Remote Profiler Enabled
            124: Remote Profiler Disabled
            125: Disable Agent Error
            126: Agent Disabled
            127: Agent Disabled
            128: Agent Disabled Because of Database Corruption
            129: Allowed Domains Settings Changed
            130: Opt-in To EA program
            131: Opt-out From EA Program
            132: EA Platform Settings Changed
            133: Existing User Login Failure
            134: Unknown User Login
            200: File Upload Settings Modified
            201: File Upload Enabled/Disabled
            203: User Downloaded File
            204: Scheduled Report Removed
            221: Threat Automatically Resolved
            1001: Agent Disconnected From Network
            1002: Agent ReConnected To Network
            1023: SSO User Added
            1024: SSO User Modified
            1501: Location Created
            1502: Location Copied
            1503: Location Modified
            1504: Location Deleted
            2001: Threat Mitigation Report Kill Success
            2002: Threat Mitigation Report Remediate Success
            2003: Threat Mitigation Report Rollback Success
            2004: Threat Mitigation Report Quarantine Success
            2006: Threat Mitigation Report Kill Failed
            2007: Threat Mitigation Report Remediate Failed
            2008: Threat Mitigation Report Rollback Failed
            2009: Threat Mitigation Report Quarantine Failed
            2010: Agent Mitigation Report Quarantine Network Failed
            2011: User Issued Kill Command
            2012: User Issued Remediate Command
            2013: User Issued Rollback Command
            2014: User Issued Quarantine Command
            2015: User Issued Unquarantine Command
            2016: User Marked Application As Threat
            2021: Threat Killed By Policy
            2022: Threat Remediated By Policy
            2023: Threat Rolled Back By Policy
            2024: Threat Quarantined By Policy
            2025: Agent Disconnected From Network Due to Threat Mitigation By Policy
            2026: Threat Mitigation Report Unquarantine Success
            2027: Threat Mitigation Report Unquarantine Failed
            2028: Threat Incident Status Changed
            2029: Ticket Number Changes
            2030: Analyst Verdict Changes
            2031: Threat Mitigation Report Kill Pending Reboot
            2032: Threat Mitigation Report Remediate Pending Reboot
            2033: Threat Mitigation Report Rollback Pending Reboot
            2034: Threat Mitigation Report Quarantine Pending Reboot
            2035: Threat Mitigation Report Unquarantine Pending Reboot
            2036: Threat Confidence Level Changed By Agent
            2037: Threat Confidence Level Changed By Cloud
            2100: Upgrade Policy - Concurrency Limit Changed
            2101: Upgrade Policy - Concurrency Limit Inheritance Changed
            2110: Upgrade Policy - Maintenance Window Time Changed
            2111: Upgrade Policy - Maintenance Window Time Inheritance Changed
            3001: User Added Hash Exclusion
            3002: User Added Blacklist Hash
            3005: Cloud Added Hash Exclusion
            3006: Cloud Added Blacklist Hash
            3008: New Path Exclusion
            3009: New Signer Identity Exclusion
            3010: New File Type Exclusion
            3011: New Browser Type Exclusion
            3012: Path Exclusion Moodified
            3013: Signer Identity Exclusion Modified
            3014: File Type Exclusion Modified
            3015: Browser Type Exclusion Modified
            3016: Path Exclusion Deleted
            3017: Signer Identity Exclusion Deleted
            3018: File Type Exclusion Deleted
            3019: Browser Type Exclusion Deleted
            3020: User Deleted Hash From Blacklist
            3021: User Deleted Hash Exclusion
            3022: Cloud Deleted Hash Exclusion
            3023: Cloud Deleted Blacklist Hash
            3100: User Added Package
            3101: User Modified Package
            3102: User Deleted Package
            3103: Package Deleted By System - Too Many Packages
            3200: User Started Remote Shell
            3201: Remote Shell Created
            3202: Remote Shell Failed
            3203: Remote Shell Terminated
            3204: Remote Shell Terminated By User
            3400: Agent Uploaded Remote Shell history
            3500: User Toggled Ranger Status
            3501: Ranger Settings Modified
            3502: Ranger Network Settings Modified
            3503: Ranger - Inventory Scan Completed
            3504: Ranger - Networks Discovered
            3505: Ranger - Devices Discovered
            3506: Ranger - Device Review Modified
            3507: Ranger - Device Tag Modified On Host
            3520: Ranger Deploy - Master passphrase
            3521: Ranger Deploy Initiated
            3522: Ranger Deploy - Credential Group Created
            3523: Ranger Deploy -Credential Group Edited
            3524: Ranger Deploy - Credential Group Deleted
            3525: Ranger Deploy - Credential Created
            3526: Ranger Deploy - Credential Deleted
            3527: Ranger Deploy - Credential Overridden
            3530: Ranger Labels Updated
            3531: Ranger labels reverted
            3532: Ranger Deploy - Trusted Hosts
            3533: Ranger Deploy - Linux Enforcement
            3534: Ranger Deploy - PsDrive WMI Session
            3600: Custom Rules - User Created A Rule
            3601: Custom Rules - User Changed A Rule
            3602: Custom Rules - User Deleted A Rule
            3603: Custom Rules - Rule Status Changed
            3604: Custom Rules - Rule Status Change Failed
            3605: Custom Rules - Rule Will Expire Soon
            3606: Custom Rules - Rule Expired
            3607: Custom Rules - Rule Reached Alert Limit
            3608: Custom Rules - New Alert
            3610: Account Uninstall Password Viewed
            3611: Account Uninstall Password Generated
            3612: Account Uninstall Password Regenerated
            3613: Account Uninstall Password Revoked
            3614: Agent Started On-Demand Disk Scan
            3615: Agent Aborted On-Demand Scan
            3616: New Script Created
            3617: Agent Completed On-Demand Scan
            3618: Script Action Initiated
            3620: Manual CIS Scan Initiated
            3621: Manual CIS scan Completed
            3622: Script Deleted
            3623: Script Updated
            3624: User 2FA Verification Success
            3625: User 2FA Verification Failed
            3626: User 2FA Email Verification Changed
            3627: User 2FA Verification Sent
            3628: 2FA Code Verification
            3629: Login Using Saved 2FA Recovery Code
            3630: Agent Content Update Sent To Agent
            3631: Agent Content Update Merged To Agent
            3632: Agent Content Update Not Merged No Agent
            3633: Marketplace - App Installed
            3634: Marketplace - App Deleted
            3635: Marketplace - App Disabled
            3636: Marketplace - App Enabled
            3637: Marketplace - App Edit
            3638: Marketplace - App Disabled Error
            3639: Marketplace - App Disabled Error
            3640: Ranger Self Provisioning
            3641: Ranger self Provisioning Default Features Modified
            3642: Ranger Self Provisioning Site Features Change
            3650: Tag Manager - User Created New Tag
            3651: Tag Manager - User Modified Tag
            3652: Tag Manager - User Deleted Tag
            3653: Tag Manager - User Attached Tag
            3654: Tag Manager - User Detached Tag
            3655: Tag Manager - User Detached Tag Because The Tag Was Deleted
            3656: Tag Manager - User Detached Tag Because Scope Changed
            4001: Suspicious Threat Was Marked As Threat
            4002: Suspicious Threat Was Resolved
            4003: New Suspicious Threat Not Mitigated
            4004: Policy Setting - Show Suspicious Activities Configuration Enabled
            4005: Policy Setting - Show Suspicious Activities Configuration Disabled
            4006: Remember Me Length Modified
            4007: Suspicious Threat Was Marked As Benign
            4008: Threat Mitigation Status Changed
            4009: Process Was Marked As Threat
            4011: Suspicious Threat Was Unresolved
            4012: UI Inactivity Timeout Modified
            4020: New Threat Note Added
            4021: Threat Note Updated
            4022: Threat Note Deleted
            4100: User Marked Deep Visibility Event As Threat
            4101: User Marked Deep Visibility Event As Suspicious
            4102: Agent Failed To Mark Deep Visibility Event As Threat
            4103: Agent Failed To Mark Deep Visibility Event As Suspicious
            4104: STAR Manual Response Marked Event As Malicious
            4105: STAR Manual Response Marked Event As Suspicious
            4106: STAR Active Response Marked Event As Malicious
            4107: STAR Active Response Marked Event As Suspicious
            5000: AD Sync Started
            5001: AD Sync Finished
            5002: Dynamic Group Creation Started
            5003: Dynamic Group Creation Finished
            5004: Dynamic Group Update Started
            5005: Dynamic Group Update Finished
            5006: Group Deleted
            5007: Group Info Changed
            5008: Static Group Created
            5009: Agent Moved To A Different Group
            5010: Group Ranking Changed
            5011: Group Policy Reverted
            5012: Group Token Regenerated
            5013: Group Deleted Because Site Deleted
            5020: Site Created
            5021: Site Modified
            5022: Site Deleted
            5023: Site Expired
            5024: Site Policy Reverted
            5025: Site Marked As Expired
            5026: Site Duplicated
            5027: Site Token Regenerated
            5028: Site Expired Because Account Expired
            5029: Site Deleted Because Account Deleted
            5040: Account Created
            5041: Account Modified
            5042: Account Deleted
            5043: Account Expired
            5044: Account Policy Reverted
            5045: Account Marked As Expired
            5120: Device Rule Created
            5121: Device Rule Modified
            5122: Device Rule Deleted
            5123: Device Rules Reordered
            5124: Device Rules Settings Modified
            5125: Device Control Blocked Event
            5126: Device Control Approved Event
            5127: Device Rule Moved From Scope
            5128: Device Rule Moved To Scope
            5129: Device Rule Copied To Scope
            5220: Firewall Rule Created
            5221: Firewall Rule Modified
            5222: Firewall Rule Deleted
            5225: Firewall Control Settings Modified
            5226: Firewall Rules Reordered
            5227: User Initiated Fetch Firewall Rules From Agent
            5228: Agent Uploaded Firewall Rules
            5229: Firewall Rule Moved From Scope
            5230: Firewall Rule Moved To Scope
            5231: Firewall Rule Copied To Scope
            5232: Firewall Control Blocked Event
            5233: User Requested Firewall Logging
            5234: Network Quarantine Rule Created
            5235: Network Quarantine Rule Modified
            5236: Network Quarantine Rule Deleted
            5237: Network Quarantine Control Settings Modified
            5238: Network Quarantine Rules Reordered
            5239: Network Quarantine Rule Moved From Scope
            5240: Network Quarantine Rule Moved To Scope
            5241: Network Quarantine Rule Copied To Scope
            5242: Ranger - Device Tag Created
            5243: Ranger - Device Tag Updated
            5244: Ranger - Device Tag Deleted
            5250: Firewall Control Tag Created
            5251: Firewall Control Tag Updated
            5252: Firewall Control Tag Updated
            5253: Network Quarantine Control Tag Created
            5254: Network Quarantine Control Tag Updated
            5255: Network Quarantine Control Tag Deleted
            5256: Firewall Control Tag Added/Removed From Rule
            5257: Firewall Control Tag Inherited
            5258: Network Quarantine Control Tag Added/Removed From Rule
            5259: Network Quarantine Control Tag Inherited
            10000: Agent failed to move to another console
        mapping:
          action.type: event.action
        filter: '{{json_event.message.activityType != null }}'

  read_data:
    actions:
      - set:
          os.family: "{{json_event.message.data.osFamily}}"
          sentinelone.data.externalIp: "{{json_event.message.data.externalIp}}"
          # Fix: pause usage of host.ip
          # host.ip is used for consistence with the other fields but, we could have use could be client.nat.ip
          host.ip: [ "{{json_event.message.data.externalIp}}" ]
        filter: "{{json_event.message.data.externalIp != null }}"

      - set:
          sentinelone.data.accountName: "{{json_event.message.data.accountName}}"
          sentinelone.data.action: "{{json_event.message.data.action}}"
          sentinelone.data.activatedEngines: "{{json_event.message.data.activatedEngines}}"
          sentinelone.data.bluetoothAddress: "{{json_event.message.data.bluetoothAddress}}"
          sentinelone.data.byUser: "{{json_event.message.data.byUser}}"

          host.name: "{{json_event.message.data.computerName}}"

          sentinelone.data.current: "{{json_event.message.data.current}}"
          sentinelone.data.deviceClass: "{{json_event.message.data.deviceClass}}"
          sentinelone.data.deviceInformationServiceInfoKey: "{{json_event.message.data.deviceInformationServiceInfoKey}}"
          sentinelone.data.deviceInformationServiceInfoValue: "{{json_event.message.data.deviceInformationServiceInfoValue}}"
          sentinelone.data.deviceName: "{{json_event.message.data.deviceName}}"
          sentinelone.data.deactivatedEngines: "{{json_event.message.data.deactivatedEngines}}"
          sentinelone.data.disabledLevel: "{{json_event.message.data.disabledLevel}}"

          url.original: "{{json_event.message.data.downloadUrl}}"

          sentinelone.data.enabledReason: "{{json_event.message.data.enabledReason}}"
          sentinelone.data.exclusionType: "{{json_event.message.data.exclusionType}}"
          sentinelone.data.expiration: "{{json_event.message.data.expiration}}"

          sentinelone.data.fileDisplayName: "{{json_event.message.data.fileDisplayName}}"
          file.name: "{{ json_event.message.data.filename or json_event.message.data.fileDisplayName or json_event.message.data.sourceprocessname }}"
          file.path: "{{json_event.message.data.filePath or  json_event.message.data.value}}"
          file.hash.sha1: '{{json_event.message.data.fileContentHash}}'

          sentinelone.data.fullScopeDetails: "{{json_event.message.data.fullScopeDetails}}"
          sentinelone.data.fullScopeDetailsPath: "{{json_event.message.data.fullScopeDetailsPath}}"
          source.ip: "{{json_event.message.data.ipAddress or json_event.message.data.reportedLocalHost}}"
          sentinelone.data.gattService: "{{json_event.message.data.gattService}}"
          sentinelone.data.interface: "{{json_event.message.data.interface}}"
          sentinelone.data.lmpVersion: "{{json_event.message.data.lmpVersion}}"
          sentinelone.data.manufacturerName: "{{json_event.message.data.manufacturerName}}"
          sentinelone.data.minorClasses: "{{json_event.message.data.minorClasses}}"
          sentinelone.data.order: "{{json_event.message.data.order}}"
          sentinelone.data.policy: "{{json_event.message.data.policy}}"
          sentinelone.data.policyName: "{{json_event.message.data.policyName}}"
          sentinelone.data.previous: "{{json_event.message.data.previous}}"
          sentinelone.data.productId: "{{json_event.message.data.productId}}"
          sentinelone.data.profileUuids: "{{json_event.message.data.profileUuids}}"
          sentinelone.data.reason: "{{json_event.message.data.reason}}"
          sentinelone.data.role: "{{json_event.message.data.role}}"
          rule.name: "{{json_event.message.data.rulename or json_event.message.data.ruleName}}"
          rule.id: "{{json_event.message.data.ruleid or json_event.message.data.ruleId}}"
          rule.description: "{{json_event.message.data.ruledescription or json_event.message.data.ruleDescription}}"
          sentinelone.data.ruleType: "{{json_event.message.data.ruleType}}"
          sentinelone.data.scopeLevel: "{{json_event.message.data.scopeLevel}}"
          sentinelone.data.scopeName: "{{json_event.message.data.scopeName}}"
          sentinelone.data.scopeId: "{{json_event.message.data.scopeId}}"
          sentinelone.data.shouldReboot: "{{json_event.message.data.shouldReboot}}"
          sentinelone.data.source: "{{json_event.message.data.source}}"
          sentinelone.data.system: "{{json_event.message.data.system}}"
          sentinelone.data.status: "{{json_event.message.data.status}}"
          sentinelone.data.uid: "{{json_event.message.data.uid}}"
          sentinelone.data.uploadedFilename: "{{json_event.message.data.uploadedFilename}}"
          sentinelone.data.uuid: "{{json_event.message.data.uuid}}"

          user.name: "{{json_event.message.data.userName or json_event.message.data.username}}"
          user.id: "{{json_event.message.data.userId}}"

          sentinelone.data.userscope: "{{json_event.message.data.userscope}}"
          sentinelone.data.vendorId: "{{json_event.message.data.vendorId}}"
          sentinelone.data.version: "{{json_event.message.data.version}}"
          sentinelone.data.setting: "{{json_event.message.data.setting}}"
          sentinelone.data.alertId: "{{json_event.message.data.alertId}}"
          sentinelone.data.alertid: "{{json_event.message.data.alertid}}"
          sentinelone.data.detectedat: "{{json_event.message.data.detectedat}}"
          sentinelone.data.dveventid: "{{json_event.message.data.dveventid}}"
          sentinelone.data.dveventtype: "{{json_event.message.data.dveventtype}}"
          sentinelone.data.groupName: "{{json_event.message.data.groupName}}"
          sentinelone.data.k8sclustername: "{{json_event.message.data.k8sclustername}}"
          # Fix: sentinelone.data.k8scontainerid: "{{json_event.message.data.k8scontainerid}}"
          container.id: "{{json_event.message.data.k8scontainerid}}"
          # Fix: sentinelone.data.k8scontainerimage: "{{json_event.message.data.k8scontainerimage}}"
          container.image.name: "{{json_event.message.data.k8scontainerimage}}"
          # Fix: sentinelone.data.k8scontainerlabels: "{{json_event.message.data.k8scontainerlabels}}"
          container.labels: "{{json_event.message.data.k8scontainerlabels}}"
          # Fix: sentinelone.data.k8scontainername: "{{json_event.message.data.k8scontainername}}"
          container.name: "{{json_event.message.data.k8scontainername}}"
          sentinelone.data.k8scontrollerkind: "{{json_event.message.data.k8scontrollerkind}}"
          sentinelone.data.k8scontrollerlabels: "{{json_event.message.data.k8scontrollerlabels}}"
          sentinelone.data.k8scontrollername: "{{json_event.message.data.k8scontrollername}}"
          sentinelone.data.k8snamespace: "{{json_event.message.data.k8snamespace}}"
          sentinelone.data.k8snamespacelabels: "{{json_event.message.data.k8snamespacelabels}}"
          sentinelone.data.k8snode: "{{json_event.message.data.k8snode}}"
          sentinelone.data.k8spod: "{{json_event.message.data.k8spod}}"
          sentinelone.data.k8spodlabels: "{{json_event.message.data.k8spodlabels}}"
          sentinelone.data.origagentmachinetype: "{{json_event.message.data.origagentmachinetype}}"
          sentinelone.data.origagentname: "{{json_event.message.data.origagentname}}"
          sentinelone.data.origagentosfamily: "{{json_event.message.data.origagentosfamily}}"
          sentinelone.data.origagentosname: "{{json_event.message.data.origagentosname}}"
          sentinelone.data.origagentosrevision: "{{json_event.message.data.origagentosrevision}}"
          sentinelone.data.origagentsiteid: "{{json_event.message.data.origagentsiteid}}"
          sentinelone.data.origagentuuid: "{{json_event.message.data.origagentuuid}}"
          sentinelone.data.origagentversion: "{{json_event.message.data.origagentversion}}"
          sentinelone.data.rulescopeid: "{{json_event.message.data.rulescopeid}}"

          sentinelone.data.rulescopelevel: "{{json_event.message.data.rulescopelevel}}"
          sentinelone.data.severity: "{{json_event.message.data.severity}}"
          sentinelone.data.siteName: "{{json_event.message.data.siteName}}"
          sentinelone.data.sourcename: "{{json_event.message.data.sourcename}}"

          process.parent.command_line: "{{json_event.message.data.sourceparentprocesscommandline}}"

          sentinelone.data.sourceparentprocessintegritylevel: "{{json_event.message.data.sourceparentprocessintegritylevel}}"
          sentinelone.data.sourceparentprocesskey: "{{json_event.message.data.sourceparentprocesskey}}"
          process.parent.hash.md5: "{{json_event.message.data.sourceparentprocessmd5}}"
          process.parent.name: "{{json_event.message.data.sourceparentprocessname}}"
          process.parent.executable: "{{json_event.message.data.sourceparentprocesspath}}"
          process.parent.pid: "{{json_event.message.data.sourceparentprocesspid}}"
          process.parent.hash.sha1: "{{json_event.message.data.sourceparentprocesssha1}}"
          process.parent.hash.sha256: "{{json_event.message.data.sourceparentprocesssha256}}"
          process.parent.code_signature.subject_name: "{{json_event.message.data.sourceparentprocesssigneridentity}}"

          sentinelone.data.sourceparentprocessstoryline: "{{json_event.message.data.sourceparentprocessstoryline}}"
          sentinelone.data.sourceparentprocesssubsystem: "{{json_event.message.data.sourceparentprocesssubsystem}}"
          # TODO: Should be replaced by process.parent.user.name when supported
          sentinelone.data.sourceparentprocessusername: "{{json_event.message.data.sourceparentprocessusername}}"

          process.command_line: "{{json_event.message.data.sourceprocesscommandline}}"
          process.executable: "{{json_event.message.data.sourceprocessfilepath}}"

          sentinelone.data.sourceprocessfilesingeridentity: "{{json_event.message.data.sourceprocessfilesingeridentity}}"
          sentinelone.data.sourceprocessintegritylevel: "{{json_event.message.data.sourceprocessintegritylevel}}"
          sentinelone.data.sourceprocesskey: "{{json_event.message.data.sourceprocesskey}}"



          process.pid: "{{json_event.message.data.sourceprocesspid}}"
          process.hash.md5: "{{json_event.message.data.sourceprocessmd5}}"
          process.hash.sha1: "{{json_event.message.data.sourceprocesssha1}}"
          process.hash.sha256: "{{json_event.message.data.sourceprocesssha256}}"

          sentinelone.data.sourceprocessstoryline: "{{json_event.message.data.sourceprocessstoryline}}"
          sentinelone.data.sourceprocesssubsystem: "{{json_event.message.data.sourceprocesssubsystem}}"
          # TODO: Should be replaced by process.user.name when supported
          sentinelone.data.sourceprocessusername: "{{json_event.message.data.sourceprocessusername}}"
          # TODO: Should *probably* be replaced by process.user.id when supported
          sentinelone.data.systemUser: "{{json_event.message.data.systemUser}}"

          sentinelone.data.agentipv4: "{{json_event.message.data.agentipv4}}"
          sentinelone.data.computerName: "{{json_event.message.data.computerName}}"
          sentinelone.data.createdAt: "{{json_event.message.data.createdAt}}"
          sentinelone.data.creator: "{{json_event.message.data.creator}}"
          sentinelone.data.dnsrequest: "{{json_event.message.data.dnsrequest}}"
          sentinelone.data.dnsresponse: "{{json_event.message.data.dnsresponse}}"
          sentinelone.data.dstip: "{{json_event.message.data.dstip}}"
          sentinelone.data.dstport: "{{json_event.message.data.dstport}}"
          sentinelone.data.eventId: "{{json_event.message.data.eventId}}"
          sentinelone.data.eventTime: "{{json_event.message.data.eventTime}}"
          sentinelone.data.eventType: "{{json_event.message.data.eventType}}"
          sentinelone.data.externalip: "{{json_event.message.data.externalip}}"
          sentinelone.data.groupId: "{{json_event.message.data.groupId}}"
          sentinelone.data.indicatorcategory: "{{json_event.message.data.indicatorcategory}}"
          sentinelone.data.indicatordescription: "{{json_event.message.data.indicatordescription}}"
          sentinelone.data.indicatorname: "{{json_event.message.data.indicatorname}}"
          sentinelone.data.ipAddress: "{{json_event.message.data.ipAddress}}"
          sentinelone.data.k8scontainerid: "{{json_event.message.data.k8scontainerid}}"
          sentinelone.data.k8scontainerimage: "{{json_event.message.data.k8scontainerimage}}"
          sentinelone.data.k8scontainerlabels: "{{json_event.message.data.k8scontainerlabels}}"
          sentinelone.data.k8scontainername: "{{json_event.message.data.k8scontainername}}"
          sentinelone.data.lastLoggedInUserName: "{{json_event.message.data.lastLoggedInUserName}}"
          sentinelone.data.loginaccountdomain: "{{json_event.message.data.loginaccountdomain}}"
          sentinelone.data.loginaccountsid: "{{json_event.message.data.loginaccountsid}}"
          sentinelone.data.loginisadministratorequivalent: "{{json_event.message.data.loginisadministratorequivalent}}"
          sentinelone.data.loginissuccessful: "{{json_event.message.data.loginissuccessful}}"
          sentinelone.data.loginsusername: "{{json_event.message.data.loginsusername}}"
          sentinelone.data.logintype: "{{json_event.message.data.logintype}}"
          sentinelone.data.minorClass: "{{json_event.message.data.minorClass}}"
          sentinelone.data.modulepath: "{{json_event.message.data.modulepath}}"
          sentinelone.data.modulesha1: "{{json_event.message.data.modulesha1}}"
          sentinelone.data.neteventdirection: "{{json_event.message.data.neteventdirection}}"
          sentinelone.data.osType: "{{json_event.message.data.osType}}"
          sentinelone.data.physical: "{{json_event.message.data.physical}}"
          sentinelone.data.registrykeypath: "{{json_event.message.data.registrykeypath}}"
          sentinelone.data.registryoldvalue: "{{json_event.message.data.registryoldvalue}}"
          sentinelone.data.registryoldvaluetype: "{{json_event.message.data.registryoldvaluetype}}"
          sentinelone.data.registrypath: "{{json_event.message.data.registrypath}}"
          sentinelone.data.registryvalue: "{{json_event.message.data.registryvalue}}"
          sentinelone.data.confidenceLevel: "{{json_event.message.data.confidenceLevel}}"
          sentinelone.data.escapedMaliciousProcessArguments: "{{json_event.message.data.escapedMaliciousProcessArguments}}"
          sentinelone.data.globalStatus: "{{json_event.message.data.globalStatus}}"
          sentinelone.data.newGroupId: "{{json_event.message.data.newGroupId}}"
          sentinelone.data.newGroupName: "{{json_event.message.data.newGroupName}}"
          sentinelone.data.newStatus: "{{json_event.message.data.newStatus}}"
          sentinelone.data.oldGroupId: "{{json_event.message.data.oldGroupId}}"
          sentinelone.data.oldGroupName: "{{json_event.message.data.oldGroupName}}"
          sentinelone.data.originalStatus: "{{json_event.message.data.originalStatus}}"
          sentinelone.data.threatClassification: "{{json_event.message.data.threatClassification}}"
          sentinelone.data.threatClassificationSource: "{{json_event.message.data.threatClassificationSource}}"
          sentinelone.threatInfo.fileExtension: "{{json_event.message.threatInfo.fileExtension}}"
          sentinelone.data.ruleScopeName: "{{json_event.message.data.ruleScopeName}}"
          sentinelone.data.sourceparentprocesscommandline: "{{json_event.message.data.sourceparentprocesscommandline}}"
          sentinelone.data.sourceparentprocessmd5: "{{json_event.message.data.sourceparentprocessmd5}}"
          sentinelone.data.sourceparentprocessname: "{{json_event.message.data.sourceparentprocessname}}"
          sentinelone.data.sourceparentprocesspath: "{{json_event.message.data.sourceparentprocesspath}}"
          sentinelone.data.sourceparentprocesspid: "{{json_event.message.data.sourceparentprocesspid}}"
          sentinelone.data.sourceparentprocesssha1: "{{json_event.message.data.sourceparentprocesssha1}}"
          sentinelone.data.sourceparentprocesssha256: "{{json_event.message.data.sourceparentprocesssha256}}"
          sentinelone.data.sourceparentprocesssigneridentity: "{{json_event.message.data.sourceparentprocesssigneridentity}}"
          sentinelone.data.sourceparentprocessstarttime: "{{json_event.message.data.sourceparentprocessstarttime}}"
          sentinelone.data.sourceprocesscommandline: "{{json_event.message.data.sourceprocesscommandline}}"
          sentinelone.data.sourceprocessfilepath: "{{json_event.message.data.sourceprocessfilepath}}"
          sentinelone.data.sourceprocessfilesigneridentity: "{{json_event.message.data.sourceprocessfilesigneridentity}}"
          sentinelone.data.sourceprocessmd5: "{{json_event.message.data.sourceprocessmd5}}"
          sentinelone.data.sourceprocessname: "{{json_event.message.data.sourceprocessname}}"
          sentinelone.data.sourceprocesspid: "{{json_event.message.data.sourceprocesspid}}"
          sentinelone.data.sourceprocesssha1: "{{json_event.message.data.sourceprocesssha1}}"
          sentinelone.data.sourceprocesssha256: "{{json_event.message.data.sourceprocesssha256}}"
          sentinelone.data.sourceprocessstarttime: "{{json_event.message.data.sourceprocessstarttime}}"
          sentinelone.data.srcip: "{{json_event.message.data.srcip}}"
          sentinelone.data.srcmachineip: "{{json_event.message.data.srcmachineip}}"
          sentinelone.data.srcport: "{{json_event.message.data.srcport}}"
          sentinelone.data.tgtfilecreatedat: "{{json_event.message.data.tgtfilecreatedat}}"
          sentinelone.data.tgtfilehashsha1: "{{json_event.message.data.tgtfilehashsha1}}"
          sentinelone.data.tgtfilehashsha256: "{{json_event.message.data.tgtfilehashsha256}}"
          sentinelone.data.tgtfileid: "{{json_event.message.data.tgtfileid}}"
          sentinelone.data.tgtfileissigned: "{{json_event.message.data.tgtfileissigned}}"
          sentinelone.data.tgtfilemodifiedat: "{{json_event.message.data.tgtfilemodifiedat}}"
          sentinelone.data.tgtfileoldpath: "{{json_event.message.data.tgtfileoldpath}}"
          sentinelone.data.tgtfilepath: "{{json_event.message.data.tgtfilepath}}"
          sentinelone.data.tgtproccmdline: "{{json_event.message.data.tgtproccmdline}}"
          sentinelone.data.tgtprocessstarttime: "{{json_event.message.data.tgtprocessstarttime}}"
          sentinelone.data.tgtprocimagepath: "{{json_event.message.data.tgtprocimagepath}}"
          sentinelone.data.tgtprocintegritylevel: "{{json_event.message.data.tgtprocintegritylevel}}"
          sentinelone.data.tgtprocname: "{{json_event.message.data.tgtprocname}}"
          sentinelone.data.tgtprocpid: "{{json_event.message.data.tgtprocpid}}"
          sentinelone.data.tgtprocsignedstatus: "{{json_event.message.data.tgtprocsignedstatus}}"
          sentinelone.data.tgtprocstorylineid: "{{json_event.message.data.tgtprocstorylineid}}"
          sentinelone.data.tgtprocuid: "{{json_event.message.data.tgtprocuid}}"
          sentinelone.data.tiindicatorcomparisonmethod: "{{json_event.message.data.tiindicatorcomparisonmethod}}"
          sentinelone.data.tiindicatorsource: "{{json_event.message.data.tiindicatorsource}}"
          sentinelone.data.tiindicatortype: "{{json_event.message.data.tiindicatortype}}"
          sentinelone.data.tiindicatorvalue: "{{json_event.message.data.tiindicatorvalue}}"
          sentinelone.data.userId: "{{json_event.message.data.userId}}"
          sentinelone.data.userScope: "{{json_event.message.data.userScope}}"
          sentinelone.data.application: "{{json_event.message.data.application}}"
          sentinelone.data.applicationType: "{{json_event.message.data.applicationType}}"
          sentinelone.data.createdByUsername: "{{json_event.message.data.createdByUsername}}"
          sentinelone.data.deactivationPeriodInDays: "{{json_event.message.data.deactivationPeriodInDays}}"
          sentinelone.data.direction: "{{json_event.message.data.direction}}"
          sentinelone.data.durationOfMeasurement: "{{json_event.message.data.durationOfMeasurement}}"
          sentinelone.data.localHost: "{{json_event.message.data.localHost}}"
          sentinelone.data.localHostType: "{{json_event.message.data.localHostType}}"
          sentinelone.data.localPortType: "{{json_event.message.data.localPortType}}"
          sentinelone.data.localPorts: "{{json_event.message.data.localPorts}}"
          sentinelone.data.locationNames: "{{json_event.message.data.locationNames}}"
          sentinelone.data.numberOfEvents: "{{json_event.message.data.numberOfEvents}}"
          sentinelone.data.osTypes: "{{json_event.message.data.osTypes}}"
          sentinelone.data.processId: "{{json_event.message.data.processId}}"
          sentinelone.data.processName: "{{json_event.message.data.processName}}"
          sentinelone.data.protocol: "{{json_event.message.data.protocol}}"
          sentinelone.data.remoteHost: "{{json_event.message.data.remoteHost}}"
          sentinelone.data.remoteHostType: "{{json_event.message.data.remoteHostType}}"
          sentinelone.data.remotePortType: "{{json_event.message.data.remotePortType}}"
          sentinelone.data.remotePorts: "{{json_event.message.data.remotePorts}}"
          network.direction: "{{json_event.message.data.reportedDirection}}"
          source.port: "{{json_event.message.data.reportedLocalPort}}"
          network.protocol: "{{json_event.message.data.reportedProtocol}}"
          destination.ip: "{{json_event.message.data.reportedRemoteHost}}"
          destination.port: "{{json_event.message.data.reportedRemotePort}}"
          sentinelone.data.ruleScopeLevel: "{{json_event.message.data.ruleScopeLevel}}"
          sentinelone.data.tagNames: "{{json_event.message.data.tagNames}}"
      - set:
          process.parent.start: "{{parsed_process_parent_start.datetime}}"
        filter: "{{json_event.message.get('data', {}).get('sourceparentprocessstarttime') != None}}"
      - set:
          process.start: "{{parsed_process_start.datetime}}"
        filter: "{{json_event.message.get('data', {}).get('sourceprocessstarttime') != None}}"


  read_agent_realtime_info:
    actions:
      - set:
          host.os.version: "{{json_event.message.agentRealtimeInfo.agentOsName}}"
          host.os.family: "{{json_event.message.agentRealtimeInfo.agentOsType}}"
          organization.id: "{{json_event.message.agentRealtimeInfo.accountId}}"
          organization.name: "{{json_event.message.agentRealtimeInfo.accountName}}"
          sentinelone.agentRealtimeInfo.activeThreats: "{{json_event.message.agentRealtimeInfo.activeThreats}}"
          sentinelone.agentRealtimeInfo.agentComputerName: "{{json_event.message.agentRealtimeInfo.agentComputerName}}"
          host.name: "{{json_event.message.agentRealtimeInfo.agentComputerName}}"
          sentinelone.agentRealtimeInfo.agentDecommissionedAt: "{{json_event.message.agentRealtimeInfo.agentDecommissionedAt}}"
          sentinelone.agentRealtimeInfo.agentDomain: "{{json_event.message.agentRealtimeInfo.agentDomain}}"
          sentinelone.agentRealtimeInfo.agentId: "{{json_event.message.agentRealtimeInfo.agentId}}"
          sentinelone.agentRealtimeInfo.agentInfected: "{{json_event.message.agentRealtimeInfo.agentInfected}}"
          sentinelone.agentRealtimeInfo.agentIsActive: "{{json_event.message.agentRealtimeInfo.agentIsActive}}"
          sentinelone.agentRealtimeInfo.agentIsDecommissioned: "{{json_event.message.agentRealtimeInfo.agentIsDecommissioned}}"
          sentinelone.agentRealtimeInfo.agentMachineType: "{{json_event.message.agentRealtimeInfo.agentMachineType}}"
          sentinelone.agentRealtimeInfo.agentMitigationMode: "{{json_event.message.agentRealtimeInfo.agentMitigationMode}}"
          sentinelone.agentRealtimeInfo.agentNetworkStatus: "{{json_event.message.agentRealtimeInfo.agentNetworkStatus}}"
          sentinelone.agentRealtimeInfo.agentOsRevision: "{{json_event.message.agentRealtimeInfo.agentOsRevision}}"
          sentinelone.agentRealtimeInfo.agentUuid: "{{json_event.message.agentRealtimeInfo.agentUuid}}"
          sentinelone.agentRealtimeInfo.agentVersion: "{{json_event.message.agentRealtimeInfo.agentVersion}}"
          sentinelone.agentRealtimeInfo.groupId: "{{json_event.message.agentRealtimeInfo.groupId}}"
          sentinelone.agentRealtimeInfo.groupName: "{{json_event.message.agentRealtimeInfo.groupName}}"
          sentinelone.agentRealtimeInfo.networkInterfaces: "{{json_event.message.agentRealtimeInfo.networkInterfaces}}"
          sentinelone.agentRealtimeInfo.operationalState: "{{json_event.message.agentRealtimeInfo.operationalState}}"
          sentinelone.agentRealtimeInfo.rebootRequired: "{{json_event.message.agentRealtimeInfo.rebootRequired}}"
          sentinelone.agentRealtimeInfo.scanAbortedAt: "{{json_event.message.agentRealtimeInfo.scanAbortedAt}}"
          sentinelone.agentRealtimeInfo.scanFinishedAt: "{{json_event.message.agentRealtimeInfo.scanFinishedAt}}"
          sentinelone.agentRealtimeInfo.scanStartedAt: "{{json_event.message.agentRealtimeInfo.scanStartedAt}}"
          sentinelone.agentRealtimeInfo.scanStatus: "{{json_event.message.agentRealtimeInfo.scanStatus}}"
          sentinelone.agentRealtimeInfo.siteId: "{{json_event.message.agentRealtimeInfo.siteId}}"
          sentinelone.agentRealtimeInfo.siteName: "{{json_event.message.agentRealtimeInfo.siteName}}"
          sentinelone.agentRealtimeInfo.storageName: "{{json_event.message.agentRealtimeInfo.storageName}}"
          sentinelone.agentRealtimeInfo.storageType: "{{json_event.message.agentRealtimeInfo.storageType}}"
          sentinelone.agentRealtimeInfo.userActionsNeeded: "{{json_event.message.agentRealtimeInfo.userActionsNeeded}}"

  read_agent_detection_info:
    actions:
      - set:
          # agentIpV4, agentIpV6 can contain multiples values separated by comma
          host.ip: >
            [
            {% if json_event.message.agentDetectionInfo.agentIpV4 != null %}
              {% for ip in json_event.message.agentDetectionInfo.agentIpV4.split(',') %}
                '{{ip}}',
              {% endfor %}
            {% endif %}
            {% if json_event.message.agentDetectionInfo.agentIpV6 != "" %}
              {% for ip in json_event.message.agentDetectionInfo.agentIpV6.split(',') %}
                '{{ip}}',
              {% endfor %}
            {% endif %}
            {% if json_event.message.agentDetectionInfo.externalIp != null %}
              {% for ip in json_event.message.agentDetectionInfo.externalIp.split(',') %}
                '{{ip}}',
              {% endfor %}
            {% endif %}
            ]

        filter: "{{json_event.message.agentDetectionInfo.agentIpV4 != null or json_event.message.agentDetectionInfo.agentIpV6 != null or json_event.message.agentDetectionInfo.externalIp != null}}"

      - set:
          event.kind: "alert"
          event.category: ["malware"]
          event.type: [ "info" ]
          host.domain: "{{json_event.message.agentDetectionInfo.agentDomain}}"

          sentinelone.agentDetectionInfo.accountId: "{{json_event.message.agentDetectionInfo.accountId}}"
          sentinelone.agentDetectionInfo.accountName: "{{json_event.message.agentDetectionInfo.accountName}}"
          sentinelone.agentDetectionInfo.agentDetectionState: "{{json_event.message.agentDetectionInfo.agentDetectionState}}"
          sentinelone.agentDetectionInfo.agentDomain: "{{json_event.message.agentDetectionInfo.agentDomain}}"
          sentinelone.agentDetectionInfo.agentIpV4: "{{json_event.message.agentDetectionInfo.agentIpV4}}"
          sentinelone.agentDetectionInfo.agentIpV6: "{{json_event.message.agentDetectionInfo.agentIpV6}}"
          sentinelone.agentDetectionInfo.agentLastLoggedInUserName: "{{json_event.message.agentDetectionInfo.agentLastLoggedInUserName}}"
          sentinelone.agentDetectionInfo.agentMitigationMode: "{{json_event.message.agentDetectionInfo.agentMitigationMode}}"
          sentinelone.agentDetectionInfo.agentOsName: "{{json_event.message.agentDetectionInfo.agentOsName}}"
          sentinelone.agentDetectionInfo.agentOsRevision: "{{json_event.message.agentDetectionInfo.agentOsRevision}}"
          sentinelone.agentDetectionInfo.agentRegisteredAt: "{{json_event.message.agentDetectionInfo.agentRegisteredAt}}"
          sentinelone.agentDetectionInfo.agentUuid: "{{json_event.message.agentDetectionInfo.agentUuid}}"
          sentinelone.agentDetectionInfo.agentVersion: "{{json_event.message.agentDetectionInfo.agentVersion}}"
          sentinelone.agentDetectionInfo.externalIp: "{{json_event.message.agentDetectionInfo.externalIp}}"
          sentinelone.agentDetectionInfo.groupId: "{{json_event.message.agentDetectionInfo.groupId}}"
          sentinelone.agentDetectionInfo.groupName: "{{json_event.message.agentDetectionInfo.groupName}}"
          sentinelone.agentDetectionInfo.siteId: "{{json_event.message.agentDetectionInfo.siteId}}"
          sentinelone.agentDetectionInfo.siteName: "{{json_event.message.agentDetectionInfo.siteName}}"

  read_threat_info:
    actions:
      - set:
          sentinelone.threatInfo.AuthenticationPackageName: "{{json_event.message.threatInfo.AuthenticationPackageName}}"
          # Fix: sentinelone.threatInfo.certificateId: "{{json_event.message.threatInfo.certificateId}}"
          threat.indicator.file.code_signature.signing_id: "{{json_event.message.threatInfo.certificateId}}"
          # TODO: use threat.software.type when supported
          threat.software.type: "{{json_event.message.threatInfo.classification}}"
          # Fix: sentinelone.threatInfo.confidenceLevel: "{{json_event.message.threatInfo.confidenceLevel}}"
          threat.indicator.confidence: "{{json_event.message.threatInfo.confidenceLevel}}"
          # Fix: sentinelone.threatInfo.createdAt: "{{json_event.message.threatInfo.createdAt}}"
          threat.indicator.file.created: "{{json_event.message.threatInfo.createdAt}}"
          # Fix: sentinelone.threatInfo.fileSize: "{{json_event.message.threatInfo.fileSize}}"
          threat.indicator.file.size: "{{json_event.message.threatInfo.fileSize}}"
          # Fix: sentinelone.threatInfo.identifiedAt: "{{json_event.message.threatInfo.identifiedAt}}"
          threat.enrichments.matched.occurred: "{{json_event.message.threatInfo.identifiedAt}}"
          sentinelone.threatInfo.NewTargetUserName: "{{json_event.message.threatInfo.NewTargetUserName}}"
          # Fix: sentinelone.threatInfo.threatName: "{{json_event.message.threatInfo.threatName}}"
          # TODO: use threat.enrichments.indicator.modified_at when supported

          file.name: "{{ json_event.message.threatInfo.threatName }}"
          file.extension: "{{json_event.message.threatInfo.fileExtension |lower}}"
          file.path: "{{json_event.message.threatInfo.filePath}}"
          file.size: "{{json_event.message.threatInfo.fileSize}}"
          file.hash.md5: "{{json_event.message.threatInfo.md5}}"
          file.hash.sha1: "{{json_event.message.threatInfo.sha1}}"
          file.hash.sha256: "{{json_event.message.threatInfo.sha256}}"

          sentinelone.threatInfo.analystVerdict: "{{json_event.message.threatInfo.analystVerdict}}"
          sentinelone.threatInfo.analystVerdictDescription: "{{json_event.message.threatInfo.analystVerdictDescription}}"
          sentinelone.threatInfo.automaticallyResolved: "{{json_event.message.threatInfo.automaticallyResolved}}"
          sentinelone.threatInfo.browserType: "{{json_event.message.threatInfo.browserType}}"
          sentinelone.threatInfo.classificationSource: "{{json_event.message.threatInfo.classificationSource}}"
          sentinelone.threatInfo.cloudFilesHashVerdict: "{{json_event.message.threatInfo.cloudFilesHashVerdict}}"
          sentinelone.threatInfo.collectionId: "{{json_event.message.threatInfo.collectionId}}"
          sentinelone.threatInfo.detectionEngines: "{{json_event.message.threatInfo.detectionEngines}}"
          sentinelone.threatInfo.detectionType: "{{json_event.message.threatInfo.detectionType}}"
          sentinelone.threatInfo.engines: "{{json_event.message.threatInfo.engines}}"
          sentinelone.threatInfo.externalTicketExists: "{{json_event.message.threatInfo.externalTicketExists}}"
          sentinelone.threatInfo.externalTicketId: "{{json_event.message.threatInfo.externalTicketId}}"
          sentinelone.threatInfo.failedActions: "{{json_event.message.threatInfo.failedActions}}"
          sentinelone.threatInfo.fileExtensionType: "{{json_event.message.threatInfo.fileExtensionType}}"
          sentinelone.threatInfo.fileVerificationType: "{{json_event.message.threatInfo.fileVerificationType}}"
          sentinelone.threatInfo.incidentStatus: "{{json_event.message.threatInfo.incidentStatus}}"
          sentinelone.threatInfo.incidentStatusDescription: "{{json_event.message.threatInfo.incidentStatusDescription}}"
          sentinelone.threatInfo.initiatedBy: "{{json_event.message.threatInfo.initiatedBy}}"
          sentinelone.threatInfo.initiatedByDescription: "{{json_event.message.threatInfo.initiatedByDescription}}"
          sentinelone.threatInfo.initiatingUserId: "{{json_event.message.threatInfo.initiatingUserId}}"
          sentinelone.threatInfo.initiatingUsername: "{{json_event.message.threatInfo.initiatingUsername}}"
          sentinelone.threatInfo.isFileless: "{{json_event.message.threatInfo.isFileless}}"
          sentinelone.threatInfo.isValidCertificate: "{{json_event.message.threatInfo.isValidCertificate}}"
          sentinelone.threatInfo.maliciousProcessArguments: "{{json_event.message.threatInfo.maliciousProcessArguments}}"
          sentinelone.threatInfo.mitigatedPreemptively: "{{json_event.message.threatInfo.mitigatedPreemptively}}"
          sentinelone.threatInfo.mitigationStatus: "{{json_event.message.threatInfo.mitigationStatus}}"
          sentinelone.threatInfo.mitigationStatusDescription: "{{json_event.message.threatInfo.mitigationStatusDescription}}"
          process.parent.name: "{{json_event.message.threatInfo.originatorProcess}}"
          sentinelone.threatInfo.pendingActions: "{{json_event.message.threatInfo.pendingActions}}"
          # should probably be process.user.name when supported
          user.name: "{{json_event.message.threatInfo.processUser}}"
          sentinelone.threatInfo.publisherName: "{{json_event.message.threatInfo.publisherName}}"
          sentinelone.threatInfo.reachedEventsLimit: "{{json_event.message.threatInfo.reachedEventsLimit}}"
          sentinelone.threatInfo.rebootRequired: "{{json_event.message.threatInfo.rebootRequired}}"
          sentinelone.threatInfo.storyline: "{{json_event.message.threatInfo.storyline}}"
          sentinelone.threatInfo.threatId: "{{json_event.message.threatInfo.threatId}}"
          sentinelone.threatInfo.updatedAt: "{{json_event.message.threatInfo.updatedAt}}"
          sentinelone.threatInfo.fileExtension: "{{json_event.message.threatInfo.fileExtension}}"
