name: netflow
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
  - name: set_ecs_fields
  - name: set_custom_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          source.ip: '{{json_event.message.IPV4_SRC_ADDR or json_event.message.IPV6_SRC_ADDR or json_event.message.sourceIPv4Address or json_event.message.sourceIPv6Address}}'
          source.port: '{{json_event.message.SRC_PORT or json_event.message.L4_SRC_PORT or json_event.message.sourceTransportPort}}'
          source.as.number: '{{json_event.message.SRC_AS or json_event.message.bgpSourceAsNumber}}'
          source.mac: '{{json_event.message.IN_SRC_MAC or json_event.message.sourceMacAddress}}'
          destination.ip: '{{json_event.message.IPV4_DST_ADDR or json_event.message.IPV6_DST_ADDR or json_event.message.destinationIPv4Address or json_event.message.sourceIPv6Address}}'
          destination.port: '{{json_event.message.DST_PORT or json_event.message.L4_DST_PORT or json_event.message.destinationTransportPort}}'
          destination.as.number: '{{json_event.message.DST_AS or json_event.message.bgpDestinationAsNumber}}'
          destination.mac: '{{json_event.message.OUT_DST_MAC}}'
          network.bytes: '{{json_event.message.IN_OCTETS or json_event.message.IN_BYTES or json_event.message.octetDeltaCount}}'
          network.packets: '{{json_event.message.IN_PACKETS or json_event.message.IN_PKTS or json_event.message.packetDeltaCount}}'
          network.application: '{{json_event.message.APPLICATION_NAME or json_event.message.applicationName}}'
          network.iana_number: '{{json_event.message.PROTO or json_event.message.PROTOCOL or json_event.message.protocolIdentifier}}'
          observer.ingress.interface.name: '{{json_event.message.IF_NAME or json_event.message.interfaceName}}'
          event.start: '{{json_event.message.flowStartSeconds}}'
          event.end: '{{json_event.message.flowEndSeconds}}'
          http.request.method: '{{json_event.message.httpRequestMethod}}'
          http.response.mime_type: '{{json_event.message.httpContentType}}'
          http.response.status_code: '{{json_event.message.httpStatusCode}}'
          http.version: '{{json_event.message.httpMessageVersion}}'
          user_agent.original: '{{json_event.message.httpUserAgent}}'
          url.domain: '{{json_event.message.httpRequestHost}}'
          url.path: '{{json_event.message.httpRequestTarget}}'
      - set:
          observer.ingress.interface.id: '{{json_event.message.INPUT or json_event.message.ingressInterface}}'
        filter: '{{json_event.message.INPUT != 0 and json_event.message.ingressInterface != 0}}'
      - set:
          observer.egress.interface.id: '{{json_event.message.OUPUT or json_event.message.egressInterface}}'
        filter: '{{json_event.message.OUPUT != 0 and json_event.message.egressInterface != 0}}'
      - set:
          event.duration: '{{(json_event.message.LAST_SWITCHED - json_event.message.FIRST_SWITCHED) * 1000000 }}'
        filter: '{{json_event.message.get("FIRST_SWITCHED") != None and json_event.message.get("LAST_SWITCHED") != None }}'
      - set:
          event.duration: '{{(json_event.message.flowEndSysUpTime - json_event.message.flowStartSysUpTime) * 1000000 }}'
        filter: '{{json_event.message.get("flowStartSysUpTime") != None and json_event.message.get("flowEndSysUpTime") != None}}'
      - set:
          event.duration: '{{(json_event.message.flowDurationMicroseconds * 1000}}'
        filter: '{{json_event.message.get("flowDurationMicroseconds") != None}}'
      - translate:
        dictionary:
          0: 'ingress'
          1: 'outgress'
        mapping:
          json_event.message.DIRECTION: network.direction
          json_event.message.flowDirection: network.direction
      - translate:
        dictionary:
          4: 'ipv4'
          6: 'ipv6'
        mapping:
          json_event.message.IP_PROTOCOL_VERSION: network.type
          json_event.message.ipVersion: network.type
        fallback: 'ipv4'
      - translate:
        dictionary:
          '0': 'hopopt'
          '1': 'icmp'
          '2': 'igmp'
          '3': 'ggp'
          '4': 'ip-in-ip'
          '5': 'st'
          '6': 'tcp'
          '7': 'cbt'
          '8': 'egp'
          '9': 'igp'
          '10': 'bbn-rcc-mon'
          '11': 'nvp-ii'
          '12': 'pup'
          '13': 'argus'
          '14': 'emcon'
          '15': 'xnet'
          '16': 'chaos'
          '17': 'udp'
          '18': 'mux'
          '19': 'dcn-meas'
          '20': 'hmp'
          '21': 'prm'
          '22': 'xns-idp'
          '23': 'trunk-1'
          '24': 'trunk-2'
          '25': 'leaf-1'
          '26': 'leaf-2'
          '27': 'rdp'
          '28': 'irtp'
          '29': 'iso-tp4'
          '30': 'netblt'
          '31': 'mfe-nsp'
          '32': 'merit-inp'
          '33': 'dccp'
          '34': '3pc'
          '35': 'idpr'
          '36': 'xtp'
          '37': 'ddp'
          '38': 'idpr-cmtp'
          '39': 'tp++'
          '40': 'il'
          '41': 'ipv6'
          '42': 'sdrp'
          '43': 'ipv6-route'
          '44': 'ipv6-frag'
          '45': 'idrp'
          '46': 'rsvp'
          '47': 'gre'
          '48': 'dsr'
          '49': 'bna'
          '50': 'esp'
          '51': 'ah'
          '52': 'i-nlsp'
          '53': 'swipe'
          '54': 'narp'
          '55': 'mobile'
          '56': 'tlsp'
          '57': 'skip'
          '58': 'ipv6-icmp'
          '59': 'ipv6-nonxt'
          '60': 'ipv6-opts'
          '62': 'cftp'
          '64': 'sat-expak'
          '65': 'kryptolan'
          '66': 'rvd'
          '67': 'ippc'
          '69': 'sat-mon'
          '70': 'visa'
          '71': 'ipcu'
          '72': 'cpnx'
          '73': 'cphb'
          '74': 'wsn'
          '75': 'pvp'
          '76': 'br-sat-mon'
          '77': 'sun-nd'
          '78': 'wb-mon'
          '79': 'wb-expak'
          '80': 'iso-ip'
          '81': 'vmtp'
          '82': 'secure-vmtp'
          '83': 'vines'
          '84': 'iptm/ttp'
          '85': 'nsfnet-igp'
          '86': 'dgp'
          '87': 'tcf'
          '88': 'eigrp'
          '89': 'ospf'
          '90': 'sprite-rpc'
          '91': 'larp'
          '92': 'mtp'
          '93': 'ax.25'
          '94': 'os'
          '95': 'micp'
          '96': 'scc-sp'
          '97': 'etherip'
          '98': 'encap'
          '100': 'gmtp'
          '101': 'ifmp'
          '102': 'pnni'
          '103': 'pim'
          '104': 'aris'
          '105': 'scps'
          '106': 'qnx'
          '107': 'a/n'
          '108': 'ipcomp'
          '109': 'snp'
          '110': 'compaq-peer'
          '111': 'ipx-in-ip'
          '112': 'vrrp'
          '113': 'pgm'
          '115': 'l2tp'
          '116': 'ddx'
          '117': 'iatp'
          '118': 'stp'
          '119': 'srp'
          '120': 'uti'
          '121': 'smp'
          '122': 'sm'
          '123': 'ptp'
          '124': 'is-is'
          '125': 'fire'
          '126': 'crtp'
          '127': 'crudp'
          '128': 'sscopmce'
          '129': 'iplt'
          '130': 'sps'
          '131': 'pipe'
          '132': 'sctp'
          '133': 'fc'
          '134': 'rsvp-e2e-ignor'
          '135': 'mobility'
          '136': 'udplite'
          '137': 'mpls-in-ip'
          '138': 'manet'
          '139': 'hip'
          '140': 'shim6'
          '141': 'wesp'
          '142': 'rohc'
          '143': 'ethernet'
        mapping:
          network.iana_number: network.transport

  set_custom_fields:
    actions:
      - set:
          netflow.tcp.flags: '{{json_event.message.TCP_FLAGS or json_event.message.tcpControlBits}}'
          netflow.next_hop: '{{json_event.message.NEXT_HOP or json_event.message.IPV4_NEXT_HOP or json_event.message.IPV6_NEXT_HOP or json_event.message.ipNextHopIPv4Address or json_event.message.ipNextHopIPv6Address}}'
          netflow.bgp.next_hop: '{{json_event.message.BGP_IPV4_NEXT_HOP or json_event.message.BGP_IPV6_NEXT_HOP or json_event.message.bgpNextHopIPv4Address or json_event.message.bgpNextHopIPv6Address}}'
