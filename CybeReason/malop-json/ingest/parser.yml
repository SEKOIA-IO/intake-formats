name: cybereason-malop-json
pipeline:
  - name: parsed_event
    external:
      name: json.parse-json
  - name: parsed_timestamp
    external:
      name: date.parse
      properties:
        input_field: '{{parsed_event.message.lastUpdateTime | string}}'
        output_field: datetime
    filter: '{{parsed_event.message["@class"] in [".MalopInboxModel", ".DetectionMalopDetailsModel"] and parsed_event.message.lastUpdateTime != null}}'
  - name: parsed_creation_time
    external:
      name: date.parse
      properties:
        input_field: '{{parsed_event.message.creationTime | string}}'
        output_field: datetime
    filter: '{{parsed_event.message["@class"] in [".MalopInboxModel", ".DetectionMalopDetailsModel"] and parsed_event.message.creationTime != null}}'
  - name: parsed_closing_time
    external:
      name: date.parse
      properties:
        input_field: '{{parsed_event.message.malopCloseTime | string}}'
        output_field: datetime
    filter: '{{parsed_event.message["@class"] in [".MalopInboxModel", ".DetectionMalopDetailsModel"] and parsed_event.message.malopCloseTime != null}}'
  - name: parsed_timestamp
    external:
      name: date.parse
      properties:
        input_field: '{{parsed_event.message.metadata.timestamp | string}}'
        output_field: datetime
    filter: '{{parsed_event.message.metadata.timestamp != null}}'
  - name: parsed_suspicion
    external:
      name: grok.match
      properties:
        input_field: '{{parsed_event.message.name}}'
        output_field: technique
        pattern: '%{TID:id} - %{DATA:name} : %{DATA}'
        custom_patterns:
          TID: "T%{NUMBER}"
    filter: '{{parsed_event.message["@class"] == ".SuspicionModel"}}'
  - name: set_common_fields
  - name: handle_malop
    filter: '{{parsed_event.message["@class"] in [".MalopInboxModel", ".DetectionMalopDetailsModel"]}}'
  - name: handle_model
    filter: '{{parsed_event.message["@class"] in [".MachineInboxModel", ".MachineDetailsModel", ".UserInboxModel", ".UserDetailsModel", ".FileSuspectDetailsModel", ".SuspicionModel"]}}'
  - name: handle_machine_model
    filter: '{{parsed_event.message["@class"] in [".MachineInboxModel", ".MachineDetailsModel"]}}'
  - name: handle_user_model
    filter: '{{parsed_event.message["@class"] in [".UserInboxModel", ".UserDetailsModel"]}}'
  - name: handle_file_suspect_model
    filter: '{{parsed_event.message["@class"] == ".FileSuspectDetailsModel"}}'
  - name: handle_suspicion_model
    filter: '{{parsed_event.message["@class"] == ".SuspicionModel"}}'

stages:
  set_common_fields:
    actions:
      - set:
          observer.vendor: 'Cybereason'
          observer.product: 'Cybereason'
  handle_malop:
    actions:
      - set:
          '@timestamp': '{{parsed_timestamp.datetime}}'
        filter: '{{parsed_event.message.lastUpdateTime != null}}' 
      - set:
          file.name: '{{parsed_event.message.primaryRootCauseName}}'
          file.hash.sha1: '{{parsed_event.message.rootCauseElementHashes}}'
        filter: '{{parsed_event.message.rootCauseElementType == "File"}}' 
      - set:
          process.name: '{{parsed_event.message.primaryRootCauseName}}'
          process.hash.sha1: '{{parsed_event.message.rootCauseElementHashes}}'
        filter: '{{parsed_event.message.rootCauseElementType == "Process"}}' 
      - set:
          event.kind: 'alert'
          event.category: ['malware']
          event.type: ['info']
          event.code: "malop"
          cybereason.malop.id: '{{parsed_event.message.guid}}'
          cybereason.malop.status: '{{parsed_event.message.malopStatus}}'
          cybereason.malop.priority: '{{parsed_event.message.malopPriority}}'
          cybereason.malop.severity: '{{parsed_event.message.malopSeverity}}'
          cybereason.malop.detection.type: '{{parsed_event.message.malopDetectionType}}'
          cybereason.malop.detection.engines: '{{parsed_event.message.detectionEngines}}'
          cybereason.malop.root_cause.type: '{{parsed_event.message.rootCauseElementType}}'
          cybereason.malop.root_cause.name: '{{parsed_event.message.primaryRootCauseName}}'
          cybereason.malop.is_edr: '{{parsed_event.message.edr}}'
      - set:
          cybereason.malop.created_at: '{{parsed_creation_time.datetime}}'
        filter: '{{parsed_event.message.malopCloseTime != null}}' 
      - set:
          cybereason.malop.modified_at: '{{parsed_timestamp.datetime}}'
        filter: '{{parsed_event.message.creationTime != null}}' 
      - set:
          cybereason.malop.closed_at: '{{parsed_closing_time.datetime}}'
        filter: '{{parsed_event.message.malopCloseTime != null}}' 
  handle_model:
    actions:
      - set:
          '@timestamp': '{{parsed_timestamp.datetime}}'
        filter: '{{parsed_event.message.metadata.timestamp != null}}' 
      - set:
          event.kind: 'event'
          cybereason.malop.id: '{{parsed_event.message.metadata.malopGuid}}'
  handle_machine_model:
    actions:
      - set:
          event.category: ['host']
          event.type: ['info']
          event.code: "machine"
          host.name: '{{parsed_event.message.displayName}}'
          host.domain: '{{parsed_event.message.adDNSHostName}}'
          cybereason.malop.host.id: '{{parsed_event.message.guid}}'
          cybereason.malop.host.is_online: '{{parsed_event.message.connected}}'
          cybereason.malop.host.is_isolated: '{{parsed_event.message.isolated}}'
      - set:
          host.os.type: '{{parsed_event.message.osType.lower()}}'
        filter: '{{parsed_event.message.osType != null}}' 
  handle_user_model:
    actions:
      - set:
          event.category: ['session']
          event.type: ['info']
          event.code: "user"
          user.name: '{{parsed_event.message.displayName}}'
          cybereason.malop.user.id: '{{parsed_event.message.guid}}'
          cybereason.malop.user.is_admin: '{{parsed_event.message.admin}}'
      - set:
          user.name: '{{parsed_event.message.displayName.split("\\")[1]}}'
          user.domain: '{{parsed_event.message.displayName.split("\\")[0]}}'
        filter: '{{parsed_event.message.displayName != null and "\\" in parsed_event.message.displayName}}' 
  handle_file_suspect_model:
    actions:
      - set:
          event.category: ['file']
          event.type: ['info']
          event.code: "file_suspect"
          file.name: '{{parsed_event.message.elementDipslayName}}'
          file.path: '{{parsed_event.message.correctedPath}}'
          file.hash.sha1: '{{parsed_event.message.sha1String}}'
          host.name: '{{parsed_event.message.ownerMachineName}}'
          cybereason.malop.host.id: '{{parsed_event.message.ownerMachineGuid}}'
          cybereason.malop.file.id: '{{parsed_event.message.guid}}'
          cybereason.malop.file.decision.status_code: '{{parsed_event.message.detectionDecisionStatus}}'
  handle_suspicion_model:
    actions:
      - set:
          event.category: ['intrusion_detection']
          event.type: ['info']
          event.code: "suspicion"
          cybereason.malop.suspicion.id: '{{parsed_event.message.guid}}'
          cybereason.malop.suspicion.name: '{{parsed_event.message.name}}'
          cybereason.malop.suspicion.evidences: '{{parsed_event.message.evidences}}'
      - set:
          threat.technique.id: '{{parsed_suspicion.technique.id}}'
          threat.technique.name: '{{parsed_suspicion.technique.name}}'
        filter: '{{parsed_suspicion.technique != null}}'
