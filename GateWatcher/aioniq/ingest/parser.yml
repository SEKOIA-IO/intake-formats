name: gatewatcher-aioniq-legacy-format
pipeline:
  - name: json_load
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
        output_field: message
  - name: parsed_date
    external:
      name: date.parse
      properties:
        input_field: "{{json_load.message.timestamp_detected}}"
        output_field: datetime
        format: null
        timezone: UTC
  - name: common
  - name: malcore
    filter: '{{json_load.message.type == "malcore"}}'
  - name: suricata
    filter: '{{json_load.message.type == "suricata"}}'
  - name: powershell
    description: powershell
  - name: shellcode
    description: shellcode
  - name: fileinfo
    description: fileinfo
  - name: dga
    description: DGA
  - name: retrohunt
    description: Retrohunt
  - name: tls
    description: TLS
stages:
  common:
    actions:
      - set:
          source.ip: "{{json_load.message.src_ip}}"
        filter: "{{json_load.message.src_ip | is_ipaddress}}"
      - set:
          destination.ip: "{{json_load.message.dest_ip}}"
        filter: "{{json_load.message.dest_ip | is_ipaddress}}"
      - set:
          "@timestamp": "{{parsed_date.datetime}}"
          source.port: "{{json_load.message.src_port}}"
          observer.name: "{{json_load.message.gcap}}"
          observer.type: ids
          event.category:
            - network
          event.severity: "{{json_load.message.severity}}"
          destination.port: "{{json_load.message.dest_port}}"
          gatewatcher.gcap: "{{json_load.message.gcap}}"
          gatewatcher.type: "{{json_load.message.type}}"
          network.protocol: "{{json_load.message.app_proto}}"
          observer.version: "0.2"
          gatewatcher.state: "{{json_load.message.state}}"
          gatewatcher.stats: "{{json_load.message.stats}}"
          network.transport: "{{json_load.message.proto}}"
          observer.hostname: "{{json_load.message.host}}"
          gatewatcher.flow_id: "{{json_load.message.flow_id}}"
          gatewatcher.gcenter: "{{json_load.message.gcenter}}"
          gatewatcher.payload: "{{json_load.message.payload}}"
          gatewatcher.event_type: "{{json_load.message.event_type}}"
          gatewatcher.payload_printable: "{{json_load.message.payload_printable}}"
          gatewatcher.timestamp_analyzed: "{{json_load.message.timestamp_analyzed}}"
          gatewatcher.timestamp_detected: "{{json_load.message.timestamp_detected}}"
      - set:
          event.kind: "alert"
        filter: "{{json_load.message.event_type == 'alert'}}"
      - set:
          observer.mac: >-
            ["{{json_load.message.ether.src_mac}}",
            "{{json_load.message.ether.dest_mac}}"]
        filter: "{{json_load.message.ether != null}}"
  malcore:
    actions:
      - set:
          url.path: "{{json_load.message.http.url}}"
          file.name: "{{json_load.message.fileinfo.filename}}"
          file.size: "{{json_load.message.fileinfo.size}}"
          event.type:
            - info
          url.domain: "{{json_load.message.http.hostname}}"
          http.version: "{{json_load.message.http.version}}"
          file.hash.md5: "{{json_load.message.fileinfo.md5}}"
          event.category:
            - malware
          file.hash.sha256: "{{json_load.message.fileinfo.sha256}}"
          http.request.method: "{{json_load.message.http.http_method}}"
          user_agent.original: "{{json_load.message.http.http_user_agent}}"
          gatewatcher.fileinfo: "{{json_load.message.fileinfo}}"
          gatewatcher.retroact: "{{json_load.message.retroact}}"
          gatewatcher.nb_rescans: "{{json_load.message.nb_rescans}}"
          gatewatcher.malcore.code: "{{json_load.message.code|string}}"
          gatewatcher.malcore.file: "{{json_load.message.file}}"
          gatewatcher.malcore.magic: "{{json_load.message.magic}}"
          http.response.status_code: "{{json_load.message.http.status}}"
          gatewatcher.malcore.replica: "{{json_load.message.replica}}"
          gatewatcher.reporting_token: "{{json_load.message.reporting_token}}"
          gatewatcher.malcore.detail_threat_found: "{{json_load.message.detail_threat_found}}"
  suricata:
    actions:
      - set:
          dns.id: "{{json_load.message.dns.id}}"
          rule.id: "{{json_load.message.alert.signature_id|string}}"
          dns.type: "{{json_load.message.dns.type}}"
          url.path: "{{json_load.message.http.url}}"
          file.name: "{{json_load.message.fileinfo.filename}}"
          file.size: "{{json_load.message.fileinfo.size}}"
          rule.name: "{{json_load.message.alert.signature}}"
          url.domain: "{{json_load.message.http.hostname}}"
          event.action: "{{json_load.message.alert.action}}"
          http.version: "{{json_load.message.http.version}}"
          rule.version: "{{json_load.message.alert.rule.version}}"
          source.bytes: "{{json_load.message.flow.bytes_toserver}}"
          file.hash.md5: "{{json_load.message.fileinfo.md5}}"
          rule.category: "{{json_load.message.alert.category}}"
          source.packets: "{{json_load.message.flow.pkts_toserver}}"
          gatewatcher.ftp: "{{json_load.message.ftp}}"
          gatewatcher.nfs: "{{json_load.message.nfs}}"
          gatewatcher.rdp: "{{json_load.message.rdp}}"
          gatewatcher.rfb: "{{json_load.message.rfb}}"
          gatewatcher.rpc: "{{json_load.message.rpc}}"
          gatewatcher.sip: "{{json_load.message.sip}}"
          gatewatcher.smb: "{{json_load.message.smb}}"
          gatewatcher.ssh: "{{json_load.message.ssh}}"
          file.hash.sha256: "{{json_load.message.fileinfo.sha256}}"
          gatewatcher.dhcp: "{{json_load.message.dhcp}}"
          gatewatcher.dnp3: "{{json_load.message.dnp3}}"
          gatewatcher.krb5: "{{json_load.message.krb5}}"
          gatewatcher.mqtt: "{{json_load.message.mqtt}}"
          gatewatcher.smtp: "{{json_load.message.smtp}}"
          gatewatcher.snmp: "{{json_load.message.snmp}}"
          gatewatcher.tftp: "{{json_load.message.tftp}}"
          destination.bytes: "{{json_load.message.flow.bytes_toclient}}"
          dns.question.name: "{{json_load.message.dns.rrname}}"
          dns.question.type: "{{json_load.message.dns.rrtype}}"
          gatewatcher.http2: "{{json_load.message.http.http2}}"
          gatewatcher.ikev2: "{{json_load.message.ikev2}}"
          destination.packets: "{{json_load.message.flow.pkts_toclient}}"
          http.request.method: "{{json_load.message.http.http_method}}"
          user_agent.original: "{{json_load.message.http.http_user_agent}}"
          gatewatcher.ftp_data: "{{json_load.message.ftp_data}}"
          gatewatcher.email: "{{json_load.message.email}}"
          http.response.status_code: "{{json_load.message.http.status}}"
  powershell:
    actions:
      - set:
          event.module: "{{json_load.message.sub_type}}"
          gatewatcher.sample_id: "{{json_load.message.file_id}}"
          gatewatcher.scores.analysis: "{{json_load.message.scores.analysis}}"
          gatewatcher.scores.proba_obfuscated: "{{json_load.message.scores.proba_obfuscated}}"
          gatewatcher.scores.analysis_detailed: "{{json_load.message.scores.analysis_detailed}}"
  shellcode:
    actions:
      - set:
          event.module: "{{json_load.message.event_type}}"
          gatewatcher.calls: "{{json_load.message.calls}}"
          gatewatcher.encodings: "{{json_load.message.encodings}}"
          gatewatcher.sample_id: "{{json_load.message.sample_id}}"
          gatewatcher.sub_type: "{{json_load.message.sub_type}}"
  fileinfo:
    actions:
      - set:
          gatewatcher.filemagic: "{{json_load.message.fileinfo.magic}}"
  dga:
    actions:
      - set:
          gatewatcher.type: "{{json_load.message.type}}"
          destination.domain: "{{json_load.message.domain_name}}"
          gatewatcher.probability: "{{json_load.message.probability}}"
          gatewatcher.matched_event: "{{json_load.message.matched_event}}"
  retrohunt:
    actions:
      - set:
          gatewatcher.tlp: "{{json_load.message.tlp}}"
          gatewatcher.ttp: "{{json_load.message.ttp}}"
          gatewatcher.risk: "{{json_load.message.risk}}"
          gatewatcher.ioc_id: "{{json_load.message.ioc_id}}"
          gatewatcher.case_id: "{{json_load.message.case_id}}"
          gatewatcher.families: "{{json_load.message.families}}"
          gatewatcher.ioc_tags: "{{json_load.message.ioc_tags}}"
          gatewatcher.ioc_type: "{{json_load.message.ioc_type}}"
          gatewatcher.campaigns: "{{json_load.message.campaigns}}"
          gatewatcher.ioc_value: "{{json_load.message.ioc_value}}"
          gatewatcher.meta_data: "{{json_load.message.meta_data}}"
          gatewatcher.relations: "{{json_load.message.relations}}"
          gatewatcher.signature: "{{json_load.message.signature}}"
          gatewatcher.categories: "{{json_load.message.categories}}"
          gatewatcher.usage_mode: "{{json_load.message.usage_mode}}"
          gatewatcher.description: "{{json_load.message.description}}"
          gatewatcher.probability: "{{json_load.message.probability}}"
          gatewatcher.threat_actor: "{{json_load.message.threat_actor}}"
          gatewatcher.matched_event: "{{json_load.message.matched_event}}"
          gatewatcher.external_links: "{{json_load.message.external_links}}"
          gatewatcher.vulnerabilities: "{{json_load.message.vulnerabilities}}"
          gatewatcher.ioc_updated_date: "{{json_load.message.ioc_updated_date}}"
          gatewatcher.targeted_sectors: "{{json_load.message.targeted_sectors}}"
          gatewatcher.ioc_creation_date: "{{json_load.message.ioc_creation_date}}"
          gatewatcher.kill_chain_phases: "{{json_load.message.kill_chain_phases}}"
          gatewatcher.timestamp_package: "{{json_load.message.timestamp_package}}"
          gatewatcher.matched_event_type: "{{json_load.message.matched_event_type}}"
          gatewatcher.targeted_countries: "{{json_load.message.targeted_countries}}"
          gatewatcher.targeted_platforms: "{{json_load.message.targeted_platforms}}"
          gatewatcher.targeted_organizations: "{{json_load.message.targeted_organizations}}"
  tls:
    actions:
      - set:
          tls.server.issuer: "{{json_load.message.tls.issuerdn}}"
          tls.server.not_before: "{{json_load.message.tls.notbefore}}"
          tls.server.certificate_chain: "{{json_load.message.tls.chain}}"
          tls.server.subject: "{{json_load.message.tls.subject}}"
          gatewatcher.tls: "{{json_load.message.tls}}"
          gatewatcher.tls_sni: "{{json_load.message.tls.sni}}"
          gatewatcher.tls_fingerprint: "{{json_load.message.tls.fingerprint}}"
          tls.version: "{{json_load.message.tls.version}}"
          tls.server.not_after: "{{json_load.message.tls.notafter}}"
          tls.server.ja3s: "{{json_load.message.tls.ja3s.hash}}"
